<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>My Notes</title>
  
  
  <link href="https://berlin2022.github.io/atom.xml" rel="self"/>
  
  <link href="https://berlin2022.github.io/"/>
  <updated>2022-08-01T10:43:14.482Z</updated>
  <id>https://berlin2022.github.io/</id>
  
  <author>
    <name>Berlin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>采集json列表页流程记录</title>
    <link href="https://berlin2022.github.io/2022-08-01-8856ceba.html"/>
    <id>https://berlin2022.github.io/2022-08-01-8856ceba.html</id>
    <published>2022-08-01T02:55:45.000Z</published>
    <updated>2022-08-01T10:43:14.482Z</updated>
    
    <content type="html"><![CDATA[<div data-timeline="206"></div><br><p>(Weather::武汉 ☀️   29°C ←15km&#x2F;h)</p><blockquote><p>美好的一天从今天开始！</p></blockquote><h2 id="✏工作日志"><a href="#✏工作日志" class="headerlink" title="✏工作日志"></a>✏工作日志</h2><p>采集目标网址为：<code>https://www.whsshg.com/</code><br>名称： 武汉欣申试化工科技有限公司<br>审核时间：2018-12-26<br>收录： 208<br>Content-Type: application&#x2F;json<br>服务器类型：nginx&#x2F;1.18.0</p><p>要求是登录采集所有产品及清单，经登录测试发现登录和不登陆采集没有任何区别，所以无需登陆采集。</p><h2 id="结构分析"><a href="#结构分析" class="headerlink" title="结构分析"></a>结构分析</h2><p>化学试剂  </p><ul><li>通用试剂  (314439)<ul><li>材料科学(29615)</li><li>生命科学(179933)</li><li>分析科学(104880)</li><li>环境科学(11)</li></ul></li><li>高端试剂  (2721092)<ul><li>高端科学 (1695683)</li><li>其他试剂 (1011057)</li><li>标准品 (14352)</li></ul></li><li>管控品  (2213)<ul><li>易制毒 (283)</li><li>易制爆 (1930)<br>实验耗材 (10573)</li></ul></li><li>安全防护&#x2F;办公日用 (228)<ul><li>办公日用 (80)</li><li>除尘 (2)</li><li>管路&#x2F;设备配件 (16)</li><li>清洁用具 (15)</li><li>身体防护 (115)</li></ul></li><li>计量&#x2F;实验&#x2F;常规耗材 (1362)<ul><li>称量&#x2F;取样&#x2F;加样 (105)</li><li>定制玻璃 (1)</li><li>反应&#x2F;连接&#x2F;冷凝 (344)</li><li>加热&#x2F;降温&#x2F;温度湿度计 (48)</li><li>密封&#x2F;搅拌&#x2F;塞子 (98)</li><li>清洗&#x2F;收集&#x2F;回收 (42)</li><li>容器&#x2F;收纳&#x2F;周转 (50)</li><li>实验器具 (8)</li><li>研磨&#x2F;分离&#x2F;过滤 (166)</li><li>样品储存&#x2F;样品管理 (149)</li><li>移液&#x2F;分液 (69)</li><li>蒸发&#x2F;干燥 (84)</li><li>量器 (198)</li></ul></li><li>生物&#x2F;分析&#x2F;特殊耗材 (914)<ul><li>分子生物 (55)</li><li>检测耗材 (448)</li><li>检查耗材 (2)</li><li>色谱耗材 (220)</li><li>特殊耗材 (2)</li><li>微生物学 (4)</li><li>细胞培养 (35)</li><li>样品前处理 (107)</li><li>医用耗材&#x2F;切割耗材 (21)</li><li>组织学&#x2F;生物通过耗材 (20)</li></ul></li><li>其他实验耗材 (2)</li><li>其他订购耗材  (7723)<ul><li>其他耗材 (7723)</li></ul></li><li>玻璃耗材  (344)<ul><li>玻璃器皿 (344)<br>仪器设备 (36)</li></ul></li><li>通用仪器&#x2F;测量仪器 (36)<ul><li>PH计 (1)</li><li>泵 (3)</li><li>反应釜 (2)</li><li>加热板 (9)</li><li>搅拌器 (16)</li><li>水浴锅 (2)</li><li>酸度计</li><li>天平 (2)</li><li>紫外灯 (1)</li></ul></li></ul><h2 id="采集分析"><a href="#采集分析" class="headerlink" title="采集分析"></a>采集分析</h2><p>抓包分页特征<br><code>&#123;&quot;page&quot;:1,&quot;size&quot;:20,&quot;condition&quot;:&#123;&quot;backClassIds&quot;:[113,114,115,116,117,118,119,209,120,121],&quot;brandId&quot;:&quot;&quot;,&quot;specification&quot;:&quot;&quot;,&quot;timeOfDelivery&quot;:&quot;&quot;&#125;&#125;</code></p><p>分页样式<br><img src="https://img.16tui.com/obsidian/202207251550078.png"></p><p>js调用部分代码</p><p><img src="https://img.16tui.com/obsidian/202207251552245.png"></p><p>通过对分页代码的搜索以及网站目录的扫描，判定是php的Vue框架的源码，具体是哪套程序不清楚。<br><img src="https://img.16tui.com/obsidian/202207251629834.png"></p><p>相关追踪</p><ul><li><a href="https://blog.csdn.net/LL9504/article/details/105907061/">Vue的el-pagination组件，current-page 绑定的数据变了，但是页面当前页码并没有变的问题</a> </li><li><a href="https://blog.csdn.net/qiuqiu1894/article/details/105139028">解决el-pagination组件，current-page 绑定的数据变了，但是页面当前页码并没有变的问题</a> </li><li><a href="https://github.com/axios">axios 项目</a> </li><li><a href="https://blog.csdn.net/qq_36995521/article/details/115223647">axios在vue中的使用</a></li></ul><p>通过查找并没有发现任何链接<br>通过猜测分页php页面和结构也没有测出来分页的结构</p><h2 id="跳过分页"><a href="#跳过分页" class="headerlink" title="跳过分页"></a>跳过分页</h2><p>根据页面链接结构，进行规律分析，逆向采集</p><ul><li>随机内容地网址<ul><li><a href="https://www.whsshg.com/detailsPage?id=122196122927355">https://www.whsshg.com/detailsPage?id=122196122927355</a></li><li><a href="https://www.whsshg.com/detailsPage?id=121718800646258">https://www.whsshg.com/detailsPage?id=121718800646258</a></li><li><a href="https://www.whsshg.com/detailsPage?id=11084267967557">https://www.whsshg.com/detailsPage?id=11084267967557</a></li><li><a href="https://www.whsshg.com/detailsPage?id=133182622007329">https://www.whsshg.com/detailsPage?id=133182622007329</a></li><li><a href="https://www.whsshg.com/detailsPage?id=110428740911115">https://www.whsshg.com/detailsPage?id=110428740911115</a></li><li><a href="https://www.whsshg.com/detailsPage?id=122452503954474">https://www.whsshg.com/detailsPage?id=122452503954474</a></li><li><a href="https://www.whsshg.com/detailsPage?id=122391078372657">https://www.whsshg.com/detailsPage?id=122391078372657</a></li></ul></li></ul><p>跨度较大，规律不明显，前面10位可能是时间戳，后面4-5位可能是ID号，测试了一下较难实现，一时陷入僵局。</p><h2 id="采集清单获取方案"><a href="#采集清单获取方案" class="headerlink" title="采集清单获取方案"></a>采集清单获取方案</h2><p>主要是列表翻页实现不了，那就设置多个条件，尽可能多的获取清单</p><p>离线浏览器抓取页面  不行<br>xeun抓取全站链接   抓不透</p><ul><li><a href="https://www.whsshg.com/classificationDetails?id=5390&amp;state">https://www.whsshg.com/classificationDetails?id=5390&amp;state</a>         栏目可以提取json，但是获取的地址是假的，一时没有办法把json结果提取出来<br><img src="https://img.16tui.com/obsidian/202207252353632.png"></li></ul><ol><li><p>获取分类及id<br> <a href="https://mall-api.whsshg.com/mall/api/homePage/navigation">https://mall-api.whsshg.com/mall/api/homePage/navigation</a></p></li><li><p>通过分类id，获取一页<br> <a href="https://www.whsshg.com/classificationDetails?id=5384">https://www.whsshg.com/classificationDetails?id=5384</a></p></li><li><p>通过搜索关键词采集、cas号、品牌<br> <a href="https://www.whsshg.com/searchResult?goodsName=%E5%85%B3%E9%94%AE%E8%AF%8D">https://www.whsshg.com/searchResult?goodsName=关键词</a></p></li><li><p><a href="https://www.whsshg.com/detailsPage?id=21353">https://www.whsshg.com/detailsPage?id=21353</a>     可以提取内容部分</p></li></ol><p>测试<br><a href="https://www.whsshg.com/detailsPage?id=118570929356801">https://www.whsshg.com/detailsPage?id=118570929356801</a><br><a href="https://www.whsshg.com/detailsPage?id=118570929356802">https://www.whsshg.com/detailsPage?id=118570929356802</a><br><a href="https://www.whsshg.com/detailsPage?id=118570929356803%EF%BC%88%E6%97%A0%EF%BC%89">https://www.whsshg.com/detailsPage?id=118570929356803（无）</a><br><a href="https://www.whsshg.com/detailsPage?id=118570929356804">https://www.whsshg.com/detailsPage?id=118570929356804</a><br><a href="https://www.whsshg.com/detailsPage?id=118570929356813%EF%BC%88%E6%97%A0%EF%BC%89">https://www.whsshg.com/detailsPage?id=118570929356813（无）</a>  </p><ul><li>提取分类链接<ul><li><a href="https://www.whsshg.com/classificationDetails?id=5377">https://www.whsshg.com/classificationDetails?id=5377</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5380">https://www.whsshg.com/classificationDetails?id=5380</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5383">https://www.whsshg.com/classificationDetails?id=5383</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5384">https://www.whsshg.com/classificationDetails?id=5384</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5385">https://www.whsshg.com/classificationDetails?id=5385</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5386">https://www.whsshg.com/classificationDetails?id=5386</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5381">https://www.whsshg.com/classificationDetails?id=5381</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5387">https://www.whsshg.com/classificationDetails?id=5387</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5388">https://www.whsshg.com/classificationDetails?id=5388</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5389">https://www.whsshg.com/classificationDetails?id=5389</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5448">https://www.whsshg.com/classificationDetails?id=5448</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5382">https://www.whsshg.com/classificationDetails?id=5382</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5390">https://www.whsshg.com/classificationDetails?id=5390</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5391">https://www.whsshg.com/classificationDetails?id=5391</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5378">https://www.whsshg.com/classificationDetails?id=5378</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5392">https://www.whsshg.com/classificationDetails?id=5392</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5395">https://www.whsshg.com/classificationDetails?id=5395</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5398">https://www.whsshg.com/classificationDetails?id=5398</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5399">https://www.whsshg.com/classificationDetails?id=5399</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5400">https://www.whsshg.com/classificationDetails?id=5400</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5401">https://www.whsshg.com/classificationDetails?id=5401</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5393">https://www.whsshg.com/classificationDetails?id=5393</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5402">https://www.whsshg.com/classificationDetails?id=5402</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5403">https://www.whsshg.com/classificationDetails?id=5403</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5404">https://www.whsshg.com/classificationDetails?id=5404</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5405">https://www.whsshg.com/classificationDetails?id=5405</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5406">https://www.whsshg.com/classificationDetails?id=5406</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5407">https://www.whsshg.com/classificationDetails?id=5407</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5408">https://www.whsshg.com/classificationDetails?id=5408</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5409">https://www.whsshg.com/classificationDetails?id=5409</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5410">https://www.whsshg.com/classificationDetails?id=5410</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5411">https://www.whsshg.com/classificationDetails?id=5411</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5412">https://www.whsshg.com/classificationDetails?id=5412</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5413">https://www.whsshg.com/classificationDetails?id=5413</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5424">https://www.whsshg.com/classificationDetails?id=5424</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5394">https://www.whsshg.com/classificationDetails?id=5394</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5414">https://www.whsshg.com/classificationDetails?id=5414</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5415">https://www.whsshg.com/classificationDetails?id=5415</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5416">https://www.whsshg.com/classificationDetails?id=5416</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5417">https://www.whsshg.com/classificationDetails?id=5417</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5418">https://www.whsshg.com/classificationDetails?id=5418</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5419">https://www.whsshg.com/classificationDetails?id=5419</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5420">https://www.whsshg.com/classificationDetails?id=5420</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5421">https://www.whsshg.com/classificationDetails?id=5421</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5422">https://www.whsshg.com/classificationDetails?id=5422</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5437">https://www.whsshg.com/classificationDetails?id=5437</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5425">https://www.whsshg.com/classificationDetails?id=5425</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5449">https://www.whsshg.com/classificationDetails?id=5449</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5450">https://www.whsshg.com/classificationDetails?id=5450</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5451">https://www.whsshg.com/classificationDetails?id=5451</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5452">https://www.whsshg.com/classificationDetails?id=5452</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5379">https://www.whsshg.com/classificationDetails?id=5379</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5426">https://www.whsshg.com/classificationDetails?id=5426</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5438">https://www.whsshg.com/classificationDetails?id=5438</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5439">https://www.whsshg.com/classificationDetails?id=5439</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5440">https://www.whsshg.com/classificationDetails?id=5440</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5441">https://www.whsshg.com/classificationDetails?id=5441</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5442">https://www.whsshg.com/classificationDetails?id=5442</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5443">https://www.whsshg.com/classificationDetails?id=5443</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5444">https://www.whsshg.com/classificationDetails?id=5444</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5445">https://www.whsshg.com/classificationDetails?id=5445</a></li><li><a href="https://www.whsshg.com/classificationDetails?id=5446">https://www.whsshg.com/classificationDetails?id=5446</a></li></ul></li></ul><p>每个区间取最大值最小值，确定一个范围，另外，有标注具体数量，则随机抽查每个栏目的链接<br>产品和产品之间是高度重复的，因此通用试剂和高端试剂应该存在重复，则最大值在600万以内<br><img src="https://img.16tui.com/obsidian/202207261041364.png"></p><p>第一个区间，这个区间按照 1-3万<br><a href="https://www.whsshg.com/detailsPage?id=22619">https://www.whsshg.com/detailsPage?id=22619</a><br><a href="https://www.whsshg.com/detailsPage?id=21895">https://www.whsshg.com/detailsPage?id=21895</a><br><a href="https://www.whsshg.com/detailsPage?id=24832">https://www.whsshg.com/detailsPage?id=24832</a>  </p><p>经仔细观察，源码里的数据不是想要采集的数据，对内容页抓包，内容的真实数据是一个json，<br><code>https://mall-api.whsshg.com/mall/api/homePage/thirdPage/allSpecification/22619</code></p><p>将实验耗材、化学试剂、仪器设备，分别采集<br><img src="https://img.16tui.com/obsidian/202207261422561.png"></p><p><img src="https://img.16tui.com/obsidian/202207261423992.png"></p><p><img src="https://img.16tui.com/obsidian/202207261424719.png"></p><p>问题：表单不一致，有的有，有的没有<br>先置于同一个数据库中，再导出CSV，再批量处理。</p><p>21895  - 24832  这个区间进行采集测试，然后修补规则</p><p>问题：无法关联上级栏目<br>backClassId，增加到采集表单，后期关联</p><p>1 - 21894 ；24833 - 10024832；分两个范围，至于几亿，亿亿，十亿亿，这种就单独处理。</p><p>这是一个非常笨的方法，采集器12个线程全开，一个小时大概是过滤46万，接近22个小时才能过滤1000万。</p><p><a href="https://www.whsshg.com/detailsPage?id=74230922215432">https://www.whsshg.com/detailsPage?id=74230922215432</a> </p><p>尝试读取分页。。。。不行</p><p>思路：<br>通过脚本将含有id的json保存到本地<br>通过fiddler将含有id的json保存到本地</p><p>通过修改fiddler实现：</p><ul><li>[[fidder OnBeforeResponse函数修改前备份]]  </li><li>[[000-Fiddler自动保存抓到的json数据]]</li></ul><p><img src="https://img.16tui.com/obsidian/202207261629897.png"></p><p>脚本是模拟人工操作的，比较慢，这里采用fiddler保存json会相对快很多，而且脚本也简单。</p><p><img src="https://img.16tui.com/obsidian/202207261816818.png"><br><img src="https://img.16tui.com/obsidian/202207261819632.png"></p><p>提取ID号是没问题的，保存json到本地的代码好像有点问题，老出弹窗，不过不影响数据保存。</p><p><img src="https://img.16tui.com/obsidian/202207261820186.png"><br>这是因为开了采集器的原因</p><p>内容页采集很多参数漏掉了，先把所有的ID清理出来，后面再重新采集一次</p><p>纯度、分子量、MDL、危险性质、GHS图标、应用</p><p>2022-07-2711:00<br>问题1：<br>24833 - 10024832 因内存不足采集中断退出，从断点处再次获取ID，尽可能多的获取ID，保存Json时可能会漏，这样也便于直接过滤7位数及以下ID。</p><p>24833 - 4694544                    4694545 - 10024832 </p><p>问题2：<br>数据获取是间歇性的，但是数据已然足够庞大，如果用分类id对应则几百万的数据一个是放不下，第二个是即便分割成100万的单表，那用vlookup函数时也会卡爆。filter函数可能会相对好一点，但是我依然会觉得很慢，而且处理跨表时，我可能还是会依赖vlookup函数。则今晚必须吃透emeditor的透视，则数据处理起来会快很多。</p><p>问题3：<br>采集中往往会遇到相同的产品，有时候甚至型号也是一样的，品牌也是一样的，但是内容确实又有所不同。<br>第一批采集的数据尽可能是提取型号、规格、品牌来区别标题重复项，那第二批、第三批又重复呢？  </p><p>有两个想法：</p><ol><li>采集前对数据的处理比较容易实现，比如：数据合并，把两个或者多个品牌、规格、型号一样的合并到一个单元格，那一个单元格里重复呢？暂时无法解决。所以无法实现不重复的增量增加。</li><li>制造如货号、编号等后缀，与前者品牌、规格、型号区别开来。如果是未采集过的品牌，则命名与第一批次相同即可。</li></ol><p>13:58<br>还是用脚本控制网页浏览，然后fiddler自动获取json，这样子比较省事。但是fiddler会把所有进程包括采集器的采集进程也同时抓取，这是不需要的。</p><p>所有数据在这三个列表里<br><a href="https://www.whsshg.com/classificationDetails?id=5377">https://www.whsshg.com/classificationDetails?id=5377</a><br><a href="https://www.whsshg.com/classificationDetails?id=5378">https://www.whsshg.com/classificationDetails?id=5378</a><br><a href="https://www.whsshg.com/classificationDetails?id=5379">https://www.whsshg.com/classificationDetails?id=5379</a></p><ol><li>要求加载完一个页面后再加载另一个页面</li><li>到最后一个页面时停止（实现不了），设置点击上限，需要测算时间手动关闭。</li></ol><p>2022-07-28</p><p><a href="https://www.whsshg.com/classificationDetails?id=5377">https://www.whsshg.com/classificationDetails?id=5377</a>     按照40条每页，提取至800页</p><p>12小时可提取1184页约47360条，化学试剂(3039591)+通用试剂(314474)+高端试剂(2721659)+管控品(2213),实验耗材(10581)+仪器设备(36)<br>6077937+10581+36&#x3D;6088554   就是说每天拿12个小时采集需要采集128.6天，这绝对是不行的，尝试其他方法。</p><p>5877798  - 10000000</p><p>采集时需设空内容缺省值，否则在emeditor中会出现列的数量不一致，以“空”字作为填充字符串，采集后根据栏目id透视栏目名称，可以在一个表中进行添加操作，以换行符将参数整合到一个单元格，则发布步数一致，（补充一步，将耗材详情空内容缺省值设为“无详情”，还是要将不同的内容区分开发布）。</p><p>截至目前共提取到的内容ID有 19.1318万个（ID提取汇总05.csv），还差一大截，尝试通过Python获取json地址及分页地址。</p><p>2022-07-29<br>1110页   共计 19.7956万</p><p>此时最好的采集方式我想应该是Python的爬虫，于是进行如下搜索</p><blockquote><p>如何获取网页的json数据(js通过url获取json数据<br>python读取json 网页_如何使用 Python 得到网页返回正确的 Json 数据？<br>python 网页返回json<br>post: Response &#x3D; requests.post(url&#x3D;<br>python基于ajax的post<br>jsonpath(content,’$..tracking_url’)</p></blockquote><p>参考拉勾网Python爬虫代码，发现该网站也是反爬虫的，实际也对应不上<br><a href="https://www.cnblogs.com/zhaoxinhui/p/12375176.html">python爬虫（九） requests库之post请求</a><br><a href="https://www.freesion.com/article/140098505/">在爬取拉勾网的时候报错{“STATUS”:FALSE,”MSG”:”您操作太频繁,请稍后再访问”,”CLIENTIP”:”113.94.81.141”}</a>  </p><p>该实例网址 <a href="http://zaxy.zjjy.xyz/">http://zaxy.zjjy.xyz</a> 比较接近现在的情况，实际也对应不上<br><a href="https://blog.csdn.net/wenxingchen/article/details/121339089">python发送request请求并解析返回的json</a> </p><p>尝试<br><a href="https://www.csdn.net/tags/OtTaEg2sMTI3MC1ibG9n.html">post请求返回对象对json 时的处理办法</a>  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> jsonpath</span><br><span class="line"></span><br><span class="line">response = requests.post(<span class="string">&#x27;https://mall-api.whsshg.com/mall/api/homePage/secondPage?&#x27;</span>, data=json.dumps(&#123;</span><br><span class="line">  <span class="string">&quot;page&quot;</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="string">&quot;size&quot;</span>: <span class="number">20</span>,</span><br><span class="line">  <span class="string">&quot;condition&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;backClassIds&quot;</span>: [</span><br><span class="line">      <span class="number">113</span>,</span><br><span class="line">      <span class="number">114</span>,</span><br><span class="line">      <span class="number">115</span>,</span><br><span class="line">      <span class="number">116</span>,</span><br><span class="line">      <span class="number">117</span>,</span><br><span class="line">      <span class="number">118</span>,</span><br><span class="line">      <span class="number">119</span>,</span><br><span class="line">      <span class="number">209</span>,</span><br><span class="line">      <span class="number">120</span>,</span><br><span class="line">      <span class="number">121</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;brandId&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;specification&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;timeOfDelivery&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;),headers=&#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>&#125;).text</span><br><span class="line">content=json.loads(response)</span><br><span class="line">netlink=jsonpath.jsonpath(content,<span class="string">&#x27;$..tracking_url&#x27;</span>)</span><br></pre></td></tr></table></figure><p><del>代码运行为空，可能需要别的验证参数</del>，<code>tracking_url</code>对应不上，没有<code>print()</code></p><p>至此，可能需要其他办法来解决这个问题，Python毕竟才学了几天，实在搞不定。</p><p>13:41</p><p>根据已得的19+万数据，寻找每个位数区间之间的规律，采集器已经过滤至 1000万，则从1000万打头往上开始。<br>很容易就找到了如下10开头的数据段，经测试最低位是 10100000 ，直接取值至11打头，即 10999999，应该是可以获取几十万数据的，这点数据还是太少，一步步来。</p><p><img src="https://img.16tui.com/obsidian/202207291343008.png"></p><p><img src="https://img.16tui.com/obsidian/202207291346495.png"></p><p>为了有更多的区域可以选择，所以计划对每个栏目（包括子栏目），开头取5页，结尾取5页，中间取5页(每隔1000页取5页)，则打头的数据会多，也能实现尽可能多的采集过来，这种方法不能完整的采集，而且目标站点每日也在更新。如果链接以一堆毫无规律的字符串丢出来的话，这还就真没办法了，就只能用fidder保存json了，不过一晚上才4~5万数据。</p><p>再次尝试<br><a href="https://www.csdn.net/tags/OtTaEg2sMTI3MC1ibG9n.html">post请求返回对象对json 时的处理办法</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> jsonpath</span><br><span class="line"></span><br><span class="line">response = requests.post(<span class="string">&#x27;https://mall-api.whsshg.com/mall/api/homePage/secondPage?t=1659061001310&#x27;</span>, data=json.dumps(&#123;</span><br><span class="line">  <span class="string">&quot;page&quot;</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="string">&quot;size&quot;</span>: <span class="number">20</span>,</span><br><span class="line">  <span class="string">&quot;condition&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;backClassIds&quot;</span>: [</span><br><span class="line">      <span class="number">113</span>,</span><br><span class="line">      <span class="number">114</span>,</span><br><span class="line">      <span class="number">115</span>,</span><br><span class="line">      <span class="number">116</span>,</span><br><span class="line">      <span class="number">117</span>,</span><br><span class="line">      <span class="number">118</span>,</span><br><span class="line">      <span class="number">119</span>,</span><br><span class="line">      <span class="number">209</span>,</span><br><span class="line">      <span class="number">120</span>,</span><br><span class="line">      <span class="number">121</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;brandId&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;specification&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;timeOfDelivery&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;),headers=&#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,<span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36 Edg/103.0.1264.71&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>:<span class="string">&quot;https://www.whsshg.com/&quot;</span>,<span class="string">&#x27;Accept&#x27;</span>:<span class="string">&#x27;application/json, text/plain, */*&#x27;</span>,<span class="string">&#x27;token&#x27;</span>:<span class="string">&#x27;c2fa14f73e8b4bc5847f1aa62dba35f8f9d1dacb9cbc49278abb984c41ca2916&#x27;</span>&#125;).text</span><br><span class="line">content=json.loads(response)</span><br><span class="line">netlink=jsonpath.jsonpath(content,<span class="string">&#x27;$..result&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(netlink)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;---------------------------方法二----------------------------------&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://mall-api.whsshg.com/mall/api/homePage/secondPage?t=1659061001310&#x27;</span></span><br><span class="line">headers_=&#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,<span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36 Edg/103.0.1264.71&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>:<span class="string">&quot;https://www.whsshg.com/&quot;</span>,<span class="string">&#x27;Accept&#x27;</span>:<span class="string">&#x27;application/json, text/plain, */*&#x27;</span>,<span class="string">&#x27;token&#x27;</span>:<span class="string">&#x27;c2fa14f73e8b4bc5847f1aa62dba35f8f9d1dacb9cbc49278abb984c41ca2916&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">str_data = requests.get(url,headers = headers_).text</span><br><span class="line">dict_data = json.loads(str_data)</span><br><span class="line"><span class="comment"># 第一个参数是字典对象，第二个参数是jsonpath表达式</span></span><br><span class="line">ret = jsonpath.jsonpath(dict_data, <span class="string">&#x27;$..result&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(ret)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第一段代码获取到了json值，方法二没有</p><p><img src="https://img.16tui.com/obsidian/202207291415703.png"></p><p>直接获取需要的ID，因为全部结果保存和处理起来都比较麻烦，而且加载还慢，回头我再用采集器捋一捋，比如空值缺省，批量伪原创（加前后缀啊、全角半角转换啊）标题制作啊，描述制作啊，化学试剂没图片的批量添加图片啊，几个列合并到一个单元格等。。。</p><p>得到该栏目的所有的内容ID，但是怎么翻页呢？我记得是需要<code>range=[i]+1</code> 、<code>for page in range(1, 3):</code>之类的，再找找代码，Python这次我有点改观了，以前没想着用Python做采集的。</p><p><img src="https://img.16tui.com/obsidian/202207291425365.png"></p><p>网站好像崩了，手机正常访问，那应该是ip进黑名单了。我这边是拨号网络，重启一下猫就可以了。</p><p>2022-07-30<br>Python刚入门还不是很熟，好在门槛低，东拼西凑，总算把翻页和保存实现了，采集的过程也实时展现了，第一页到第二页还是比较快，后面第三页就和fidder脚本一样要隔30几秒才能返回数据，大概也就没有想象中那么快了，好在不会中断，一天24小时可以应该在10万个ID以上，感觉还是没有分区采集的办法快，但是好在数据是全的。</p><p><img src="https://img.16tui.com/obsidian/202207301434721.png"></p><p>上面的代码有问题，都抓取再保存，哪有这么大内存，还是抓取一页保存一页</p><p><img src="https://img.16tui.com/obsidian/202207301458092.png"></p><p>页面实在太长就不贴出来了，代码位于【<code>&quot;D:\desk01\python练习\post请求返回对象对json 时的处理办法【运行为空】.py&quot;</code>】</p><p>代码编写参考：<br>[[数据提取之jsonpath]]<br><a href="https://www.cnblogs.com/syw20170419/p/10972471.html">python txt文件读写（追加、覆盖）</a><br><a href="https://blog.csdn.net/qq_36756866/article/details/111590479">python读取文本并将指定内容逐行写入txt文件保存</a><br><a href="https://blog.csdn.net/t8116189520/article/details/78727971">python爬虫 如何解析json文件 json文件的解析提取和jsonpath的应用</a><br><a href="https://zhuanlan.zhihu.com/p/84979013">外行学 Python 爬虫 第六篇 动态翻页</a><br><a href="https://blog.csdn.net/KinglakeINC/article/details/114816909">【Python】爬虫入门5：跨页面请求、翻页爬取数据</a>  </p><p>2022-07-31<br>今天过来发现爬到1340页这个位置不动了，也就是5.36万数据，python代码陷入假死状态，发现要么是内存占用过大，要么是python内存管理机制（垃圾回收机制）来不及消除未引用的值，那怎么解决呢？</p><p>加了段清缓存代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;正清理缓存文件...&quot;</span>)</span><br><span class="line">os.system(<span class="string">&#x27;@echo off &amp; for /d %i in (%temp%\^_MEI*) do (rd /s /q &quot;%i&quot;)&gt;nul&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img.16tui.com/obsidian/202207311115151.png"></p><p>结果<br><img src="https://img.16tui.com/obsidian/202207311116687.png"></p><p>要保存的数据给我清空了。。。坑。。。蛋疼的很。。。从头开始。。。</p><p>还有这种采集速度着实有点慢了，听说有种方法叫做并发采集。。。一个个解决</p><p>参考：</p><ul><li><a href="https://blog.csdn.net/weixin_44648216/article/details/105796379">requests.post 小坑： 默认无超时，会阻塞</a> </li><li><a href="https://blog.csdn.net/u013832707/article/details/81476609">python分布式爬虫并解决假死问题</a></li></ul><p>到目前只能实现超时自动终止并返回一堆超时的代码，今天状态还不错，解决不了那只能是基础太差了，尝试别的解决办法。</p><p>它错任它错，我把代码复制20份，把采集页码分为20个区间，在用bat批处理同时运行，我想了一下就按照1000页来分区间，一天采2万页也就可以了，而且中途死掉的几率很小。</p><p>76193分76个区间，每个区间1005页，分三个晚上采集，同时运行25份代码</p><p>excel拉出编号页码区间</p><p><img src="https://img.16tui.com/obsidian/202207311550864.png"></p><p>sublime_text 快速切换修改</p><p><img src="https://img.16tui.com/obsidian/202207311551308.png"></p><p>批运行</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> Starting <span class="number">1</span>.py</span><br><span class="line"><span class="built_in">start</span> &quot;&quot; &quot;D:\desk01\<span class="number">111111</span>\<span class="number">1</span>.py&quot;</span><br><span class="line"><span class="built_in">echo</span> Starting <span class="number">2</span>.py</span><br><span class="line"><span class="built_in">start</span> &quot;&quot; &quot;D:\desk01\<span class="number">111111</span>\<span class="number">2</span>.py&quot;</span><br><span class="line"><span class="built_in">echo</span> Starting Google <span class="number">3</span>.py</span><br><span class="line"><span class="built_in">start</span> &quot;&quot; &quot;D:\desk01\<span class="number">111111</span>\<span class="number">3</span>.py&quot;</span><br><span class="line"><span class="built_in">echo</span> Starting <span class="number">4</span>.py</span><br><span class="line"><span class="built_in">start</span> &quot;&quot; &quot;D:\desk01\<span class="number">111111</span>\<span class="number">4</span>.py&quot;</span><br><span class="line"><span class="built_in">echo</span> Starting <span class="number">5</span>.py</span><br><span class="line"><span class="built_in">start</span> &quot;&quot; &quot;D:\desk01\<span class="number">111111</span>\<span class="number">5</span>.py&quot;</span><br><span class="line"><span class="built_in">echo</span> Starting Google <span class="number">6</span>.py</span><br><span class="line"><span class="built_in">start</span> &quot;&quot; &quot;D:\desk01\<span class="number">111111</span>\<span class="number">6</span>.py&quot;</span><br><span class="line"><span class="built_in">echo</span> Starting <span class="number">7</span>.py</span><br><span class="line"><span class="built_in">start</span> &quot;&quot; &quot;D:\desk01\<span class="number">111111</span>\<span class="number">7</span>.py&quot;</span><br><span class="line">……</span><br></pre></td></tr></table></figure><p>bat 不行，手动一个个运行</p><p><img src="https://img.16tui.com/obsidian/202207311836104.png"></p><p>翻页简直是龟速。。。。</p><p>2022-08-01</p><p>“ConnectionAbortedError: <code>[WinError 10053]</code> 您的主机中的软件中止了一个已建立的链接”报错，看到有说是因为访问频率太大导致的报错，一个是timeout。采集代码一定是可以改良的，有空再试，先用区间采集法。</p><p>10100000—10999999，这个几十万算是比较多的一个区间，后面的区间规律特别少试了几个都不能大批量采集，尝试修改Python代码，以每个子栏目为入口，size为每页20个，重新修改采集json值，这样就不用遍历查询了，经测试速度快多了，一个小时爬取到的数据相当于昨天一晚上爬数据。</p><p><img src="https://img.16tui.com/obsidian/202208011029687.gif"> </p><p>左侧绿色是采集器的过滤速度，右边黑色的是python代码爬虫的速度，这样就有可比性了，我比较擅长资源整合总是靠着多种软件组合来解决问题，本来Python的爬虫已经被我排除在学习项目之外了，如今看来Python的爬虫还是值得系统性学一下的，但还是要以实际需求为准。</p><p>这家网站又崩了，我IP又被拉入黑名单了，悄悄加了句代码，等下重启猫继续抢救一下……</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">time.sleep(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>重启两次猫，ip没有变，花了9块钱买了7天的vpn，测试没有问题，7天把数据全部采集下来，问题应该不大。</p><hr><p>这样6088554+的数据就可以在极短的时间爬出来了，然后就是数据处理阶段，几百万行的数据excel肯定是处理不了了，好在emditor学了几节课已经基本上手了，匹配图片也是个大工程，只能根据CAS号给088554+的数据配图。</p><p>思考一下配图思路：</p><ol><li>首先图片标准是要按照本站500<code>*</code>500的详情图标准，但是一般情况下是350<code>*</code>350或以下的尺寸</li><li>图片格式，根据一些大型网站的做法，均采用“.webp” 这种压缩格式，具体还不知道怎么实现的</li><li>批量修改详情大图尺寸，有FastStone Image Viewer 和 Gigapixel_59011两款软件，一个速度快，一个质量高</li><li>商品缩略图尺寸，需要批量转换，批量重命名，根据图片优化的标准最好是最小尺寸</li><li>图片采集，需采集多个站点，一些国外网站图片做的非常规范，而且是最新、高清大尺寸，缺点是加载慢</li><li>采集图片的时候，图片名称一定要修改为对应的CAS号，否则无法和本批次采集数据对应</li><li>出现多个重复CAS号的图片时，需要做筛选，尺寸大的优先，怎么筛选？</li><li>可导出多个文件夹清单，包括详细信息，尺寸大小，然后放到一个CSV，跟重复次数，按大小排序，保留最大的行。</li></ol><hr><p>标题：避免重复设置，厂家、规格、价格，货号，价格可能需要转码（转换为一串编号）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div data-timeline=&quot;206&quot;&gt;&lt;/div&gt;&lt;br&gt;

&lt;p&gt;(Weather::武汉 ☀️   29°C ←15km&amp;#x2F;h)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;美好的一天从今天开始！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;✏工作日志</summary>
      
    
    
    
    <category term="20-Diary" scheme="https://berlin2022.github.io/categories/20-Diary/"/>
    
    
    <category term="日志" scheme="https://berlin2022.github.io/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>Fiddler自动保存抓包数据，及利用Python对抓包数据进行分割并保存数据</title>
    <link href="https://berlin2022.github.io/2022-07-26-2091a89c.html"/>
    <id>https://berlin2022.github.io/2022-07-26-2091a89c.html</id>
    <published>2022-07-26T09:03:27.000Z</published>
    <updated>2022-08-01T10:43:14.466Z</updated>
    
    <content type="html"><![CDATA[<hr><p>1.fiddler打开 FiddlerScript</p><p>2.添加OnBeforeRequest代码</p><p>—<code>fso.OpenTextFile(&quot;E:\\Git_wbiao\\Request.txt&quot;,8 ,true, true);</code>【地址上文件，必须在本地已经创建好】</p><p><img src="/99-Attachment/assets/1658826207-6ee27ef2a104359e85ff514237cebf87.png"></p><p>3.添加OnBeforeResponse代码</p><p>—<code>fso.OpenTextFile(&quot;E:\\Git_wbiao\\Response.txt&quot;,8 ,true, true);</code>【地址上文件，必须在本地已经创建好】</p><p><img src="/99-Attachment/assets/1658826207-eaa39274b381bfa57e6c837fe5a5e89e.png"></p><p>备注：</p><p><strong>oSession方法及属性</strong></p><p><img src="/99-Attachment/assets/1658826207-f5e29ba2b0a9da90b546b1fdb58971a0.png"></p><p>这里我需要补充一下OpenTextFile方法：<br><strong>object.OpenTextFile(filename[, iomode[, create[, format]]])</strong><br>参数说明：<br>object：必选项。 object 应为 FileSystemObject 的名称。<br>filename：必选项。 指明要打开文件的字符串表达式。<br>iomode：可选项。 可以是三个常数之一： ForReading 、 ForWriting 或 ForAppending 。<br>create：可选项。 Boolean 值，指明当指定的 filename 不存在时是否创建新文件。 如果创建新文件则值为 True ，如果不创建则为 False 。 如果忽略，则不创建新文件。<br>format：可选项。 使用三态值中的一个来指明打开文件的格式。 如果忽略，那么文件将以 ASCII 格式打开。<br>其中：<br>iomode 参数可以是下列设置中的任一种：<br>ForReading 1 以只读方式打开文件。 不能写这个文件。<br>ForWriting 2 以写方式打开文件<br>ForAppending 8 打开文件并从文件末尾开始写。<br>我在此处直接写的8，意思就是在文件尾追加内容。<br>format 参数可以是下列设置中的任一种：<br>TristateTrue 以 Unicode 格式打开文件。<br>TristateFalse 以 ASCII 格式打开文件。<br>TristateUseDefault 使用系统默认值打开文件。<br>编码格式需要格外注意，我在用Java代码读出这些保存下来的txt文件时，会因为编码格式而报错，如果你的请求中没有中文，保存的时候可以考虑用ASCII的格式，UTF-8兼容ASCII码</p><p>4.抓包数据进行分割，并保存数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql.cursors,urllib.parse</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> random,string,requests,json,codecs</span><br><span class="line"><span class="comment">#from chardet import detect</span></span><br><span class="line"><span class="keyword">import</span> chardet,shutil</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_str_btw</span>(<span class="params">s,f,b</span>): <span class="comment">#内容分割</span></span><br><span class="line"> par = s.partition(f)</span><br><span class="line">    <span class="keyword">return</span> (par[<span class="number">2</span>].partition(b))[<span class="number">0</span>][:]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">intest_X</span>(): <span class="comment"># 数据截取，并调用selectDate方法</span></span><br><span class="line"> datX2 = []</span><br><span class="line">    <span class="comment">#file_address = &#x27;E:\\Git_wbiao\\hello-Gao\\other\\Flask\\abc.txt&#x27; # 本调调试</span></span><br><span class="line"> file_address = <span class="string">&#x27;E:\\Git_wbiao\\s_Request.txt&#x27;</span></span><br><span class="line"> <span class="keyword">for</span> A2 <span class="keyword">in</span> <span class="built_in">open</span>(file_address,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;UTF-8&#x27;</span>):</span><br><span class="line"> <span class="comment">#for A2 in open(&quot;abc.txt&quot;, &quot;r&quot;, encoding=&#x27;UTF-8&#x27;):</span></span><br><span class="line"> <span class="built_in">print</span>(A2)</span><br><span class="line">        datX2.append(A2)</span><br><span class="line">        check_AAA = get_str_btw(A2,<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">        Report_probe_log = get_str_btw(A2, <span class="string">&#x27;probe_log&#x27;</span>, <span class="string">&#x27;/track&#x27;</span>)</span><br><span class="line">        Report_event = get_str_btw(A2, <span class="string">&#x27;event=&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>)</span><br><span class="line">        Report_eventPage = get_str_btw(A2, <span class="string">&#x27;eventPage=&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>)</span><br><span class="line">        eventProps = get_str_btw(A2, <span class="string">&#x27;eventProps=&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>)</span><br><span class="line">        Report_station = get_str_btw(A2, <span class="string">&#x27;station=&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>)</span><br><span class="line">        Report_eventProps = urllib.parse.unquote(eventProps)</span><br><span class="line">        <span class="keyword">if</span> check_AAA == <span class="string">&#x27;eventPage&#x27;</span>:</span><br><span class="line"> <span class="keyword">if</span> Report_event <span class="keyword">and</span> Report_probe_log <span class="keyword">and</span> Report_eventPage <span class="keyword">and</span> Report_station <span class="keyword">and</span> Report_eventProps:</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&#x27;没有page&#x27;</span>,Report_event,Report_eventPage)</span><br><span class="line">                selectDate(event=Report_event, eventPage=<span class="string">&#x27;&#x27;</span>, eventProps=Report_eventProps,</span><br><span class="line">                           station=Report_station,probe_log=Report_probe_log)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line"> <span class="keyword">if</span> Report_event <span class="keyword">and</span> Report_probe_log <span class="keyword">and</span> Report_station <span class="keyword">and</span> Report_eventProps:</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&#x27;page&#x27;</span>,Report_event, Report_eventPage)</span><br><span class="line">                selectDate(event=Report_event, eventPage=Report_eventPage, eventProps=Report_eventProps,</span><br><span class="line">                           station=Report_station, probe_log=Report_probe_log)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">selectDate</span>(<span class="params">event,eventPage,station,eventProps,probe_log</span>): <span class="comment"># 查询数据是否存在，不存在调用IntData方法</span></span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&#x27;查询条件：&#x27;</span>,event,eventPage,<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">    sql = <span class="string">&quot;select event,eventPage from burying where event = &#x27;&quot;</span> + event + <span class="string">&quot;&#x27; and eventPage = &#x27;&quot;</span> + eventPage + <span class="string">&quot;&#x27;;&quot;</span></span><br><span class="line"> coon = pymysql.connect(user=<span class="string">&#x27;xx&#x27;</span>,</span><br><span class="line">                           passwd=<span class="string">&#x27;xx&#x27;</span>,</span><br><span class="line">                           db=<span class="string">&#x27;fast_last&#x27;</span>,</span><br><span class="line">                           host=<span class="string">&#x27;10.0.3.xx&#x27;</span>,</span><br><span class="line">                           charset=<span class="string">&#x27;utf8mb4&#x27;</span>)</span><br><span class="line">    cursor = coon.cursor()</span><br><span class="line">    S_eat = cursor.execute(sql)</span><br><span class="line">    info = cursor.fetchall()</span><br><span class="line">    coon.commit()</span><br><span class="line">    cursor.close()</span><br><span class="line">    coon.close()</span><br><span class="line">    <span class="keyword">if</span> info == ():</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&#x27;插入埋点1：&#x27;</span>,event,eventPage)</span><br><span class="line">        IntData(event=event, eventPage=eventPage, eventProps=eventProps, station=station, probe_log=probe_log)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&#x27;相同&#x27;</span>)</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">IntData</span>(<span class="params">event,eventPage,station,eventProps,probe_log</span>): <span class="comment"># 数据写入</span></span><br><span class="line"> <span class="comment">#sql = &quot;select * from Burying_aliyun ;&quot;</span></span><br><span class="line"> <span class="comment"># sql_dele = &quot;DELETE FROM test_member.hy_member WHERE member_code = 1514;&quot;</span></span><br><span class="line"> sql_insert= <span class="string">&quot;INSERT INTO `fast_last`.`burying` (`id`, `probe_log`, `event`, `eventPage`,`eventProps`,`station`, `create_time`) &quot;</span> \</span><br><span class="line">                <span class="string">&quot;VALUES (NULL,&#x27;&quot;</span> + probe_log + <span class="string">&quot;&#x27;,&#x27;&quot;</span> + event+ <span class="string">&quot;&#x27;,&#x27;&quot;</span> + eventPage + <span class="string">&quot;&#x27;,&#x27;&quot;</span> + eventProps + <span class="string">&quot;&#x27;,&#x27;&quot;</span> + station + <span class="string">&quot;&#x27;,&#x27;&quot;</span> + <span class="built_in">str</span>(datetime.now()) +<span class="string">&quot;&#x27;);&quot;</span></span><br><span class="line"> coon = pymysql.connect(user=<span class="string">&#x27;xxx&#x27;</span>,</span><br><span class="line">                           passwd=<span class="string">&#x27;xxx&#x27;</span>,</span><br><span class="line">                           db=<span class="string">&#x27;fast_last&#x27;</span>,</span><br><span class="line">                           host=<span class="string">&#x27;10.0.3.xx&#x27;</span>,</span><br><span class="line">                           charset=<span class="string">&#x27;utf8mb4&#x27;</span>)</span><br><span class="line">    cursor = coon.cursor()</span><br><span class="line">    S_eat = cursor.execute(sql_insert)</span><br><span class="line">    info = cursor.fetchmany(S_eat)</span><br><span class="line">    coon.commit()</span><br><span class="line">    cursor.close()</span><br><span class="line">    coon.close()</span><br><span class="line">    <span class="keyword">return</span> info</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encoding_utf8</span>(): <span class="comment">#处理源文件与处理文件编码不一致问题【复制源文件再转码】</span></span><br><span class="line"> target_encoding = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line"> file_address = <span class="string">&#x27;E:\\Git_wbiao\\Request.txt&#x27;</span></span><br><span class="line"> copy_file = <span class="string">&#x27;E:\\Git_wbiao\\s_Request.txt&#x27;</span></span><br><span class="line"> shutil.copy(file_address, copy_file)</span><br><span class="line">    content_A = codecs.<span class="built_in">open</span>(copy_file,<span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line">    sa_encoding = chardet.detect(content_A)[<span class="string">&#x27;encoding&#x27;</span>]</span><br><span class="line">    content_B = content_A.decode(sa_encoding,<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line">    codecs.<span class="built_in">open</span>(copy_file,<span class="string">&#x27;w&#x27;</span>,encoding=target_encoding).write(content_B)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"> encoding_utf8()</span><br><span class="line">  intest_X()</span><br></pre></td></tr></table></figure><hr><p>原网址: <a href="https://blog.csdn.net/vikesgao/article/details/116000417?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-116000417-blog-108052749.pc_relevant_default&spm=1001.2101.3001.4242.2&utm_relevant_index=3">访问</a> | 创建时间: 2022-07-26 17:03:27</p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;p&gt;1.fiddler打开 FiddlerScript&lt;/p&gt;
&lt;p&gt;2.添加OnBeforeRequest代码&lt;/p&gt;
&lt;p&gt;—&lt;code&gt;fso.OpenTextFile(&amp;quot;E:\\Git_wbiao\\Request.txt&amp;quot;,8 ,true</summary>
      
    
    
    
    <category term="05-SEO&amp;数据处理" scheme="https://berlin2022.github.io/categories/05-SEO-%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    
    <category term="fiddler" scheme="https://berlin2022.github.io/tags/fiddler/"/>
    
  </entry>
  
  <entry>
    <title>fidder OnBeforeResponse函数修改前备份</title>
    <link href="https://berlin2022.github.io/2022-07-26-28851395.html"/>
    <id>https://berlin2022.github.io/2022-07-26-28851395.html</id>
    <published>2022-07-26T08:55:01.000Z</published>
    <updated>2022-08-01T10:43:14.498Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> function <span class="title function_">OnPeekAtResponseHeaders</span><span class="params">(oSession: Session)</span> &#123;</span><br><span class="line">    <span class="comment">//FiddlerApplication.Log.LogFormat(&quot;Session &#123;0&#125;: Response header peek shows status is &#123;1&#125;&quot;, oSession.id, oSession.responseCode);</span></span><br><span class="line">    <span class="keyword">if</span> (m_DisableCaching) &#123;</span><br><span class="line">        oSession.oResponse.headers.Remove(<span class="string">&quot;Expires&quot;</span>);</span><br><span class="line">        oSession.oResponse[<span class="string">&quot;Cache-Control&quot;</span>] = <span class="string">&quot;no-cache&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((bpStatus&gt;<span class="number">0</span>) &amp;&amp; (oSession.responseCode == bpStatus)) &#123;</span><br><span class="line">        oSession[<span class="string">&quot;x-breakresponse&quot;</span>]=<span class="string">&quot;status&quot;</span>;</span><br><span class="line">        oSession.bBufferResponse = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ((<span class="literal">null</span>!=bpResponseURI) &amp;&amp; oSession.uriContains(bpResponseURI)) &#123;</span><br><span class="line">        oSession[<span class="string">&quot;x-breakresponse&quot;</span>]=<span class="string">&quot;uri&quot;</span>;</span><br><span class="line">        oSession.bBufferResponse = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> function <span class="title function_">OnBeforeResponse</span><span class="params">(oSession: Session)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (m_Hide304s &amp;&amp; oSession.responseCode == <span class="number">304</span>) &#123;</span><br><span class="line">        oSession[<span class="string">&quot;ui-hide&quot;</span>] = <span class="string">&quot;true&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    <category term="10_非主攻方向" scheme="https://berlin2022.github.io/categories/10-%E9%9D%9E%E4%B8%BB%E6%94%BB%E6%96%B9%E5%90%91/"/>
    
    
    <category term="fiddler" scheme="https://berlin2022.github.io/tags/fiddler/"/>
    
  </entry>
  
  <entry>
    <title>Fiddler自动保存抓到的json数据</title>
    <link href="https://berlin2022.github.io/2022-07-26-9addbce8.html"/>
    <id>https://berlin2022.github.io/2022-07-26-9addbce8.html</id>
    <published>2022-07-26T08:41:36.000Z</published>
    <updated>2022-08-01T10:43:14.465Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="打开fiddler后台脚本代码"><a href="#打开fiddler后台脚本代码" class="headerlink" title="打开fiddler后台脚本代码"></a>打开fiddler后台脚本代码</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#输入指令,打开脚本代码</span></span><br><span class="line">crtl<span class="operator">+</span> r</span><br></pre></td></tr></table></figure><h3 id="替换掉OnBeforeResponse-oSession-Session-这个函数（注意json数据是保存在E-x2F-x2F-spide-x2F-x2F-img这个路径下，也可自己定义）"><a href="#替换掉OnBeforeResponse-oSession-Session-这个函数（注意json数据是保存在E-x2F-x2F-spide-x2F-x2F-img这个路径下，也可自己定义）" class="headerlink" title="替换掉OnBeforeResponse(oSession: Session)这个函数（注意json数据是保存在E:&#x2F;&#x2F;spide&#x2F;&#x2F;img这个路径下，也可自己定义）"></a>替换掉OnBeforeResponse(oSession: Session)这个函数（注意json数据是保存在E:&#x2F;&#x2F;spide&#x2F;&#x2F;img这个路径下，也可自己定义）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> function <span class="title function_">OnBeforeResponse</span><span class="params">(oSession: Session)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (m_Hide304s &amp;&amp; oSession.responseCode == <span class="number">304</span>) &#123;</span><br><span class="line">        oSession[<span class="string">&quot;ui-hide&quot;</span>] = <span class="string">&quot;true&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// if (oSession.fullUrl.Contains(&quot;baidu.com&quot;))&#123;</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="number">1</span>)&#123;</span><br><span class="line">        oSession.utilDecodeResponse();<span class="comment">//消除保存的请求可能存在乱码的情况</span></span><br><span class="line"> </span><br><span class="line">        <span class="type">var</span> <span class="variable">jsonString</span> <span class="operator">=</span> oSession.GetResponseBodyAsString();</span><br><span class="line">        <span class="type">var</span> <span class="variable">responseJSON</span> <span class="operator">=</span> Fiddler.WebFormats.JSON.JsonDecode(jsonString);</span><br><span class="line">        <span class="keyword">if</span>((responseJSON.JSONObject==<span class="string">&#x27;System.Collections.ArrayList&#x27;</span> || responseJSON.JSONObject==<span class="string">&#x27;System.Collections.Hashtable&#x27;</span>)&amp;&amp;jsonString!=<span class="string">&#x27;[]&#x27;</span>&amp;&amp;jsonString!=<span class="string">&#x27;&#123;&#125;&#x27;</span>)&#123;</span><br><span class="line">            <span class="comment">// 判断是否是json数据 然后保存</span></span><br><span class="line"> </span><br><span class="line">            <span class="keyword">var</span> str=<span class="string">&#x27;&#123;&#125;&#x27;</span>;<span class="comment">//构造自己的JSON http请求的信息及返回的结果</span></span><br><span class="line">            <span class="type">var</span> <span class="variable">data</span> <span class="operator">=</span> Fiddler.WebFormats.JSON.JsonDecode(str);</span><br><span class="line">            data.JSONObject[<span class="string">&quot;request_method&quot;</span>] = oSession.RequestMethod;</span><br><span class="line">            <span class="type">var</span> <span class="variable">requestString</span> <span class="operator">=</span> oSession.GetRequestBodyAsString();</span><br><span class="line"> </span><br><span class="line">            data.JSONObject[<span class="string">&quot;request_body&quot;</span>]= requestString;</span><br><span class="line">            data.JSONObject[<span class="string">&quot;response_data&quot;</span>] = responseJSON.JSONObject;</span><br><span class="line">            data.JSONObject[<span class="string">&quot;url&quot;</span>] = oSession.fullUrl;</span><br><span class="line">            data.JSONObject[<span class="string">&quot;response_code&quot;</span>] = oSession.responseCode;</span><br><span class="line">            jsonString = Fiddler.WebFormats.JSON.JsonEncode(data.JSONObject)</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 保存文件到本地</span></span><br><span class="line">            <span class="keyword">var</span> fso;</span><br><span class="line">            <span class="keyword">var</span> file;</span><br><span class="line">            fso = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&quot;Scripting.FileSystemObject&quot;</span>);</span><br><span class="line">            file = fso.OpenTextFile(<span class="string">&quot;E:\\spider_img\\Sessions.dat&quot;</span>,<span class="number">8</span> ,<span class="literal">true</span>, <span class="literal">true</span>);</span><br><span class="line">            file.writeLine(jsonString);</span><br><span class="line">            file.writeLine(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            file.close();</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 数据通过post请求发送自己的后台服务保存 </span></span><br><span class="line">            FiddlerObject.log(<span class="string">&#x27;2222222222222222&#x27;</span>+jsonString); </span><br><span class="line">            <span class="comment">// methods</span></span><br><span class="line">            <span class="type">var</span> <span class="variable">method</span> <span class="operator">=</span> <span class="string">&quot;POST&quot;</span>;</span><br><span class="line">            <span class="type">var</span> <span class="variable">myUrl</span> <span class="operator">=</span> <span class="string">&#x27;http://localhost:8000/fiddler&#x27;</span></span><br><span class="line">            <span class="type">var</span> <span class="variable">url</span> <span class="operator">=</span> myUrl+<span class="string">&#x27;?data=&#x27;</span>+Utilities.UrlEncode(jsonString);</span><br><span class="line">            <span class="type">var</span> <span class="variable">protocol</span> <span class="operator">=</span> <span class="string">&quot;HTTP/1.1&quot;</span>;</span><br><span class="line">            <span class="keyword">var</span> raw=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">var</span> selected: Session = oSession;</span><br><span class="line">            raw += method + <span class="string">&quot; &quot;</span> + url + <span class="string">&quot; &quot;</span> + protocol + <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">  </span><br><span class="line">            raw +=<span class="string">&quot;Host:localhost:8000\r\n&quot;</span>;</span><br><span class="line">            raw +=<span class="string">&quot;Connection: keep-alive\r\n&quot;</span>;</span><br><span class="line">            raw +=<span class="string">&quot;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\r\n&quot;</span>;</span><br><span class="line">            raw +=<span class="string">&quot;User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 Safari/537.36\r\n&quot;</span>;</span><br><span class="line">            raw +=<span class="string">&quot;Accept-Encoding: gzip,deflate,sdch\r\n&quot;</span>;</span><br><span class="line">            raw +=<span class="string">&quot;Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4\r\n&quot;</span>;</span><br><span class="line">            raw +=<span class="string">&quot;Content-Type: application/json\r\n&quot;</span>;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">var</span> body= <span class="string">&quot;jsondata=&#x27;&#x27;&quot;</span>;</span><br><span class="line">            raw += <span class="string">&quot;\r\n&quot;</span> + body;</span><br><span class="line">            FiddlerObject.utilIssueRequest(raw);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="可查看session-dat格式的文件"><a href="#可查看session-dat格式的文件" class="headerlink" title="可查看session.dat格式的文件"></a>可查看session.dat格式的文件</h3><p><img src="/99-Attachment/assets/1658824896-dd489a89bf8366285c96534e7429be3e.png"></p><hr><p>原网址: <a href="https://blog.csdn.net/weixin_38664232/article/details/108052749">访问</a> | 创建时间: 2022-07-26 16:41:36</p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;打开fiddler后台脚本代码&quot;&gt;&lt;a href=&quot;#打开fiddler后台脚本代码&quot; class=&quot;headerlink&quot; title=&quot;打开fiddler后台脚本代码&quot;&gt;&lt;/a&gt;打开fiddler后台脚本代码&lt;/h3&gt;&lt;figure class=&quot;h</summary>
      
    
    
    
    <category term="05-SEO&amp;数据处理" scheme="https://berlin2022.github.io/categories/05-SEO-%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    
    <category term="fiddler" scheme="https://berlin2022.github.io/tags/fiddler/"/>
    
  </entry>
  
  <entry>
    <title>mysql 导出表数据的命令 导出sql文件、excel文件命令 - kakaok - 博客园</title>
    <link href="https://berlin2022.github.io/2022-07-23-2d9e92ee.html"/>
    <id>https://berlin2022.github.io/2022-07-23-2d9e92ee.html</id>
    <published>2022-07-23T08:00:46.000Z</published>
    <updated>2022-08-01T10:43:14.499Z</updated>
    
    <content type="html"><![CDATA[<hr><p>在做数据备份或导出数据的时候经常需要查询mysql的导出命令，特此记录下</p><p>1： 导出表数据到sql文件 备份数据 </p><p><code>mysqldump -h 127.0.0.1 -uroot  -p  topickws  t_e_keywords_google &gt; t_e_keywords_google.sql</code></p><p>topickws 是dbname</p><p>t_e_keywords_google 是表名</p><p>2：将mysql数据导出到excel中</p><p>使用工具导出7w条数据发现运行了480s，随即又用命令导出</p><p><code>mysql -h127.0.0.1 topickws  -uroot -p -e &quot;select * from t_e_keywords_google;&quot; &gt; t_e_keywords_google.xls</code></p><p>5s中即完成</p><p>-e 参数可以使用查询命令，根据需要筛查数据</p><p>3：将备份的sql文件导入到库里</p><p><code>mysql -uroot -p topickws &lt; t_e_keywords_google.sql</code> </p><p>topickws 是dbname</p><p>t_e_keywords_google.sql 是表结构和数据文件</p><hr><p>原网址: <a href="https://www.cnblogs.com/fly-kaka/p/16081611.html">访问</a> | 创建时间: 2022-07-23 16:00:46</p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;p&gt;在做数据备份或导出数据的时候经常需要查询mysql的导出命令，特此记录下&lt;/p&gt;
&lt;p&gt;1： 导出表数据到sql文件 备份数据 &lt;/p&gt;
&lt;p&gt;&lt;code&gt;mysqldump -h 127.0.0.1 -uroot  -p  topickws  t_e_keywo</summary>
      
    
    
    
    <category term="10_非主攻方向" scheme="https://berlin2022.github.io/categories/10-%E9%9D%9E%E4%B8%BB%E6%94%BB%E6%96%B9%E5%90%91/"/>
    
    
    <category term="mysql" scheme="https://berlin2022.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>python火车头清洗数据插件</title>
    <link href="https://berlin2022.github.io/2022-07-23-c4c15d37.html"/>
    <id>https://berlin2022.github.io/2022-07-23-c4c15d37.html</id>
    <published>2022-07-23T07:57:00.000Z</published>
    <updated>2022-08-01T10:43:14.504Z</updated>
    
    <content type="html"><![CDATA[<p>python3.8.8，版本太高，调用插件会报错，python3.6则没有</p><p>插件代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: kaka</span></span><br><span class="line"><span class="comment"># @Date:   2022-03-03 09:45:11</span></span><br><span class="line"><span class="comment"># @Last Modified by:   kaka</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2022-03-17 11:08:08</span></span><br><span class="line"><span class="comment"># @Email: zhckaka@sina.com</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="comment"># from w3lib import html</span></span><br><span class="line"><span class="keyword">import</span> html</span><br><span class="line"><span class="keyword">from</span> scrapy.selector <span class="keyword">import</span> Selector</span><br><span class="line"><span class="keyword">import</span> importlib</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> emoji</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) != <span class="number">5</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(sys.argv))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;命令行参数长度不为5&quot;</span>)</span><br><span class="line">    sys.exit()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    LabelCookie = parse.unquote(sys.argv[<span class="number">1</span>])</span><br><span class="line">    LabelUrl = parse.unquote(sys.argv[<span class="number">2</span>])</span><br><span class="line">    <span class="comment"># PageType为List,Content,Pages分别代表列表页，内容页，多页http请求处理，Save代表内容处理</span></span><br><span class="line">    PageType = sys.argv[<span class="number">3</span>]</span><br><span class="line">    SerializerStr = parse.unquote(sys.argv[<span class="number">4</span>])</span><br><span class="line">    <span class="keyword">if</span> (SerializerStr[<span class="number">0</span>:<span class="number">2</span>] != <span class="string">&#x27;&#x27;&#x27;&#123;&quot;&#x27;&#x27;&#x27;</span>):</span><br><span class="line">        file_object = <span class="built_in">open</span>(SerializerStr)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            SerializerStr = file_object.read()</span><br><span class="line">            SerializerStr = parse.unquote(SerializerStr)</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            file_object.close()</span><br><span class="line">    LabelArray = json.loads(SerializerStr)</span><br><span class="line">    <span class="comment"># 以下是用户编写代码区域</span></span><br><span class="line">    <span class="keyword">if</span>(PageType == <span class="string">&quot;Save&quot;</span>):</span><br><span class="line">        <span class="keyword">if</span>(LabelArray[<span class="string">&#x27;content_comments&#x27;</span>]):</span><br><span class="line">            <span class="comment"># 提取comment-copy中的内容</span></span><br><span class="line">            comments = LabelArray[<span class="string">&#x27;content_comments&#x27;</span>]</span><br><span class="line">            text_str = <span class="string">r&#x27;&#x27;&#x27;&#123;0&#125;&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(comments)</span><br><span class="line">            json_data = json.loads(text_str)</span><br><span class="line">            model_list = json_data[<span class="string">&quot;features&quot;</span>][<span class="string">&quot;comments&quot;</span>][<span class="string">&quot;models&quot;</span>]</span><br><span class="line">            <span class="keyword">if</span> model_list <span class="keyword">and</span> <span class="built_in">len</span>(model_list) &gt; <span class="number">0</span>:</span><br><span class="line">                level_one = &#123;&#125;</span><br><span class="line">                <span class="comment"># 先把一级的数据保存起来</span></span><br><span class="line">                <span class="keyword">for</span> ml_key, ml_val <span class="keyword">in</span> model_list.items():</span><br><span class="line">                    user_id = ml_key</span><br><span class="line">                    parentId = ml_val.get(<span class="string">&quot;parentId&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">                    media_list = ml_val.get(<span class="string">&quot;media&quot;</span>, &#123;&#125;).get(</span><br><span class="line">                        <span class="string">&quot;richtextContent&quot;</span>, &#123;&#125;).get(<span class="string">&quot;document&quot;</span>, [])</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> parentId:</span><br><span class="line">                        <span class="keyword">for</span> md <span class="keyword">in</span> media_list:</span><br><span class="line">                            md_c = md.get(<span class="string">&quot;c&quot;</span>, [])</span><br><span class="line">                            <span class="comment"># 保存评论</span></span><br><span class="line">                            mc_list = []</span><br><span class="line">                            <span class="keyword">for</span> mc <span class="keyword">in</span> md_c:</span><br><span class="line">                                mt_text = mc.get(<span class="string">&quot;t&quot;</span>)</span><br><span class="line">                                mc_list.append(mt_text)</span><br><span class="line">                                <span class="comment"># print(mt_text)</span></span><br><span class="line">                            level_one[user_id] = <span class="string">&quot; &quot;</span>.join(mc_list)</span><br><span class="line"> </span><br><span class="line">                <span class="keyword">for</span> ml_key, ml_val <span class="keyword">in</span> model_list.items():</span><br><span class="line">                    <span class="comment"># print(ml_key)</span></span><br><span class="line">                    user_id = ml_key</span><br><span class="line">                    <span class="comment"># print(user_id)</span></span><br><span class="line">                    parentId = ml_val.get(<span class="string">&quot;parentId&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">                    <span class="comment"># print(&quot;pid&quot;,parentId)</span></span><br><span class="line">                    media_list = ml_val.get(<span class="string">&quot;media&quot;</span>, &#123;&#125;).get(</span><br><span class="line">                        <span class="string">&quot;richtextContent&quot;</span>, &#123;&#125;).get(<span class="string">&quot;document&quot;</span>, [])</span><br><span class="line">                    <span class="keyword">for</span> md <span class="keyword">in</span> media_list:</span><br><span class="line">                        md_c = md.get(<span class="string">&quot;c&quot;</span>, [])</span><br><span class="line">                        <span class="comment"># 保存评论</span></span><br><span class="line">                        <span class="keyword">if</span> parentId <span class="keyword">and</span> parentId <span class="keyword">in</span> level_one.keys():</span><br><span class="line">                            mc_list = []</span><br><span class="line">                            <span class="keyword">for</span> mc <span class="keyword">in</span> md_c:</span><br><span class="line">                                mt_text = mc.get(<span class="string">&quot;t&quot;</span>)</span><br><span class="line">                                mc_list.append(mt_text)</span><br><span class="line">                            lv_one = level_one[parentId]</span><br><span class="line">                            <span class="comment"># new_one = &quot;&quot;</span></span><br><span class="line">                            <span class="keyword">if</span> <span class="string">&quot;$$$&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> lv_one:</span><br><span class="line">                                new_one = <span class="string">&quot;&#123;0&#125;$$$&#123;1&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">                                    lv_one, <span class="string">&quot; &quot;</span>.join(mc_list))</span><br><span class="line">                                level_one[parentId] = new_one</span><br><span class="line">                            <span class="keyword">else</span>:</span><br><span class="line">                                new_one = <span class="string">&quot;&#123;0&#125;@@@&#123;1&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">                                    lv_one, <span class="string">&quot; &quot;</span>.join(mc_list))</span><br><span class="line">                                level_one[parentId] = new_one</span><br><span class="line">                level_one_list = []</span><br><span class="line">                <span class="keyword">for</span> k, v <span class="keyword">in</span> level_one.items():</span><br><span class="line">                    level_one_list.append(v)</span><br><span class="line">                comments = <span class="string">&quot;&amp;&amp;&amp;&quot;</span>.join(level_one_list)</span><br><span class="line">                emoji_str = emoji.demojize(comments)</span><br><span class="line">                <span class="comment"># comments_new = re.sub(r&#x27;:(.*?):&#x27;, &#x27;&#x27;, emoji_str).strip()</span></span><br><span class="line">                LabelArray[<span class="string">&#x27;content_comments&#x27;</span>] = emoji_str</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                LabelArray[<span class="string">&#x27;content_comments&#x27;</span>] = <span class="string">&quot;errors&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        LabelArray[<span class="string">&#x27;Html&#x27;</span>] = <span class="string">&#x27;当前页面的网址为:&#x27;</span> + LabelUrl + <span class="string">&quot;\r\n页面类型为:&quot;</span> + PageType + \</span><br><span class="line">            <span class="string">&quot;\r\nCookies数据为:&quot;</span>+LabelCookie+<span class="string">&quot;\r\n接收到的数据是:&quot;</span> + LabelArray[<span class="string">&#x27;Html&#x27;</span>]</span><br><span class="line">    <span class="comment"># 以上是用户编写代码区域</span></span><br><span class="line">    LabelArray = json.dumps(LabelArray)</span><br><span class="line">    <span class="built_in">print</span>(LabelArray)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;python3.8.8，版本太高，调用插件会报错，python3.6则没有&lt;/p&gt;
&lt;p&gt;插件代码&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    <category term="06-需吃透的内容" scheme="https://berlin2022.github.io/categories/06-%E9%9C%80%E5%90%83%E9%80%8F%E7%9A%84%E5%86%85%E5%AE%B9/"/>
    
    
    <category term="Python" scheme="https://berlin2022.github.io/tags/Python/"/>
    
    <category term="SEO" scheme="https://berlin2022.github.io/tags/SEO/"/>
    
  </entry>
  
  <entry>
    <title>域名解析和备案的几点记录一下</title>
    <link href="https://berlin2022.github.io/2022-07-23-ebda4e35.html"/>
    <id>https://berlin2022.github.io/2022-07-23-ebda4e35.html</id>
    <published>2022-07-22T17:09:48.000Z</published>
    <updated>2022-08-01T10:43:14.508Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>好几年前购买的一批网站，年年续费也花了好几千块钱，有些还是花大价钱买的也花了好几千，一直是在腾讯和阿里云之间倒腾，因为域名域名转入的话要比直接续费便宜9块钱的样子。嫌麻烦放弃了一部分，另外的也打算卖了，但是腾讯云又不支持出售，又转到阿里云挂着出售，不曾想还卖了一千多块钱，勉强凑了这个月大半个月的生活费。后面没备案的域名就卖不动了，打算备个案吧，好卖点，回点血也行呐。</p><h2 id="阿里云VS百度，备案进程对比"><a href="#阿里云VS百度，备案进程对比" class="headerlink" title="阿里云VS百度，备案进程对比"></a>阿里云VS百度，备案进程对比</h2><h3 id="阿里云备案"><a href="#阿里云备案" class="headerlink" title="阿里云备案"></a>阿里云备案</h3><p>阿里云备案倒是非常方便快捷，手机上照几个像就过了，就备案服务码难搞，要100块钱一个。购买阿里云的服务器会送5个备案服务码，不过现在用不了了，肯定不会为了备个案去买个服务器的；阿里云有备案管家服务的入口，提供新增备案 &#x2F; 变更备案等服务540块一个网站。</p><p><img src="https://img.16tui.com/obsidian/202207230136635.png"></p><p>到群里要了2个，就是一次只能备案一个网站，还要消耗一个备案服务码，这明显就不够用了，备案速度还是蛮快。</p><p>阿里云服务好确实好，不过价格也贵，看我的截图就知道。</p><p><img src="https://img.16tui.com/obsidian/202207230142022.png"></p><h3 id="百度备案"><a href="#百度备案" class="headerlink" title="百度备案"></a>百度备案</h3><p>相对来说审核周期就长了一倍，而且还特别严格，初审的操作者是百度的人</p><p><img src="https://img.16tui.com/obsidian/202207230211646.png"></p><p>拒绝了两次</p><p><img src="https://img.16tui.com/obsidian/202207230214154.png"></p><p>😒😒😒😒😒😒😒😒</p><p><img src="https://img.16tui.com/obsidian/202207230214280.png"></p><p>从7月9号 到7月22号都没备下来，我以前在百度备案就没这么麻烦过。</p><p><img src="https://img.16tui.com/obsidian/202207230216504.png"></p><p>其实百度也不便宜，加上以前在百度推广开户，总的消费也有1.5W左右，所以尽量不要花这些冤枉钱，也就当练练手了。</p><p><img src="https://img.16tui.com/obsidian/202207230224506.png"></p><h2 id="关于域名解析踩的坑"><a href="#关于域名解析踩的坑" class="headerlink" title="关于域名解析踩的坑"></a>关于域名解析踩的坑</h2><p>阿里云新增备案的时候会有这样一个提示，反之最后我还是没有解析出来，直接新增了</p><p><img src="https://img.16tui.com/obsidian/202207230147060.png"></p><p>我想还是解析一下吧，正常访问，把备案码挂出来，比较友好。然后是打算老套路，从阿里云绑定DNSpod的DNS服务器，然后再到DNSpod批量管理，😂几年没操作毕竟生疏了，一下子居然蒙了，为什么就解析不出来！</p><p><img src="https://img.16tui.com/obsidian/202207230153500.png"></p><p>直接在万网后台域名解析加了个NS记录，以为就可以了，等待、刷新、再等待、绑定主机、删除、再绑定……</p><p><img src="https://img.16tui.com/obsidian/202207230157826.png"></p><p>然后看到这个提示以为是DNS服务器更新了，又跑去阿里云域名管理里面改NS记录，刷新、等待、刷新、再等待，依然解析不出来……</p><p><img src="https://img.16tui.com/obsidian/202207230200084.png"></p><p>其实只需要一个操作就可以了</p><p><img src="https://img.16tui.com/obsidian/202207230201717.png"></p><p>修改为上面的DNS服务器就可以了，所以啊还是生疏了🤣……</p><p><img src="https://img.16tui.com/obsidian/202207230204490.png"></p><p>毕竟百度还是没有让我失望，而是让我绝望了</p><p><img src="https://img.16tui.com/obsidian/202207230230398.png"></p><p>其实这都算好，西部数码还会注销备案，这就有点过分了。</p><h2 id="关于西部数码"><a href="#关于西部数码" class="headerlink" title="关于西部数码"></a>关于西部数码</h2><p><img src="https://img.16tui.com/obsidian/202207230247561.png"></p><p>西部数码域名一定要绑定他家IP，不绑定的话邮件提示几回就撤销备案了，非常不方便。</p><p>然后账单也被清了，总的消费不是很高，几千块钱把，多数是域名。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>备案成功后有个备案管理码，自己最好去工信部网站改一改密码，不然哪天又莫名其妙被注销了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;好几年前购买的一批网站，年年续费也花了好几千块钱，有些还是花大价钱买的也花了好几千，一直是在腾讯和阿里云之间倒腾，因为域名域名转入的话要比直</summary>
      
    
    
    
    <category term="10_非主攻方向" scheme="https://berlin2022.github.io/categories/10-%E9%9D%9E%E4%B8%BB%E6%94%BB%E6%96%B9%E5%90%91/"/>
    
    
    <category term="备案" scheme="https://berlin2022.github.io/tags/%E5%A4%87%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>根据《搜索词提升计划.xlsx》收录情况，优先级&amp;未收录，为最高优先级</title>
    <link href="https://berlin2022.github.io/2022-07-22-4697109c.html"/>
    <id>https://berlin2022.github.io/2022-07-22-4697109c.html</id>
    <published>2022-07-22T02:21:24.171Z</published>
    <updated>2022-08-01T10:43:14.478Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对哟😉" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="1effa03d33b37af8b457d7f7f4fa7cc577abc2bc720dc0411db1714acf3ac53a">38e18faabe270d3786bc1958b80faf98015f1292491f03c56e915e9525cdb790d6eb0d993b1ab012c3ac95875f34f543b5fe57599daf913371f4a124c97a9ac21e19490d3d2dc963b9c74b70a3cb358b120d5110bde495aec325413295ab06c13987873e4995cf6a6ff425a2c964192a26a03c4f1d2bddcc7938c0f09801abcfa0474f21edcc4b5556771e8fe5c08543b402b135123541c857feffdbbe0159c920ab8bfad5c1f101e6bc138ac91af17de9f0c0793f6b0a3830609199a066fb425074b3ba8e22161b5ec98cf908bbd4934c38d6b8e2e395a97a59e8373e5979d854c363b7030a7d60fd81f0a043e94632c3bd683db612fa7ae4e13d76cf10210f0772619cac116481ace9393a7b2940f2b765638c03f02162021cea85ceb81f79f8529ac86788cbd7c8a416d684dde103e8c695f62e2a6d3b6f47306c9ce410acc03385308bcee193a86b6c433d8554745a0a369ebeef5e270594be42e66946513bd8de270dd3cf5feb2376f538ced2261e7bce68a9ea3336ad76e6307489b497599bd76b00f45ac405317f77a91b5cb762d6be31d564662db264db3c8994065fe8dcb194f8800f601cc9f6872adace854d374878b5b9e38fc539c5e9ec166760eb10e723055f06b5b40b84a502587a8cde26a08f00573d9b169c26f24a71f731c88acf2e77140353a034660b1cd2688c121a6b28a254c571eaf147c8ffd9ebb519f5a839a2d2c0124f9a0cb593beac4e69c797f7b389429c79fcc6dde0530aa18afbd9d17e6040e7ff6d733e01313ee4a8ffd8d2b042972ff975d05f94118209b8f884f731bbddf7649a270c24882a39f8a5235d5b02fb293b1aa224e00fab8e1e97f605fc9fb778420e4063a29c921e70eadd312527dbde01cb2a36f0e8831bded1f69370c2dfc6d6cb25be47cb8cbf1d283538f4cd842dd5b222d6f22c997965f191144690cd40abfb72e8d714913dc31cfd051a3856e0fa6cf89f4dcc8fc3846160a88cdd01d3b9f34648b4bc1e17677cef15ecaa5db563b8edbca8a2c19e270e5c7815327c216b89813709cd952376fb58cba10ab50985c7e1b18af9660fed55a6d8b0d49d37981601429c82b49bb4181aad99a4f41b378683689675345503163f46ece1ca1539ac18d0955193d6f97796fcd950bd9fef422521d7e33f687026df14f07fcb3d6a220a06c7a4fccbbcce676768ed6222300ae09a055676d5c55a170db517f918f15def1dd39696e78cc25c1e6691d2c58c114edad86fbb88d5f8a823b1dab28490b85ea4ce6fecb49ecb84f3e9351eb844bcc165fa9017280ef7e65ab14911cede9f535e03048c74ee0747e3caa08e8768363f76036b614728eb6032911fa1ed2bd7b492f82a271aa328142fab26ca4866cb14dfd0a76b62ba044e77d9cfc79d634f58728c12b5b73d50a0e61ff2c8631f52a8ab09802fd93135357788c06955298760803d9f02d33d286d340b7beec80743314beac3be1c3ae2b81e7d4eb9b42d2e0054f78bd6f96c5efe4c4157cebb82e9920379419b36d75f8f08d9237debe9f8c54f4dfb9a2395053e073b9ab7b43d06a3baa98cec34bf4e3aa596bbffdc587605b5d75e77ff5f6fcba9b282e43f202fedaf6324f6a897117b5377796c6690c5b8c580c42ea332a43b370d1f14dd35579d4b61315cecdf7d26f92e86d3dbffe2492dbae79af9272017cb448fdfb02814d3fce026934a0b2d2de1be066b4d2c8920e1b9a005025292f99ea0c4d3cf75ace7e8e6162b925cb3a8f40c17904bb474d5f050e7f6d51f201bf1d05476c32f4e889a670d982376e56f3fc9ba3bf1bf15812e8bbc374033befee13af8c8bfcd2f5ed4c310c530ff0b0ef6655cefc0d2cf8461d0537fbd5d74e9f4e3cfbac6e07111f720e250e26ee0f314414a133d0953a3f0c82ef4315b95a873a4380b62f93847dc6a1bad619404682b84bb4c4f166cdcae3770ae4203835e1f27232335f49fb252933209ddffb660e445cb627732512ab8bd349fbbdb7efac5aa6a40f3b0d8bd49b7ca7c93f5c81c579af2d80a5159f2a0ef5d450b3c2709fb33ac0e35b13906f2b01faf1339ca38c710f1f99cb21f04c0f2b4a0dd12ab69d53c58358ec9ef56da4b58992903f01a0dc82cb3be35d3fbedc1e86122b59dd319572652fa7912c71b1f6d08688666b2d8943bda381f38de923c9fb5e5d5b785cfc86161911db79b3aca27c347f3dd75c2a1a45feef385d102a4d634e0a6d24895f9067b591210e47be5ef67063949ab21ca2c885c6c6f207ae30a73c3b48266fa6da3d7879fd0f538a767f14ff28630a5a3272a797d93f99c2684fd30f14db2d5904e0e810d95e047ac65f421d8c9111e2f803bf4010aa539587af72f3ec24981600e71870f1996a8229354fff90b5fe1222acd356d76d700be7646ac035d415f1079cfd1c3f78fbdb8e60a59b8877a800c7d36cd019c54771377b3de0763b9f313e36155ffd88b67c74ef9356c318199deb6926eaf8ca8b6bf3af715341509ef480909b7ebc2cd23b99cfde40f75de5537147baffce1073b26440ee4273b5eb045a42441d1429aeb81f181919d6088cbbd0140a2c688b6d1636ce01352ec4dbb8c9d71478d5ae2068a02b7c5f6c40db72a09186db2c76a80bcdff293369ef914060e48662973fee1cf576fd931718302add839100ff3e7552d209bcf7f7ca360c1c9b400e8712f5d2069e043d36bbb8225df94d530209783706977f46be0a84c7929106ed3db3b04d75dfbf6cb2517e91dfd94cc5699400164156092166fdbf2e01e7fff6d9bffb70d144ba968a0e76792a801c0901ac75ead4e0de67d7d2875f3d4b71c17e91da390de947d7cecbdae34b1424efc0a2a647f60c10182645d23cf4d3122e71e94ba809dd02fbfd05d43f45250c217bc54f1a696efb0a564d83b872fad6c004bd577f3cf7616eff99b4bb3ed0615b30fd26083cbd84fb371aa749d5408e7f25d08917aa06f50acf86bf7f2b2adde539750ccca5efd033b889f40a3dfc60879151eb179380b3db45afe768420b63e001f702bc9178b468ae9350df8c3d92e64400fea066a1cf4714f1e43806e428bfeb90d7a181c10b859547957cb58f3b2ce2fb45945447c376520cb808ba0a1556b5902cb8e566507</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">加密文章，请输入密码查看</summary>
    
    
    
    <category term="20-Diary" scheme="https://berlin2022.github.io/categories/20-Diary/"/>
    
    
    <category term="日志" scheme="https://berlin2022.github.io/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>Excel中使用VLOOKUP在多个sheet表中查询数据的公式_vlookup多个sheet提取数据</title>
    <link href="https://berlin2022.github.io/2022-07-22-26f6ccf3.html"/>
    <id>https://berlin2022.github.io/2022-07-22-26f6ccf3.html</id>
    <published>2022-07-22T01:37:50.000Z</published>
    <updated>2022-08-01T10:43:14.466Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>原始数据较多，甚至超过了一个sheet的行容量，不得不把数据折行到第二个sheet，甚至第三个sheet表中。这样，在另外一个sheet表中的VLOOKUP查询就需要把查询范围设置为多个sheet表。</p><p>举个栗子来说明：</p><p>下图分别是Sheet1、Sheet2表，假设两个表的总行数已经超过了一个单表的行数上限，无法合并在一个sheet中。</p><p><img src="/99-Attachment/assets/1658453870-55d0f5d17d4842bd1b81d1ea45f82adf.png">        <img src="/99-Attachment/assets/1658453870-20070c2dbd937c943816a387b64707ef.png">       </p><p>下图是要实现的查询效果，A列是查询依据，根据A列的值查询到对应的值填在B列中。</p><p> <img src="/99-Attachment/assets/1658453870-6b03f9fdbab04013f45e8ae0e7081073.png"></p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>VLOOKUP函数中不支持设置多个sheet表的范围，如：VLOOKUP(A:A,Sheet1!A:B,2,FALSE) 标红的部分为查询区域或查询范围，他不予许再追加一个“Sheet2!A:B”在其后，或者使用什么连接符将他们联合起来（恕小弟愚钝，并不知道是否有这样的关键字，如果有，请给我留言）。所以用一个VLOOKUP查询不能完成多表搜索。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>经过一番噼里啪啦的搜索之后，终于发现了一个可行方法，就是使用IFEEROR函数实现。公式如下：</p><p>    <code>=IFERROR(VLOOKUP(A:A,Sheet1!A:B,2,FALSE),VLOOKUP(A:A,Sheet2!A:B,2,FALSE))</code></p><p>含义：如果第一个VLOOKUP查询到了数据，则直接以查询到的数据填充该单元格；如果没有查询到（也就是如果出错了），则使用第二个VLOOKUP查询。</p><p>如果需要在三个、四个sheet中查询数据，也是可以使用这种方式嵌套查询，就是函数会稍微繁琐一些。如果查询的sheet表再多，就不适用了该方法了。</p><p>{欢迎留言讨论~}</p><p>（悄悄告诉你，博主是个Excel小白~）</p><hr><p>原网址: <a href="https://blog.csdn.net/bailichun19901111/article/details/112794498">访问</a> | 创建时间: 2022-07-22 09:37:50</p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h3 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h3&gt;&lt;p&gt;原始数据较多，甚至超过了一个sheet的行容量，不得不把数据折行到第二个sheet，甚至第三个sheet表中。这样，在另外一个sh</summary>
      
    
    
    
    <category term="05-SEO&amp;数据处理" scheme="https://berlin2022.github.io/categories/05-SEO-%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    
    <category term="excel" scheme="https://berlin2022.github.io/tags/excel/"/>
    
  </entry>
  
  <entry>
    <title>CentOS+Nginx服务器常用的命令</title>
    <link href="https://berlin2022.github.io/2022-07-22-2fcece9d.html"/>
    <id>https://berlin2022.github.io/2022-07-22-2fcece9d.html</id>
    <published>2022-07-21T16:22:49.000Z</published>
    <updated>2022-08-01T10:43:14.491Z</updated>
    
    <content type="html"><![CDATA[<hr><p>最近因为某些原因需要使用CentOS服务器，但是我之前从来没有接触过CentOS，用惯了Windows的图形界面真的是看到Linux这种全靠命令行操作的东西就头大，还要有万能的搜索。</p><p>这次需要解决的问题是，某台CentOS服务器上放着一个PHP的网站程序，现在需要将它打包下载下来。但是因为之前的技术走的时候没有交接清楚，现在不知道WEB环境是什么、不知道程序存放的路径、不知道绑定了哪些域名……</p><p>解决思路：查询WEB环境及版本、查看WEB环境的配置文件查看存放的路径和绑定的域名、打包并下载。</p><p>下面是在操作以及搜索的过程中使用到的命令：</p><h2 id="0、检查服务器系统版本"><a href="#0、检查服务器系统版本" class="headerlink" title="0、检查服务器系统版本"></a>0、检查服务器系统版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/redhat-release</span><br></pre></td></tr></table></figure><h2 id="0-1、检查服务器的WEB环境"><a href="#0-1、检查服务器的WEB环境" class="headerlink" title="0.1、检查服务器的WEB环境"></a>0.1、检查服务器的WEB环境</h2><p>Apache</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name httpd.conf</span><br></pre></td></tr></table></figure><p>Nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name nginx.conf</span><br></pre></td></tr></table></figure><p>PHP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name php.ini</span><br></pre></td></tr></table></figure><p>MySQL数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name my.cnf</span><br></pre></td></tr></table></figure><p>运行上面的命令会就可以查看对应的信息了，如果运行上面的命令后没有返回任何结果，那就说明服务器里没有相应的环境。我因为不知道这台服务器到底是用的什么WEB环境，所以只能上面的每一条都运行一下来查询。</p><p>用这个方法之后，最后确定这台服务器的WEB环境是Nginx+PHP+MySQL，接下来就要查Nginx的配置环境来看网站存放在什么目录，以及都绑定了哪些域名了，</p><h2 id="1、找到Nginx的配置文件"><a href="#1、找到Nginx的配置文件" class="headerlink" title="1、找到Nginx的配置文件"></a>1、找到Nginx的配置文件</h2><p>首先要找到Nginx配置文件的路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure><p>有的可以直接用这个命令得到Nginx的配置文件路径，也不知道为什么，有的服务器上用上面这个命令会无效，返回“nginx: command not found”。</p><p>所以我就用了下面两个find查找的命令，Linux服务器查找文件的速度还挺快。但这种方法可能会找出来很多文件、文件夹，需要再去查看.conf的配置文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name nginx</span><br></pre></td></tr></table></figure><p>查找所有Nginx的文件夹路径，某些奇葩的配置可以通过路径的文件夹名能大概的猜到是不是网站目录了，比如文件夹名是www这种，甚至有的人文件夹名直接就是域名的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name *.conf</span><br></pre></td></tr></table></figure><p>查找所有后缀为.conf的文件，这个方法比较笨，但也比较有效。这样可以会列出来所有的配置文件，但也可能会有很多，就需要靠经验去判断哪个是Nginx的配置文件了，一般Nginx的配置文件路径上都会有一个Nginx的文件夹。</p><h2 id="2、查看文件内容"><a href="#2、查看文件内容" class="headerlink" title="2、查看文件内容"></a>2、查看文件内容</h2><p>打开Nginx配置文件并查找绑定的域名及对应的目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat -n &lt;文件路径&gt;</span><br></pre></td></tr></table></figure><p>这个命令是打开文件的意思，打开Nginx配置文件之后就可以看到端口、域名、WEB目录等信息了。</p><p>但是如果这个配置文件里的最后有include参数，类似于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include vhost/*.conf</span><br></pre></td></tr></table></figure><p>说明这个服务器上用了虚拟化绑定了多个域名和网站，那就需要再打开这些配置文件看了。</p><h2 id="3、打开文件对应目录关系"><a href="#3、打开文件对应目录关系" class="headerlink" title="3、打开文件对应目录关系"></a>3、打开文件对应目录关系</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l -R &lt;目录路径&gt;</span><br></pre></td></tr></table></figure><p>列出该路径下的所有文件夹和目录的详细资料（路径以&#x2F;开头，末尾不用&#x2F;，文件很多的慎用）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -F &lt;目录路径&gt; |grep /$</span><br></pre></td></tr></table></figure><p>只列出目录里面的文件夹（路径以&#x2F;开头，末尾不用&#x2F;）</p><p>计算当前目录下的文件数和目录数</p><p>文件个数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l * |grep &quot;^-&quot;|wc -l</span><br></pre></td></tr></table></figure><p>目录个数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l * |grep &quot;^d&quot;|wc -l</span><br></pre></td></tr></table></figure><h2 id="4、修改文件内容并保存"><a href="#4、修改文件内容并保存" class="headerlink" title="4、修改文件内容并保存"></a>4、修改文件内容并保存</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &lt;文件路径&gt;</span><br></pre></td></tr></table></figure><p>输入上面命令后即可进入修改文件模式，输入以上命令后，需要先按“ESC” 键进入命令模式，然后输入“:” 进入末行模式才能进行编辑。</p><p>编辑时的操作方法为</p><ul><li>:q 是直接退出；</li><li>wq 保存后退出；</li><li>:q! – 不保存内容， 强制退出。</li></ul><h2 id="5、将网站目录打包，并下载"><a href="#5、将网站目录打包，并下载" class="headerlink" title="5、将网站目录打包，并下载"></a>5、将网站目录打包，并下载</h2><p>使用tar压缩：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -czvf &lt;压缩包命名，以.tar.gz结尾&gt; &lt;要打包的文件/文件夹路径&gt;</span><br></pre></td></tr></table></figure><p>最后压缩包一般保存在root目录，也可以用find名称查询具体存放在哪个目录。压缩方式也可以使用zip将文件压缩成zip的压缩包，具体命令自行搜索。</p><p>下载文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sz &lt;文件路径&gt;</span><br></pre></td></tr></table></figure><p>这个方法下载文件只能下载4G以内的文件（如果无效需要检查是否有安装rz，没有安装rz的话需要先安装rz，安装方法自行搜索。sz，只能传输4G以内的文件）。</p><p>如果文件大小超过4G，可以使用Xshell的“新建文件传输功能”（快捷键：Ctrl+Alt+F，在工具栏处有个绿色的文件传输标志），然后用下面的命令即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get &lt;文件路径&gt;</span><br></pre></td></tr></table></figure><p>以上两种文件下载方式，都支持同时下载多个文件，只要在命令行里输入多个要下载的文件路径即可（多个文件用空格隔开）。</p><h2 id="6、启动Nginx"><a href="#6、启动Nginx" class="headerlink" title="6、启动Nginx"></a>6、启动Nginx</h2><p>6.1、通过路径启动，例如路径在&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx</p><p>启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><p>平滑重载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx -s reload</span><br></pre></td></tr></table></figure><p>重启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx -s restart</span><br></pre></td></tr></table></figure><p>停止</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx -s stop</span><br></pre></td></tr></table></figure><p>6.2、通过系统命令启动</p><p>启动Nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx.service</span><br></pre></td></tr></table></figure><p>重载Nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload nginx.service</span><br></pre></td></tr></table></figure><p>重启nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx restart</span><br></pre></td></tr></table></figure><p>停止Nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop nginx.service</span><br></pre></td></tr></table></figure><p>查看Nginx的状态及进程与端口（启动后）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status nginx.service</span><br></pre></td></tr></table></figure><h2 id="7、其他命令"><a href="#7、其他命令" class="headerlink" title="7、其他命令"></a>7、其他命令</h2><p>查看80端口被哪个服务占用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -antp | grep :80</span><br></pre></td></tr></table></figure><p>查看所有端口占用情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -antp | grep :</span><br></pre></td></tr></table></figure><p>查看Nginx进程运行状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep nginx</span><br></pre></td></tr></table></figure><p>查看Nginx版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -V</span><br></pre></td></tr></table></figure><hr><p>原网址: <a href="https://www.xuduoduo.com/centos.html">访问</a> | 创建时间: 2022-07-22 00:22:49</p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;p&gt;最近因为某些原因需要使用CentOS服务器，但是我之前从来没有接触过CentOS，用惯了Windows的图形界面真的是看到Linux这种全靠命令行操作的东西就头大，还要有万能的搜索。&lt;/p&gt;
&lt;p&gt;这次需要解决的问题是，某台CentOS服务器上放着一个PHP的网站</summary>
      
    
    
    
    <category term="10_非主攻方向" scheme="https://berlin2022.github.io/categories/10-%E9%9D%9E%E4%B8%BB%E6%94%BB%E6%96%B9%E5%90%91/"/>
    
    
    <category term="CentOS" scheme="https://berlin2022.github.io/tags/CentOS/"/>
    
    <category term="Nginx" scheme="https://berlin2022.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>很久以前的一个防盗图的思路几天被自己破了</title>
    <link href="https://berlin2022.github.io/2022-07-19-93a530fe.html"/>
    <id>https://berlin2022.github.io/2022-07-19-93a530fe.html</id>
    <published>2022-07-19T14:05:54.000Z</published>
    <updated>2022-08-01T10:43:14.512Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>好几年前，有个做淘宝店的朋友抱怨说自己辛苦做的详情图老是被盗用，于是我建议说把图片打上水印然后切稀碎，再用html代码拼接起来，一个详情页切成100个小细条。这样一般不懂技术的基本要绕道了。</p><p>我的意思是按照这种密度切<br><img src="https://img.16tui.com/obsidian/202207191628308.png"></p><p>切出来</p><p><img src="https://img.16tui.com/obsidian/202207191630695.png"></p><p>下面是个样板，html代码连接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">&quot;width:auto;height:auto;max-width:100%&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//img10.360buyimg.com/imgzone/jfs/t1/204980/25/5195/206309/6138473fE7fb2e910/07a738dde0d0f78e.jpg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">&quot;width:auto;height:auto;max-width:100%&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//img10.360buyimg.com/imgzone/jfs/t1/82169/4/16632/189857/6138473fEc0262115/9dc4f397ea0063c8.jpg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">&quot;width:auto;height:auto;max-width:100%&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//img10.360buyimg.com/imgzone/jfs/t1/202403/27/5523/164775/6138473fEb298bf08/d459b199126c5866.jpg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">&quot;width:auto;height:auto;max-width:100%&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//img10.360buyimg.com/imgzone/jfs/t1/198733/21/7490/132726/6138473fEdbcda98a/cbfa67f748504edf.jpg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">&quot;width:auto;height:auto;max-width:100%&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//img10.360buyimg.com/imgzone/jfs/t1/82365/23/17190/119153/6138473fE5415de62/b023504d4e889646.jpg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">&quot;width:auto;height:auto;max-width:100%&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//img10.360buyimg.com/imgzone/jfs/t1/138720/22/21942/118685/6138473fE8f6d432f/e11090bb31e4cade.jpg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">&quot;width:auto;height:auto;max-width:100%&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//img10.360buyimg.com/imgzone/jfs/t1/205890/19/5377/75630/61384740Eee4f9d52/51ea90efc50be1f8.jpg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">&quot;width:auto;height:auto;max-width:100%&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//img10.360buyimg.com/imgzone/jfs/t1/198439/9/7413/94334/61384740E392a31af/54decd73cc16e444.jpg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样子的话，如果要以图片另存的方式来下载的话就不行了，但是依然可以截图（大小不均，丢像素）或者将整个网页保存为图片，然后将所需要的部分切出来，PS掉水印，然后再切分为合适的大小。</p><blockquote><p>要真是这样子手工一个个存出来PS切图的话，那只有秘密麻麻打水印才能防了。</p></blockquote><p>将整个网页保存为图片的方式很好，我下面要说的另一种方法就相对复杂一些。</p><h2 id="复制图片链接代码块"><a href="#复制图片链接代码块" class="headerlink" title="复制图片链接代码块"></a>复制图片链接代码块</h2><p><img src="https://img.16tui.com/obsidian/202207191647540.png"></p><h2 id="打开emeditor提取链接"><a href="#打开emeditor提取链接" class="headerlink" title="打开emeditor提取链接"></a>打开emeditor提取链接</h2><p><img src="https://img.16tui.com/obsidian/202207192157791.png"></p><h2 id="打开迅雷批量下载图片到指定文件夹"><a href="#打开迅雷批量下载图片到指定文件夹" class="headerlink" title="打开迅雷批量下载图片到指定文件夹"></a>打开迅雷批量下载图片到指定文件夹</h2><p>演示略……</p><h2 id="新建bat批处理"><a href="#新建bat批处理" class="headerlink" title="新建bat批处理"></a>新建bat批处理</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">REN</span> &quot;原图片名称&quot; &quot;修改后图片名称&quot;  # 批量修改图片名称，提前在excel中做好自己需要的图片名称</span><br></pre></td></tr></table></figure><p>用excel或者emeditor批量成成如上脚本，拷贝至bat文件中运行，图片名称全部按原始顺序编号。这样碎片合成起来顺序就不会乱了。</p><blockquote><p>PS：用TC UP也可以批量改名并且编号，虽然快但是顺序是不可控的，另外一个思路呢是利用采集器，直接采集的过程中就把图片按照增量顺序重命名了，这个顺序也是对的。</p></blockquote><h2 id="用FastStone-Image-Viewer拼接图像"><a href="#用FastStone-Image-Viewer拼接图像" class="headerlink" title="用FastStone Image Viewer拼接图像"></a>用FastStone Image Viewer拼接图像</h2><p><img src="https://img.16tui.com/obsidian/202207192209047.png"></p><p>复制下载的图片的文件夹路径到FastStone Image Viewer，按Ctrl+A，或者按住Shift选中第一个和最后一个进行全选。点击上面的“链接多福图片（Alt+t）”</p><p><img src="https://img.16tui.com/obsidian/202207192212093.png"></p><p>下面保留一个居中，方向下拉框中选择垂直方向，然后点击创建即可无缝拼接图像，我切一个专题切了100份，合并起来也是没有任何问题的，专题太长就不放进来了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>防盗图，还是要靠打水印，就像下面的水印，我P了一个就不想往下P了，只要你把产品和水印融为一体，抱着宁愿让客户看不清也休想盗图的心理，你就成功了。</p><p><img src="https://img.16tui.com/obsidian/202207192219671.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;好几年前，有个做淘宝店的朋友抱怨说自己辛苦做的详情图老是被盗用，于是我建议说把图片打上水印然后切稀碎，再用html代码拼接起来，一个详情页切</summary>
      
    
    
    
    <category term="10_非主攻方向" scheme="https://berlin2022.github.io/categories/10-%E9%9D%9E%E4%B8%BB%E6%94%BB%E6%96%B9%E5%90%91/"/>
    
    
    <category term="FastStone_Image_Viewer" scheme="https://berlin2022.github.io/tags/FastStone-Image-Viewer/"/>
    
  </entry>
  
  <entry>
    <title>Python和Excel终于互通了！这个Jupyter插件能自动生成代码并实现数据分析</title>
    <link href="https://berlin2022.github.io/2022-07-17-895abb9b.html"/>
    <id>https://berlin2022.github.io/2022-07-17-895abb9b.html</id>
    <published>2022-07-16T19:02:45.000Z</published>
    <updated>2022-08-01T10:43:14.395Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>作者：云朵君<br>来源：数据STUDIO</p></blockquote><p>加载一个Jupyter插件后，无需写代码就能做数据分析，还帮你生成相应代码？</p><p><img src="https://pic3.zhimg.com/v2-08641cee3201cb84f49eeff24413ef9a_b.webp" alt="动图封面"></p><p>没错，只需要加载这个名为Mito的小工具包，用Python做数据分析，变得和用Excel一样简单：</p><p><img src="https://pic1.zhimg.com/v2-3ea5c606c772603318aa0bcc27aabf14_b.webp" alt="动图封面"></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>以 Excel 为代表的电子表格是探索数据集的最重要、最具适应性的方式之一。它可以帮助对数据类型进行必要的更改、创建新特征、对数据进行排序以及从现有特征中创建新特征。</p><p>遵循以上相同的思路，Mito是一个Jupyter-Lab扩展和Python库，它使得在支持GUI的电子表格环境中操作数据变得超级容易。</p><p>Mito的出现，像是将<strong>Python</strong>的强大功能、和<strong>Excel</strong>的易用性进行了结合。</p><p>只需要掌握Excel的用法，就能使用Python的数据分析功能，还能将写出来的代码<code>“打包带走”</code>。</p><p>它弥补了Excel在数据分析上的几个<strong>缺陷</strong>：</p><ul><li>Excel无法做大数据分析（大型数据集处理得不好）</li><li>Excel运行缓慢</li><li>Excel无法轻松创建可重复流程</li></ul><p>同时，又比SQL和Python更<strong>简单</strong>、直观。毕竟这些专业工具对于0基础初学者来说，需要至少几年时间，才能完全上手。</p><p>在本文中，我们将一起学习:</p><ol><li><strong>如何合理设置Mito</strong></li><li><strong>如何debug安装错误</strong></li><li><strong>使用 Mito 提供的各种功能</strong></li><li><strong>该库如何为对数据集所做的所有操作生成 Python 等效代码</strong></li></ol><h2 id="安装Mito"><a href="#安装Mito" class="headerlink" title="安装Mito"></a>安装Mito</h2><p>Mito 是一个 Python 库，可以通过 pip 包管理器安装。它需要 Python 3.6 及以上版本。此外，系统上需要安装 Nodejs，一个 JavaScript 运行时环境。</p><p>另外，可以在单独的环境（虚拟环境）中安装这个包，可以避免一些依赖错误。接下来在终端中运行这些命令，完成安装即可。</p><h3 id="1-创建环境"><a href="#1-创建环境" class="headerlink" title="1. 创建环境"></a><strong>1. 创建环境</strong></h3><p>我正在使用 Conda 创建一个新环境。你还可以使用 Python 的<code>“venv”</code>来创建虚拟环境。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n mitoenv python=3.8</span><br></pre></td></tr></table></figure><h3 id="2-激活环境"><a href="#2-激活环境" class="headerlink" title="2. 激活环境"></a><strong>2. 激活环境</strong></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate mitoenv</span><br></pre></td></tr></table></figure><h3 id="3-通过pip安装Mito"><a href="#3-通过pip安装Mito" class="headerlink" title="3. 通过pip安装Mito"></a><strong>3. 通过pip安装Mito</strong></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mitoinstaller</span><br></pre></td></tr></table></figure><h3 id="4-运行-Mito-安装程序"><a href="#4-运行-Mito-安装程序" class="headerlink" title="4. 运行 Mito 安装程序"></a><strong>4. 运行 Mito 安装程序</strong></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m mitoinstaller install</span><br></pre></td></tr></table></figure><p>此过程将需要一段时间来安装和设置 Mito。</p><h3 id="5-启动-Jupyter-Lab"><a href="#5-启动-Jupyter-Lab" class="headerlink" title="5. 启动 Jupyter Lab"></a><strong>5. 启动 Jupyter Lab</strong></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter lab</span><br></pre></td></tr></table></figure><h3 id="报错解决"><a href="#报错解决" class="headerlink" title="报错解决"></a><strong>报错解决</strong></h3><p>当启动 Jupyter Lab时，可能会遇到如下错误：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">.</span><br><span class="line">. </span><br><span class="line">File &quot;c:userslenovoanaconda3envsmitoenvlibsite-packagesjupyter_corepaths.py&quot;, line 387, in win32_restrict_file_to_user</span><br><span class="line">    import win32api</span><br><span class="line">ImportError: DLL load failed while importing win32api: The specified module could not be found.</span><br></pre></td></tr></table></figure><p>要修复此错误，只需运行以下命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade pywin32==225</span><br></pre></td></tr></table></figure><p>如果你遇到其他困难，请随时在下面发表评论。我很乐意提供帮助。</p><h2 id="MitoSheets-界面"><a href="#MitoSheets-界面" class="headerlink" title="MitoSheets 界面"></a>MitoSheets 界面</h2><p>在 Jupyter Lab中，创建一个新笔记本并初始化 Mitosheet：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import mitosheet</span><br><span class="line">mitosheet.sheet()</span><br></pre></td></tr></table></figure><p>第一次，系统会提示输入你的电子邮件地址进行注册：</p><p><img src="/99-Attachment/assets/1657998165-e4444203b1118197c52e5d0c42c1cc46.jpg"></p><p>填写完基础知识后，将被重定向到 GUI 电子表格。接下来我们一起看看这个接口的所有特性，并一起学习如何生成 Python 等效代码。</p><h2 id="加载数据集"><a href="#加载数据集" class="headerlink" title="加载数据集"></a>加载数据集</h2><p>要在 MitoSheets 中加载数据集，只需单击导入。有两个选择：</p><ol><li><strong>从当前文件夹添加文件：</strong>这将列出当前目录中的所有 CSV 文件，可以从下拉菜单中选择文件。</li><li><strong>按文件路径添加文件：</strong>这将仅添加该特定文件。</li></ol><p>如下图所示</p><p><img src="https://pic1.zhimg.com/v2-646fb2067b30be610360492e36a08fa0_b.webp" alt="动图封面"></p><p>如果你看下面的单元格，你会发现Python等效的代码导入一个数据集使用pandas已经生成了适当的注释!</p><p><img src="/99-Attachment/assets/1657998165-6337e71b869cab3fe385d57f6cef7608.jpg"></p><p>这就是 Mito 的魅力，你在 Mitosheet 中执行的每个操作都将转换为 Python 等效代码！接下来我们一起详细探讨一下 Mito 的所有功能。</p><h2 id="添加和删除列"><a href="#添加和删除列" class="headerlink" title="添加和删除列"></a>添加和删除列</h2><h3 id="添加列"><a href="#添加列" class="headerlink" title="添加列"></a><strong>添加列</strong></h3><p>就像在 Excel 等电子表格中一样，你可以添加一个新列，该列可能是从现有列或特征创建的。要在 Mito 中执行此操作，只需单击<code>“Add Col”</code>按钮。该列将添加到当前选定的列旁边。最初，列名将是一个字母表，列的所有值都为零。</p><p><img src="https://pic4.zhimg.com/v2-27cc4d33de18c5a50663fb9bd94fe78f_b.webp" alt="动图封面"></p><h3 id="编辑新列的内容"><a href="#编辑新列的内容" class="headerlink" title="编辑新列的内容"></a><strong>编辑新列的内容</strong></h3><ol><li>单击新列名称（分配的字母表）</li><li>将弹出侧边栏菜单，你可以在其中编辑列的名称。</li><li>要更新该列的内容，请单击该列的任何单元格，然后输入值。你可以输入一个常量值，也可以根据数据集的现有特征创建值。如果要从现有列创建值，则直接使用要执行的运算符调用列名。</li><li>新列的数据类型根据分配的值进行更改。</li></ol><p>下面的 GIF 演示了上面提到的所有内容：</p><p><img src="https://pic3.zhimg.com/v2-f033ba75c562724e9220a29ffe835572_b.webp" alt="动图封面"></p><h3 id="删除列"><a href="#删除列" class="headerlink" title="删除列"></a><strong>删除列</strong></h3><ol><li>通过单击选择任何列。</li><li>单击<code>“Del Col”</code>，该特定列将从数据集中删除。</li></ol><p><img src="https://pic3.zhimg.com/v2-f033ba75c562724e9220a29ffe835572_b.webp" alt="动图封面"></p><h3 id="Python代码"><a href="#Python代码" class="headerlink" title="Python代码"></a><strong>Python代码</strong></h3><p><strong>在下一个单元格中生成带有正确注释的 Python 等效代码，用于执行的操作是：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># MITO CODE START (DO NOT EDIT)</span><br><span class="line">from mitosheet import * # Import necessary functions from Mito</span><br><span class="line">register_analysis(&#x27;UUID-7bf77d26-84f4-48ed-b389-3f7a3b729753&#x27;) # Let Mito know which analysis is being run</span><br><span class="line"># Imported edxCourses.csv</span><br><span class="line">import pandas as pd</span><br><span class="line">edxCourses_csv = pd.read_csv(&#x27;edxCourses.csv&#x27;)</span><br><span class="line"># Added column H to edxCourses_csv</span><br><span class="line">edxCourses_csv.insert(7, &#x27;H&#x27;, 0)</span><br><span class="line"># Renamed H to newCol in edxCourses_csv</span><br><span class="line">edxCourses_csv.rename(columns=&#123;&quot;H&quot;: &quot;newCol&quot;&#125;, inplace=True)</span><br><span class="line"># Set newCol in edxCourses_csv to =coursePrice + courseEnrollments</span><br><span class="line">edxCourses_csv[&#x27;newCol&#x27;] = edxCourses_csv[&#x27;coursePrice&#x27;] + edxCourses_csv[&#x27;courseEnrollments&#x27;]</span><br><span class="line"># Deleted column newCol from edxCourses_csv</span><br><span class="line">edxCourses_csv.drop(&#x27;newCol&#x27;, axis=1, inplace=True)</span><br><span class="line"># MITO CODE END (DO NOT EDIT)</span><br></pre></td></tr></table></figure><h2 id="创建数据透视表"><a href="#创建数据透视表" class="headerlink" title="创建数据透视表"></a>创建数据透视表</h2><p>数据透视表是一个重要的 excel 功能，它根据另一个分类特征汇总数字变量。要使用 Mito 创建这样的表，</p><ol><li>单击<code>“Pivot”</code>并选择源数据集（默认加载 CSV）</li><li>选择数据透视表的行、列和值列。还可以为值列选择聚合函数。所有下拉选项，如求和、平均值、中值、最小值、最大值、计数和标准偏差都可用。</li><li>选择所有必要的字段后，将获得一个单独的表，其中包含数据透视表的实现。</li></ol><p>下面的 GIF 演示了如何为聚合函数<code>“均值”</code>创建数据透视表：</p><p><img src="https://pic2.zhimg.com/v2-4456dcbe39937e1aa0a44abbdee65f8d_b.webp" alt="动图封面"></p><h3 id="Python代码-1"><a href="#Python代码-1" class="headerlink" title="Python代码"></a><strong>Python代码</strong></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># MITO CODE START (DO NOT EDIT)</span><br><span class="line">from mitosheet import * # Import necessary functions from Mito</span><br><span class="line">register_analysis(&#x27;UUID-a35246c0-e0dc-436b-8667-076d4f08e0c1&#x27;) # Let Mito know which analysis is being run</span><br><span class="line"># Imported edxCourses.csv</span><br><span class="line">import pandas as pd</span><br><span class="line">edxCourses_csv = pd.read_csv(&#x27;edxCourses.csv&#x27;)</span><br><span class="line"># Pivoted edxCourses_csv into df2</span><br><span class="line">pivot_table = edxCourses_csv.pivot_table(</span><br><span class="line">    index=[&#x27;courseOrganization&#x27;],</span><br><span class="line">    values=[&#x27;coursePrice&#x27;],</span><br><span class="line">    aggfunc=&#123;&#x27;coursePrice&#x27;: &#x27;mean&#x27;&#125;</span><br><span class="line">)</span><br><span class="line"># Reset the column name and the indexes</span><br><span class="line">df2 = pivot_table.rename_axis(None, axis=1).reset_index()</span><br><span class="line"># MITO CODE END (DO NOT EDIT)</span><br></pre></td></tr></table></figure><h2 id="合并两个数据集"><a href="#合并两个数据集" class="headerlink" title="合并两个数据集"></a>合并两个数据集</h2><p>合并数据集是数据科学项目的重要组成部分。通常，数据集被划分到不同的表格中，以增加信息的可访问性和可读性。合并 Mitosheets 很容易。</p><ol><li>单击<code>“Merge”</code>并选择数据源。</li><li>需要指定要对其进行合并的键。</li><li>也可以从数据源中选择合并后要保留的列。默认情况下，所有列都将保留在合并的数据集中。</li></ol><p><img src="https://pic2.zhimg.com/v2-37d42bc8befb6a44177f0377b07647dd_b.webp" alt="动图封面"></p><h3 id="Python代码-2"><a href="#Python代码-2" class="headerlink" title="Python代码"></a><strong>Python代码</strong></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># MITO CODE START (DO NOT EDIT)</span><br><span class="line">from mitosheet import * # Import necessary functions from Mito</span><br><span class="line">register_analysis(&#x27;UUID-88ac4a92-062f-4ed8-a55d-729394975740&#x27;) # Let Mito know which analysis is being run</span><br><span class="line"># Imported Airport-Pets.csv, Zipcode-Data.csv</span><br><span class="line">import pandas as pd</span><br><span class="line">Airport_Pets_csv = pd.read_csv(&#x27;Airport-Pets.csv&#x27;)</span><br><span class="line">Zipcode_Data_csv = pd.read_csv(&#x27;Zipcode-Data.csv&#x27;)</span><br><span class="line"># Merged Airport_Pets_csv and Zipcode_Data_csv</span><br><span class="line">temp_df = Zipcode_Data_csv.drop_duplicates(subset=&#x27;Zip&#x27;)</span><br><span class="line">Airport_Pets_csv_tmp = Airport_Pets_csv.drop([&#x27;State&#x27;, &#x27;Division&#x27;], axis=1)</span><br><span class="line">Zipcode_Data_csv_tmp = temp_df.drop([&#x27;Mean_Income&#x27;, &#x27;Pop&#x27;], axis=1)</span><br><span class="line">df3 = Airport_Pets_csv_tmp.merge(Zipcode_Data_csv_tmp, left_on=[&#x27;Zip&#x27;], right_on=[&#x27;Zip&#x27;], how=&#x27;left&#x27;, suffixes=[&#x27;_Airport_Pets_csv&#x27;, &#x27;_Zipcode_Data_csv&#x27;])</span><br><span class="line"># MITO CODE END (DO NOT EDIT)</span><br></pre></td></tr></table></figure><h2 id="修改列数据类型、排序和过滤"><a href="#修改列数据类型、排序和过滤" class="headerlink" title="修改列数据类型、排序和过滤"></a>修改列数据类型、排序和过滤</h2><p>你可以更改现有列的数据类型，按升序或降序对列进行排序，或通过边界条件过滤它们。在 Mito 中的这些都很简单，可以通过选择屏幕上的选项通过GUI本身完成。</p><ol><li>单击所需的列</li><li>将看到一个数据类型列表。可以根据需要从下拉列表中选择任何数据类型，该数据类型将应用于整个列。</li><li>接下来可以通过选择提供的选项按升序或降序对数据进行排序。</li><li>还可以使用自定义过滤器过滤数据。</li></ol><p><img src="https://pic4.zhimg.com/v2-3296c6db75c7d5ac7ba142481d854157_b.webp" alt="动图封面"></p><h3 id="Python代码-3"><a href="#Python代码-3" class="headerlink" title="Python代码"></a><strong>Python代码</strong></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># MITO CODE START (DO NOT EDIT)</span><br><span class="line">from mitosheet import * # Import necessary functions from Mito</span><br><span class="line">register_analysis(&#x27;UUID-cc414267-d9aa-4017-8890-ee3b7461c15b&#x27;) # Let Mito know which analysis is being run</span><br><span class="line"># Imported edxCourses.csv</span><br><span class="line">import pandas as pd</span><br><span class="line">edxCourses_csv = pd.read_csv(&#x27;edxCourses.csv&#x27;)</span><br><span class="line"># Changed coursePrice from int64 to float</span><br><span class="line">edxCourses_csv[&#x27;coursePrice&#x27;] = edxCourses_csv[&#x27;coursePrice&#x27;].astype(&#x27;float&#x27;)</span><br><span class="line"># Sorted coursePrice in edxCourses_csv in descending order</span><br><span class="line">edxCourses_csv = edxCourses_csv.sort_values(by=&#x27;coursePrice&#x27;, ascending=False, na_position=&#x27;first&#x27;)</span><br><span class="line">edxCourses_csv = edxCourses_csv.reset_index(drop=True)</span><br><span class="line"># Filtered coursePrice in edxCourses_csv</span><br><span class="line">edxCourses_csv = edxCourses_csv[edxCourses_csv[&#x27;coursePrice&#x27;] &gt;= 500]</span><br><span class="line">edxCourses_csv = edxCourses_csv.reset_index(drop=True)</span><br><span class="line"># MITO CODE END (DO NOT EDIT)</span><br></pre></td></tr></table></figure><h2 id="图表和统计数据生成"><a href="#图表和统计数据生成" class="headerlink" title="图表和统计数据生成"></a>图表和统计数据生成</h2><p>还可以直接在此扩展中生成图形，而无需编写绘图逻辑。默认情况下，此扩展生成的所有图都是使用 Plotly 制作的。这意味着绘图是交互式的，可以即时修改。</p><p>注意，这里并没有像操作列一样，在下一个单元格中生成图形代码（也许开发人员会在以后的更新中推送此代码）</p><p><strong>可以使用 Mito 生成两种类型的图：</strong></p><h3 id="1-通过点击图表按钮"><a href="#1-通过点击图表按钮" class="headerlink" title="1. 通过点击图表按钮"></a><strong>1. 通过点击图表按钮</strong></h3><p>你将看到一个侧边栏菜单，用于选择图形类型和要选择的相应轴。</p><p><img src="https://pic1.zhimg.com/v2-c761626ead0b56705a62bb35858142ac_b.webp" alt="动图封面"></p><h3 id="2-通过点击列名"><a href="#2-通过点击列名" class="headerlink" title="2. 通过点击列名"></a><strong>2. 通过点击列名</strong></h3><p>当你点击电子表格中的列名称时，可以看见过滤器和排序选项。但如果你导航到<code>“Summary Stats”</code>，则会根据变量的类型显示线图或条形图以及变量的摘要。此摘要更改为文本和没有文本变量。</p><p><img src="https://pic4.zhimg.com/v2-d17016252beb707e0b3b529e42906793_b.webp" alt="动图封面"></p><h2 id="保存和回放"><a href="#保存和回放" class="headerlink" title="保存和回放"></a>保存和回放</h2><p>对数据集所做的所有转换都可以保存并用于其他类似的数据集。这在 Excel 中采用宏或 VBA 的形式。也可以通过这些功能完成相同的操作。</p><p><img src="https://pic2.zhimg.com/80/v2-3a56c370b275a2afec2c90ab0da6b829_720w.jpg"><br>文件是以Python编写的，而不是用比较难懂的VBA。</p><p><img src="https://pic2.zhimg.com/v2-91c89911075171e018854b7e7e2d1949_b.webp" alt="动图封面"></p><h2 id="回溯执行的所有步骤"><a href="#回溯执行的所有步骤" class="headerlink" title="回溯执行的所有步骤"></a>回溯执行的所有步骤</h2><p>要想重复上面的步骤的话，也非常容易，Mito自带<code>“重复已保存分析步骤”</code>功能，一键就能用同样的方法分析其他数据。这个功能是最有趣的。你实际上可以追踪在Mitosheet 中应用的所有转换。所有操作的列表都带有适当的标题。</p><p>此外，你可以查看该特定步骤！这意味着假设你更改了一些列，然后删除了它们。你可以退回到未删除的时间。</p><p><img src="https://pic4.zhimg.com/v2-ad65ba9db3dc2f0772fc108837e660eb_b.webp" alt="动图封面"></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>新工具<code>“Mito”</code>，用于在 Python 环境中实现类似电子表格的功能，并为所做的每一步生成等效操作的 Python 代码。</p><hr><p>原网址: <a href="https://zhuanlan.zhihu.com/p/456834567">访问</a> | 创建时间: 2022-07-17 03:02:45</p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;作者：云朵君&lt;br&gt;来源：数据STUDIO&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;加载一个Jupyter插件后，无需写代码就能做数据分析，还帮你生成相应代码？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pic3.zhimg.c</summary>
      
    
    
    
    <category term="12-实力不允许" scheme="https://berlin2022.github.io/categories/12-%E5%AE%9E%E5%8A%9B%E4%B8%8D%E5%85%81%E8%AE%B8/"/>
    
    
    <category term="excel" scheme="https://berlin2022.github.io/tags/excel/"/>
    
    <category term="Python" scheme="https://berlin2022.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>用了这个jupyter插件，我已经半个月没打开过excel了</title>
    <link href="https://berlin2022.github.io/2022-07-17-c018d8d8.html"/>
    <id>https://berlin2022.github.io/2022-07-17-c018d8d8.html</id>
    <published>2022-07-16T18:56:01.000Z</published>
    <updated>2022-08-01T10:43:14.400Z</updated>
    
    <content type="html"><![CDATA[<hr><p><strong>1 简介</strong><br><code>jupyter lab</code>是我迄今为止体验过开展数据分析等任务最舒适的平台，但这不代表它是完美的，因为在很多方面它仍然存在欠缺，譬如在对<code>csv</code>文件的交互式编辑方面。  </p><p><img src="/99-Attachment/assets/1657997761-88272b1ffd80cfe4e330c5fd1bc0059f.jpg"></p><p>图1　　而本文将要介绍的<code>jupyter lab</code>插件就赋予我们高度的交互式操纵<code>csv</code>文件的自由，无需excel，就可以实现对<code>csv</code>表格数据的<strong>增删改查</strong>。<br><strong>2 在jupyter lab中编辑csv文件<a href="https://link.zhihu.com/?target=https://www.cnblogs.com/feffery/p/13647422.html%232558162782">#</a></strong><br>　　为了能够在<code>jupyter lab</code>中实现<code>csv</code>文件的编辑，我们需要先安装插件<code>jupyterlab-tabular-data-editor</code>，执行下面的命令完成安装：<br>jupyter labextension install jupyterlab-tabular-data-editor<br>　　安装完成后，再次启动<code>jupyter lab</code>可以发现在<strong>Launcher</strong>页面最下面一排多了一个<code>CSV File</code>图标：  </p><p><img src="/99-Attachment/assets/1657997761-518d74cef58dc2b7f59ec2ae808171b9.jpg"></p><p>图2　　点击它就可以打开崭新的<code>csv</code>文件编辑窗口：  </p><p><img src="/99-Attachment/assets/1657997761-5953e21e6f95dd8f3635c05f336e07d6.jpg"></p><p>图3　　下面我们来看看常用的一些功能：  </p><ul><li><strong>新增行或列</strong></li></ul><p>　　通过点击行或列上的<code>+</code>，可以创建新的行或列：  </p><p><img src="https://img.16tui.com/obsidian/202207170257307.webp" alt="动图封面"></p><p>图4</p><ul><li><strong>修改列名</strong></li></ul><p>　　双击原有的列名，即可进入编辑状态修改列名：  </p><p><img src="https://img.16tui.com/obsidian/202207170258585.webp" alt="动图封面"></p><p>图5</p><ul><li><strong>自由拖动行或列</strong></li></ul><p>　　通过拖拽的方式，可以自由调整某行或某列的位置：  </p><p><img src="https://img.16tui.com/obsidian/202207170258320.webp" alt="动图封面"></p><p>图6</p><ul><li><strong>单个或多个单元格的复制粘贴</strong></li></ul><p>　　同样支持对单个或多个单元格的复制粘贴：<br><img src="https://img.16tui.com/obsidian/202207170259835.webp"></p><p>图7　　除了这些，还支持对列元素类型的自动推断及交互式修改等功能：  </p><p><img src="https://img.16tui.com/obsidian/202207170300802.webp"></p><p>图8　　你可以访问<a href="https://link.zhihu.com/?target=https://jupyterlab-tabular-data-editor.readthedocs.io/en/latest/user/ux.html">官方文档</a>来查看更多功能介绍，有了这个小工具，再配合我们熟悉的<code>pandas</code>等库，在<code>jupyter lab</code>中处理表格数据变得越来越轻松~  </p><p>　　以上就是本文的全部内容，欢迎在评论区与我进行讨论</p><hr><p>原网址: <a href="https://zhuanlan.zhihu.com/p/234734361">访问</a> | 创建时间: 2022-07-17 02:56:01</p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;1 简介&lt;/strong&gt;&lt;br&gt;&lt;code&gt;jupyter lab&lt;/code&gt;是我迄今为止体验过开展数据分析等任务最舒适的平台，但这不代表它是完美的，因为在很多方面它仍然存在欠缺，譬如在对&lt;code&gt;csv&lt;/code&gt;文件的交互式编辑方面。 </summary>
      
    
    
    
    <category term="12-实力不允许" scheme="https://berlin2022.github.io/categories/12-%E5%AE%9E%E5%8A%9B%E4%B8%8D%E5%85%81%E8%AE%B8/"/>
    
    
    <category term="excel" scheme="https://berlin2022.github.io/tags/excel/"/>
    
    <category term="Python" scheme="https://berlin2022.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Excel 用Python实现数据可视化、趋势、周期分析</title>
    <link href="https://berlin2022.github.io/2022-07-17-f5fda0d.html"/>
    <id>https://berlin2022.github.io/2022-07-17-f5fda0d.html</id>
    <published>2022-07-16T18:54:19.000Z</published>
    <updated>2022-08-01T10:43:14.391Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>年后工作开始走上正轨了，开始EFunction Python数据分析模板制作工作。周末闭关两天，实现了五个功能模板。将功能模板操作方法做个简单介绍。</p></blockquote><p>使用模板前，先要完成Excel 插件EFunction加载和jupyter配置，加载和配置方法如下。</p><p><a href="https://zhuanlan.zhihu.com/p/412895720">Hi Excel：Excel 高级函数插件EFunction加载和卸载</a></p><p><a href="https://zhuanlan.zhihu.com/p/446922873">Hi Excel：花了一周时间，终于搭建好了Excel和Python交互数据分析平台</a></p><h2 id="模板1：绘制直方图"><a href="#模板1：绘制直方图" class="headerlink" title="模板1：绘制直方图"></a>模板1：绘制直方图</h2><p>以IRIS数据集为例，打开jupyter编辑器，新建一个notebook，选中Excel需要分析的数据区域，右键-&gt;jupyter 高级-&gt;数据可视化-&gt;直方图（以下四个案例，操作过程和本过程类似）。</p><p><img src="/99-Attachment/assets/1657997659-cc0929a116be42be9e9dda09ab65effc.jpg"></p><p>选中数据选区</p><p><img src="/99-Attachment/assets/1657997659-dff21e0bec8ae433d3f799f6fc6d9159.jpg"></p><p>直方图</p><p>直方图模板，默认会对选区内第一列数值数据绘制直方图。通过调整数据，可以切换到其他列数据，绘制直方图。</p><p>同时在参数控制区域内，可以控制是否显示核密度曲线、累积概率等、调整区间宽度、直方图颜色等参数。</p><p><img src="/99-Attachment/assets/1657997659-bbbdce1cb9cca767b8520ccd3976a590.jpg"></p><p>直方图数据和参数控制</p><h2 id="模板2：趋势和周期分析"><a href="#模板2：趋势和周期分析" class="headerlink" title="模板2：趋势和周期分析"></a>模板2：趋势和周期分析</h2><p>序列型数据趋势和周期分析，在很多应用场景下，都会碰到。经验模态分解（EMD）为周期性分析经典方法，其不像傅里叶变换要求和么严格，可解释性强。</p><p>演示数据集为某光伏电站监控参数为例。选择一千个数据点位，右键-&gt;jupyter 高级-&gt;数据可视化-&gt;EMD，根据筛选数据体量，稍等片刻后，可以获取如下的分析结果图。</p><p><img src="/99-Attachment/assets/1657997659-666d553755607c189e4396c39c5b527f.jpg"></p><p>光照强度EMD分解结果</p><p>从</p><p>从分析结果可以看出来，每日光照强度的周期性，同时时间推移，数据具有季节性。</p><p>EMD分解原理本文就不脑补了，大家可以找相关资料了解下。是很常用的序列数据分析方法，其在数据挖掘领域通常用于数据早期探究，特征工程领域应用。</p><h2 id="模板3：权重因子初步探索"><a href="#模板3：权重因子初步探索" class="headerlink" title="模板3：权重因子初步探索"></a>模板3：权重因子初步探索</h2><p>在很多影响因子分析之中，因子权重是一个重要主题。比较常见的有回归相关分析法，但回归方法使用条件要求严苛。近些年层次分析方法，打破了这个限制。比较经典的有随机森林，xgboost、LGB等方法。</p><p>还以光电站数据为例，研究下，电站发电功能和环境因素之间相关关系。右键-&gt;jupyter 高级-&gt;重要度分析-&gt;LGB模型重要度分析</p><p><img src="/99-Attachment/assets/1657997659-b12271af5a065cc9a49ec4190d5a0442.jpg"></p><p>LGB模型重要度分析</p><p>通过分析结果，可知发电功率影响最大的就是光照强度，温湿度也有一定影响（温湿度本身也和光照强度之间相关）。</p><h2 id="模板4：文本词频分析"><a href="#模板4：文本词频分析" class="headerlink" title="模板4：文本词频分析"></a><strong>模板4：文本词频分析</strong></h2><p>在很多场合，我们会获得文本类型数据，例如电商客户点评数据，一个最简单且最初级的方法就是，通过词频大概了解下，文本主要内容是什么。</p><p>我们以kaggle竞赛，某点评数据集为例，将40万条数据，右键-&gt;jupyter 高级-&gt;文本分析-&gt;获取词频。</p><p><img src="/99-Attachment/assets/1657997659-1421824674ac347f435a901d88face30.jpg"></p><p>对文本进行分析，并统计词频</p><p>模板会以jieba分词工具，对文本数据进行分词，最终将分析结果，输出到Excel表格，提供下一步分析。目前模板只做了分词处理，后续分词结果可视化模板，等待后续进一步处理。</p><h2 id="模板5：双变量相关可视化"><a href="#模板5：双变量相关可视化" class="headerlink" title="模板5：双变量相关可视化"></a>模板5：双变量相关可视化</h2><p>我们以kaggle竞赛，美国汽车排放数据集为例，右键-&gt;jupyter 高级-&gt;可视化-&gt;pairplot</p><p><img src="/99-Attachment/assets/1657997659-0f4df4cf99f542644f6104493d90764a.jpg"></p><p>变量相关性</p><p>通过可视化方法，研究数据相关性。模板操纵方法，和以上基本相同。</p><blockquote><p>这个周末，好不容易天晴，本来想出去走走，最近因为香港疫情，影响到内地，又开始紧张起来，就取消出门浪的计划，只做了5个模板，大家对模板有什么想法，欢迎提出来。</p></blockquote><hr><p>原网址: <a href="https://zhuanlan.zhihu.com/p/473334843">访问</a> | 创建时间: 2022-07-17 02:54:19</p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;年后工作开始走上正轨了，开始EFunction Python数据分析模板制作工作。周末闭关两天，实现了五个功能模板。将功能模板操作方法做个简单介绍。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用模板前，先要完成Excel 插件EFunc</summary>
      
    
    
    
    <category term="12-实力不允许" scheme="https://berlin2022.github.io/categories/12-%E5%AE%9E%E5%8A%9B%E4%B8%8D%E5%85%81%E8%AE%B8/"/>
    
    
    <category term="excel" scheme="https://berlin2022.github.io/tags/excel/"/>
    
    <category term="Python" scheme="https://berlin2022.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>这个插件竟打通了Python和Excel，还能自动生成代码！</title>
    <link href="https://berlin2022.github.io/2022-07-17-e1525c34.html"/>
    <id>https://berlin2022.github.io/2022-07-17-e1525c34.html</id>
    <published>2022-07-16T18:13:24.000Z</published>
    <updated>2022-08-01T10:43:14.402Z</updated>
    
    <content type="html"><![CDATA[<hr><p>加载一个Jupyter插件后，无需写代码就能做数据分析，还帮你生成相应代码？</p><p><img src="https://img.16tui.com/obsidian/202207170219795.webp"></p><p>没错，只需要加载这个名为Mito的小工具包，用Python做数据分析，变得和用Excel一样简单：</p><p><img src="https://img.16tui.com/obsidian/202207170224883.webp" alt="动图封面"></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>以 Excel 为代表的电子表格是探索数据集的最重要、最具适应性的方式之一。它可以帮助对数据类型进行必要的更改、创建新特征、对数据进行排序以及从现有特征中创建新特征。</p><p>遵循以上相同的思路，Mito是一个Jupyter-Lab扩展和Python库，它使得在支持GUI的电子表格环境中操作数据变得超级容易。</p><p>Mito的出现，像是将<strong>Python</strong>的强大功能、和<strong>Excel</strong>的易用性进行了结合。</p><p>只需要掌握Excel的用法，就能使用Python的数据分析功能，还能将写出来的代码<code>“打包带走”</code>。</p><p>它弥补了Excel在数据分析上的几个<strong>缺陷</strong>：</p><ul><li>Excel无法做大数据分析（大型数据集处理得不好）</li><li>Excel运行缓慢</li><li>Excel无法轻松创建可重复流程</li></ul><p>同时，又比SQL和Python更<strong>简单</strong>、直观。毕竟这些专业工具对于0基础初学者来说，需要至少几年时间，才能完全上手。</p><p>在本文中，我们将一起学习:</p><ol><li><strong>如何合理设置Mito</strong></li><li><strong>如何debug安装错误</strong></li><li><strong>使用 Mito 提供的各种功能</strong></li><li><strong>该库如何为对数据集所做的所有操作生成 Python 等效代码</strong></li></ol><h2 id="安装Mito"><a href="#安装Mito" class="headerlink" title="安装Mito"></a>安装Mito</h2><p>Mito 是一个 Python 库，可以通过 pip 包管理器安装。它需要 Python 3.6 及以上版本。此外，系统上需要安装 Nodejs，一个 JavaScript 运行时环境。</p><p>另外，可以在单独的环境（虚拟环境）中安装这个包，可以避免一些依赖错误。接下来在终端中运行这些命令，完成安装即可。</p><h3 id="1-创建环境"><a href="#1-创建环境" class="headerlink" title="1. 创建环境"></a><strong>1. 创建环境</strong></h3><p>我正在使用 Conda 创建一个新环境。你还可以使用 Python 的<code>“venv”</code>来创建虚拟环境。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n mitoenv python=3.8</span><br></pre></td></tr></table></figure><h3 id="2-激活环境"><a href="#2-激活环境" class="headerlink" title="2. 激活环境"></a><strong>2. 激活环境</strong></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate mitoenv</span><br></pre></td></tr></table></figure><h3 id="3-通过pip安装Mito"><a href="#3-通过pip安装Mito" class="headerlink" title="3. 通过pip安装Mito"></a><strong>3. 通过pip安装Mito</strong></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mitoinstaller</span><br></pre></td></tr></table></figure><h3 id="4-运行-Mito-安装程序"><a href="#4-运行-Mito-安装程序" class="headerlink" title="4. 运行 Mito 安装程序"></a><strong>4. 运行 Mito 安装程序</strong></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m mitoinstaller install</span><br></pre></td></tr></table></figure><p>此过程将需要一段时间来安装和设置 Mito。</p><h3 id="5-启动-Jupyter-Lab"><a href="#5-启动-Jupyter-Lab" class="headerlink" title="5. 启动 Jupyter Lab"></a><strong>5. 启动 Jupyter Lab</strong></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter lab</span><br></pre></td></tr></table></figure><h3 id="报错解决"><a href="#报错解决" class="headerlink" title="报错解决"></a><strong>报错解决</strong></h3><p>当启动 Jupyter Lab时，可能会遇到如下错误：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">.</span><br><span class="line">. </span><br><span class="line">File &quot;c:userslenovoanaconda3envsmitoenvlibsite-packagesjupyter_corepaths.py&quot;, line 387, in win32_restrict_file_to_user</span><br><span class="line">    import win32api</span><br><span class="line">ImportError: DLL load failed while importing win32api: The specified module could not be found.</span><br></pre></td></tr></table></figure><p>要修复此错误，只需运行以下命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade pywin32==225</span><br></pre></td></tr></table></figure><p>如果你遇到其他困难，请随时在下面发表评论。我很乐意提供帮助。</p><h2 id="MitoSheets-界面"><a href="#MitoSheets-界面" class="headerlink" title="MitoSheets 界面"></a>MitoSheets 界面</h2><p>在 Jupyter Lab中，创建一个新笔记本并初始化 Mitosheet：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import mitosheet</span><br><span class="line">mitosheet.sheet()</span><br></pre></td></tr></table></figure><p>第一次，系统会提示输入你的电子邮件地址进行注册：</p><p><img src="/99-Attachment/assets/1657995204-89fe13d5dae707b9416faec411653678.jpg"></p><p>填写完基础知识后，将被重定向到 GUI 电子表格。接下来我们一起看看这个接口的所有特性，并一起学习如何生成 Python 等效代码。</p><h2 id="加载数据集"><a href="#加载数据集" class="headerlink" title="加载数据集"></a>加载数据集</h2><p>要在 MitoSheets 中加载数据集，只需单击导入。有两个选择：</p><ol><li><strong>从当前文件夹添加文件：</strong>这将列出当前目录中的所有 CSV 文件，可以从下拉菜单中选择文件。</li><li><strong>按文件路径添加文件：</strong>这将仅添加该特定文件。</li></ol><p>如下图所示</p><p><img src="https://img.16tui.com/obsidian/202207170225225.webp" alt="动图封面"></p><p>如果你看下面的单元格，你会发现Python等效的代码导入一个数据集使用pandas已经生成了适当的注释!</p><p><img src="/99-Attachment/assets/1657995204-6337e71b869cab3fe385d57f6cef7608.jpg"></p><p>这就是 Mito 的魅力，你在 Mitosheet 中执行的每个操作都将转换为 Python 等效代码！接下来我们一起详细探讨一下 Mito 的所有功能。</p><h2 id="添加和删除列"><a href="#添加和删除列" class="headerlink" title="添加和删除列"></a>添加和删除列</h2><h3 id="添加列"><a href="#添加列" class="headerlink" title="添加列"></a><strong>添加列</strong></h3><p>就像在 Excel 等电子表格中一样，你可以添加一个新列，该列可能是从现有列或特征创建的。要在 Mito 中执行此操作，只需单击<code>“Add Col”</code>按钮。该列将添加到当前选定的列旁边。最初，列名将是一个字母表，列的所有值都为零。</p><p><img src="https://img.16tui.com/obsidian/202207170226339.webp" alt="动图封面"></p><h3 id="编辑新列的内容"><a href="#编辑新列的内容" class="headerlink" title="编辑新列的内容"></a><strong>编辑新列的内容</strong></h3><ol><li>单击新列名称（分配的字母表）</li><li>将弹出侧边栏菜单，你可以在其中编辑列的名称。</li><li>要更新该列的内容，请单击该列的任何单元格，然后输入值。你可以输入一个常量值，也可以根据数据集的现有特征创建值。如果要从现有列创建值，则直接使用要执行的运算符调用列名。</li><li>新列的数据类型根据分配的值进行更改。</li></ol><p>下面的 GIF 演示了上面提到的所有内容：</p><p><img src="https://img.16tui.com/obsidian/202207170238234.webp" alt="动图"></p><h3 id="删除列"><a href="#删除列" class="headerlink" title="删除列"></a><strong>删除列</strong></h3><ol><li>通过单击选择任何列。</li><li>单击<code>“Del Col”</code>，该特定列将从数据集中删除。</li></ol><p><img src="https://img.16tui.com/obsidian/202207170228163.webp" alt="动图封面"></p><h3 id="Python代码"><a href="#Python代码" class="headerlink" title="Python代码"></a><strong>Python代码</strong></h3><p><strong>在下一个单元格中生成带有正确注释的 Python 等效代码，用于执行的操作是：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># MITO CODE START (DO NOT EDIT)</span><br><span class="line">from mitosheet import * # Import necessary functions from Mito</span><br><span class="line">register_analysis(&#x27;UUID-7bf77d26-84f4-48ed-b389-3f7a3b729753&#x27;) # Let Mito know which analysis is being run</span><br><span class="line"># Imported edxCourses.csv</span><br><span class="line">import pandas as pd</span><br><span class="line">edxCourses_csv = pd.read_csv(&#x27;edxCourses.csv&#x27;)</span><br><span class="line"># Added column H to edxCourses_csv</span><br><span class="line">edxCourses_csv.insert(7, &#x27;H&#x27;, 0)</span><br><span class="line"># Renamed H to newCol in edxCourses_csv</span><br><span class="line">edxCourses_csv.rename(columns=&#123;&quot;H&quot;: &quot;newCol&quot;&#125;, inplace=True)</span><br><span class="line"># Set newCol in edxCourses_csv to =coursePrice + courseEnrollments</span><br><span class="line">edxCourses_csv[&#x27;newCol&#x27;] = edxCourses_csv[&#x27;coursePrice&#x27;] + edxCourses_csv[&#x27;courseEnrollments&#x27;]</span><br><span class="line"># Deleted column newCol from edxCourses_csv</span><br><span class="line">edxCourses_csv.drop(&#x27;newCol&#x27;, axis=1, inplace=True)</span><br><span class="line"># MITO CODE END (DO NOT EDIT)</span><br></pre></td></tr></table></figure><h2 id="创建数据透视表"><a href="#创建数据透视表" class="headerlink" title="创建数据透视表"></a>创建数据透视表</h2><p>数据透视表是一个重要的 excel 功能，它根据另一个分类特征汇总数字变量。要使用 Mito 创建这样的表，</p><ol><li>单击<code>“Pivot”</code>并选择源数据集（默认加载 CSV）</li><li>选择数据透视表的行、列和值列。还可以为值列选择聚合函数。所有下拉选项，如求和、平均值、中值、最小值、最大值、计数和标准偏差都可用。</li><li>选择所有必要的字段后，将获得一个单独的表，其中包含数据透视表的实现。</li></ol><p>下面的 GIF 演示了如何为聚合函数<code>“均值”</code>创建数据透视表：</p><p><img src="https://img.16tui.com/obsidian/202207170229298.webp" alt="动图封面"></p><h3 id="Python代码-1"><a href="#Python代码-1" class="headerlink" title="Python代码"></a><strong>Python代码</strong></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># MITO CODE START (DO NOT EDIT)</span><br><span class="line">from mitosheet import * # Import necessary functions from Mito</span><br><span class="line">register_analysis(&#x27;UUID-a35246c0-e0dc-436b-8667-076d4f08e0c1&#x27;) # Let Mito know which analysis is being run</span><br><span class="line"># Imported edxCourses.csv</span><br><span class="line">import pandas as pd</span><br><span class="line">edxCourses_csv = pd.read_csv(&#x27;edxCourses.csv&#x27;)</span><br><span class="line"># Pivoted edxCourses_csv into df2</span><br><span class="line">pivot_table = edxCourses_csv.pivot_table(</span><br><span class="line">    index=[&#x27;courseOrganization&#x27;],</span><br><span class="line">    values=[&#x27;coursePrice&#x27;],</span><br><span class="line">    aggfunc=&#123;&#x27;coursePrice&#x27;: &#x27;mean&#x27;&#125;</span><br><span class="line">)</span><br><span class="line"># Reset the column name and the indexes</span><br><span class="line">df2 = pivot_table.rename_axis(None, axis=1).reset_index()</span><br><span class="line"># MITO CODE END (DO NOT EDIT)</span><br></pre></td></tr></table></figure><h2 id="合并两个数据集"><a href="#合并两个数据集" class="headerlink" title="合并两个数据集"></a>合并两个数据集</h2><p>合并数据集是数据科学项目的重要组成部分。通常，数据集被划分到不同的表格中，以增加信息的可访问性和可读性。合并 Mitosheets 很容易。</p><ol><li>单击<code>“Merge”</code>并选择数据源。</li><li>需要指定要对其进行合并的键。</li><li>也可以从数据源中选择合并后要保留的列。默认情况下，所有列都将保留在合并的数据集中。</li></ol><p><img src="https://img.16tui.com/obsidian/202207170229101.webp" alt="动图封面"></p><h3 id="Python代码-2"><a href="#Python代码-2" class="headerlink" title="Python代码"></a><strong>Python代码</strong></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># MITO CODE START (DO NOT EDIT)</span><br><span class="line">from mitosheet import * # Import necessary functions from Mito</span><br><span class="line">register_analysis(&#x27;UUID-88ac4a92-062f-4ed8-a55d-729394975740&#x27;) # Let Mito know which analysis is being run</span><br><span class="line"># Imported Airport-Pets.csv, Zipcode-Data.csv</span><br><span class="line">import pandas as pd</span><br><span class="line">Airport_Pets_csv = pd.read_csv(&#x27;Airport-Pets.csv&#x27;)</span><br><span class="line">Zipcode_Data_csv = pd.read_csv(&#x27;Zipcode-Data.csv&#x27;)</span><br><span class="line"># Merged Airport_Pets_csv and Zipcode_Data_csv</span><br><span class="line">temp_df = Zipcode_Data_csv.drop_duplicates(subset=&#x27;Zip&#x27;)</span><br><span class="line">Airport_Pets_csv_tmp = Airport_Pets_csv.drop([&#x27;State&#x27;, &#x27;Division&#x27;], axis=1)</span><br><span class="line">Zipcode_Data_csv_tmp = temp_df.drop([&#x27;Mean_Income&#x27;, &#x27;Pop&#x27;], axis=1)</span><br><span class="line">df3 = Airport_Pets_csv_tmp.merge(Zipcode_Data_csv_tmp, left_on=[&#x27;Zip&#x27;], right_on=[&#x27;Zip&#x27;], how=&#x27;left&#x27;, suffixes=[&#x27;_Airport_Pets_csv&#x27;, &#x27;_Zipcode_Data_csv&#x27;])</span><br><span class="line"># MITO CODE END (DO NOT EDIT)</span><br></pre></td></tr></table></figure><h2 id="修改列数据类型、排序和过滤"><a href="#修改列数据类型、排序和过滤" class="headerlink" title="修改列数据类型、排序和过滤"></a>修改列数据类型、排序和过滤</h2><p>你可以更改现有列的数据类型，按升序或降序对列进行排序，或通过边界条件过滤它们。在 Mito 中的这些都很简单，可以通过选择屏幕上的选项通过GUI本身完成。</p><ol><li>单击所需的列</li><li>将看到一个数据类型列表。可以根据需要从下拉列表中选择任何数据类型，该数据类型将应用于整个列。</li><li>接下来可以通过选择提供的选项按升序或降序对数据进行排序。</li><li>还可以使用自定义过滤器过滤数据。</li></ol><p><img src="https://img.16tui.com/obsidian/202207170230675.webp" alt="动图封面"></p><h3 id="Python代码-3"><a href="#Python代码-3" class="headerlink" title="Python代码"></a><strong>Python代码</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MITO CODE START (DO NOT EDIT)</span></span><br><span class="line"><span class="keyword">from</span> mitosheet <span class="keyword">import</span> * <span class="comment"># Import necessary functions from Mito</span></span><br><span class="line">register_analysis(<span class="string">&#x27;UUID-cc414267-d9aa-4017-8890-ee3b7461c15b&#x27;</span>) <span class="comment"># Let Mito know which analysis is being run</span></span><br><span class="line"><span class="comment"># Imported edxCourses.csv</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">edxCourses_csv = pd.read_csv(<span class="string">&#x27;edxCourses.csv&#x27;</span>)</span><br><span class="line"><span class="comment"># Changed coursePrice from int64 to float</span></span><br><span class="line">edxCourses_csv[<span class="string">&#x27;coursePrice&#x27;</span>] = edxCourses_csv[<span class="string">&#x27;coursePrice&#x27;</span>].astype(<span class="string">&#x27;float&#x27;</span>)</span><br><span class="line"><span class="comment"># Sorted coursePrice in edxCourses_csv in descending order</span></span><br><span class="line">edxCourses_csv = edxCourses_csv.sort_values(by=<span class="string">&#x27;coursePrice&#x27;</span>, ascending=<span class="literal">False</span>, na_position=<span class="string">&#x27;first&#x27;</span>)</span><br><span class="line">edxCourses_csv = edxCourses_csv.reset_index(drop=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># Filtered coursePrice in edxCourses_csv</span></span><br><span class="line">edxCourses_csv = edxCourses_csv[edxCourses_csv[<span class="string">&#x27;coursePrice&#x27;</span>] &gt;= <span class="number">500</span>]</span><br><span class="line">edxCourses_csv = edxCourses_csv.reset_index(drop=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># MITO CODE END (DO NOT EDIT)</span></span><br></pre></td></tr></table></figure><h2 id="图表和统计数据生成"><a href="#图表和统计数据生成" class="headerlink" title="图表和统计数据生成"></a>图表和统计数据生成</h2><p>还可以直接在此扩展中生成图形，而无需编写绘图逻辑。默认情况下，此扩展生成的所有图都是使用 Plotly 制作的。这意味着绘图是交互式的，可以即时修改。</p><p>注意，这里并没有像操作列一样，在下一个单元格中生成图形代码（也许开发人员会在以后的更新中推送此代码）</p><p><strong>可以使用 Mito 生成两种类型的图：</strong></p><h3 id="1-通过点击图表按钮"><a href="#1-通过点击图表按钮" class="headerlink" title="1. 通过点击图表按钮"></a><strong>1. 通过点击图表按钮</strong></h3><p>你将看到一个侧边栏菜单，用于选择图形类型和要选择的相应轴。</p><p><img src="https://img.16tui.com/obsidian/202207170231156.webp" alt="动图封面"></p><h3 id="2-通过点击列名"><a href="#2-通过点击列名" class="headerlink" title="2. 通过点击列名"></a><strong>2. 通过点击列名</strong></h3><p>当你点击电子表格中的列名称时，可以看见过滤器和排序选项。但如果你导航到<code>“Summary Stats”</code>，则会根据变量的类型显示线图或条形图以及变量的摘要。此摘要更改为文本和没有文本变量。</p><p><img src="https://img.16tui.com/obsidian/202207170232596.webp" alt="动图封面"></p><h2 id="保存和回放"><a href="#保存和回放" class="headerlink" title="保存和回放"></a>保存和回放</h2><p>对数据集所做的所有转换都可以保存并用于其他类似的数据集。这在 Excel 中采用宏或 VBA 的形式。也可以通过这些功能完成相同的操作。</p><p><img src="https://img.16tui.com/obsidian/202207170234698.jpg"></p><p>文件是以Python编写的，而不是用比较难懂的VBA。</p><p><img src="https://img.16tui.com/obsidian/202207170234018.webp" alt="动图封面"></p><h2 id="回溯执行的所有步骤"><a href="#回溯执行的所有步骤" class="headerlink" title="回溯执行的所有步骤"></a>回溯执行的所有步骤</h2><p>要想重复上面的步骤的话，也非常容易，Mito自带<code>“重复已保存分析步骤”</code>功能，一键就能用同样的方法分析其他数据。这个功能是最有趣的。你实际上可以追踪在 Mitosheet 中应用的所有转换。所有操作的列表都带有适当的标题。</p><p>此外，你可以查看该特定步骤！这意味着假设你更改了一些列，然后删除了它们。你可以退回到未删除的时间。</p><p><img src="https://img.16tui.com/obsidian/202207170235115.webp" alt="动图封面"></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>到这里，就一起学习了一个新工具<code>“Mito”</code>。用于在 Python 环境中实现类似电子表格的功能，并为所做的每一步生成等效操作的 Python 代码。</p><p>项目主页：<br><a href="https://link.zhihu.com/?target=https://trymito.io/launch">https://trymito.io/launch</a></p><hr><p>原网址: <a href="https://zhuanlan.zhihu.com/p/469555003">访问</a> | 创建时间: 2022-07-17 02:13:24</p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;p&gt;加载一个Jupyter插件后，无需写代码就能做数据分析，还帮你生成相应代码？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.16tui.com/obsidian/202207170219795.webp&quot;&gt;&lt;/p&gt;
&lt;p&gt;没错，只需要加载这个名为Mit</summary>
      
    
    
    
    <category term="12-实力不允许" scheme="https://berlin2022.github.io/categories/12-%E5%AE%9E%E5%8A%9B%E4%B8%8D%E5%85%81%E8%AE%B8/"/>
    
    
    <category term="excel" scheme="https://berlin2022.github.io/tags/excel/"/>
    
    <category term="Python" scheme="https://berlin2022.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>待汇总  Emeditor-常用的正则表达式</title>
    <link href="https://berlin2022.github.io/2022-07-16-937d0307.html"/>
    <id>https://berlin2022.github.io/2022-07-16-937d0307.html</id>
    <published>2022-07-16T15:00:02.000Z</published>
    <updated>2022-08-01T10:43:14.511Z</updated>
    
    <content type="html"><![CDATA[<h2 id="待汇总"><a href="#待汇总" class="headerlink" title="待汇总"></a>待汇总</h2><ul><li><code>(^|(?&lt;=样品)).*?(?=样品|$)</code> 匹配特定字符串外的所有字符，类似于反选功能。</li><li><code>^.*John.*$</code> 匹配包括“John”的整行。</li></ul><p>所有的空行</p><p>行首空白</p><p>行末空白</p><p>行首和行末所有空白</p><p>匹配中文字符：<code>[\u4e00-\u9fa5]</code></p><p>匹配双字节字符(包括汉字在内)</p><h3 id="Emeditor-常用的正则表达式"><a href="#Emeditor-常用的正则表达式" class="headerlink" title="Emeditor-常用的正则表达式"></a>Emeditor-常用的正则表达式</h3><p>Emeditor 目前来说是我个人感觉非常不错的一款记事本软件, 其中查找替换功能由于支持正则表达式而显得非常强大.  </p><p>^[ &#x2F;t]*&#x2F;n<br>这个正则表达式代表所有的空行，指含有零个或零个以上空格或制表符、以换行符结尾、不含其它字符的行。  </p><p>(^|(?&lt;&#x3D;中国)).*?(?&#x3D;中国|$)<br>用正则表达式匹配特定字符串外的所有字符。指除“中国”外的所有其它字符，类似于反选功能。  </p><p>^[  &#x2F;t]+<br>查找以上字符，并替换为空，可删除行首空白（包括全半角空格和制表符）。  </p><p>[  &#x2F;t]+$<br>查找以上字符，并替换为空，可删除行末空白（包括全半角空格和制表符）。  </p><p>^[  &#x2F;t]+|[  &#x2F;t]+$<br>查找以上正则表达式，并替换为空，可删除行首和行末所有空白（包括全半角空格和制表符）。  </p><p>匹配中文字符的正则表达式： [&#x2F;u4e00-&#x2F;u9fa5]<br>评注：匹配中文还真是个头疼的事，有了这个表达式就好办了  </p><p>匹配双字节字符(包括汉字在内)：[^&#x2F;x00-&#x2F;xff]<br>评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）  </p><p>匹配空白行的正则表达式：&#x2F;n&#x2F;s*&#x2F;r<br>评注：可以用来删除空白行  </p><p>匹配HTML标记的正则表达式：&lt; (&#x2F;S*?)[^&gt;]*&gt;.*?|&lt; .*? &#x2F;&gt;<br>评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力  </p><p>匹配首尾空白字符的正则表达式：^&#x2F;s*|&#x2F;s*$<br>评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式  </p><p>匹配Email地址的正则表达式：&#x2F;w+([-+.]&#x2F;w+)*@&#x2F;w+([-.]&#x2F;w+)*&#x2F;.&#x2F;w+([-.]&#x2F;w+)*<br>评注：表单验证时很实用  </p><p>匹配网址URL的正则表达式：[a-zA-z]+:&#x2F;&#x2F;[^&#x2F;s]*<br>评注：网上流传的版本功能很有限，上面这个基本可以满足需求  </p><p>匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$<br>评注：表单验证时很实用  </p><p>匹配国内电话号码：&#x2F;d{3}-&#x2F;d{8}|&#x2F;d{4}-&#x2F;d{7}<br>评注：匹配形式如 0511-4405222 或 021-87888822  </p><p>匹配腾讯QQ号：[1-9][0-9]{4,}<br>评注：腾讯QQ号从10000开始  </p><p>匹配中国邮政编码：[1-9]&#x2F;d{5}(?!&#x2F;d)<br>评注：中国邮政编码为6位数字  </p><p>匹配身份证：&#x2F;d{15}|&#x2F;d{18}<br>评注：中国的身份证为15位或18位  </p><p>匹配ip地址：&#x2F;d+&#x2F;.&#x2F;d+&#x2F;.&#x2F;d+&#x2F;.&#x2F;d+<br>评注：提取ip地址时有用  </p><p>匹配特定数字：  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">^[<span class="number">1</span><span class="number">-9</span>]/d*$    <span class="comment">//匹配正整数</span></span><br><span class="line">^-[<span class="number">1</span><span class="number">-9</span>]/d*$   <span class="comment">//匹配负整数</span></span><br><span class="line">^-?[<span class="number">1</span><span class="number">-9</span>]/d*$   <span class="comment">//匹配整数</span></span><br><span class="line">^[<span class="number">1</span><span class="number">-9</span>]/d*|<span class="number">0</span>$  <span class="comment">//匹配非负整数（正整数 + 0）</span></span><br><span class="line">^-[<span class="number">1</span><span class="number">-9</span>]/d*|<span class="number">0</span>$   <span class="comment">//匹配非正整数（负整数 + 0）</span></span><br><span class="line">^[<span class="number">1</span><span class="number">-9</span>]/d*/./d*|<span class="number">0</span>/./d*[<span class="number">1</span><span class="number">-9</span>]/d*$   <span class="comment">//匹配正浮点数</span></span><br><span class="line">^-([<span class="number">1</span><span class="number">-9</span>]/d*/./d*|<span class="number">0</span>/./d*[<span class="number">1</span><span class="number">-9</span>]/d*)$  <span class="comment">//匹配负浮点数</span></span><br><span class="line">^-?([<span class="number">1</span><span class="number">-9</span>]/d*/./d*|<span class="number">0</span>/./d*[<span class="number">1</span><span class="number">-9</span>]/d*|<span class="number">0</span>?/<span class="number">.0</span>+|<span class="number">0</span>)$  <span class="comment">//匹配浮点数</span></span><br><span class="line">^[<span class="number">1</span><span class="number">-9</span>]/d*/./d*|<span class="number">0</span>/./d*[<span class="number">1</span><span class="number">-9</span>]/d*|<span class="number">0</span>?/<span class="number">.0</span>+|<span class="number">0</span>$   <span class="comment">//匹配非负浮点数（正浮点数 + 0）</span></span><br><span class="line">^(-([<span class="number">1</span><span class="number">-9</span>]/d*/./d*|<span class="number">0</span>/./d*[<span class="number">1</span><span class="number">-9</span>]/d*))|<span class="number">0</span>?/<span class="number">.0</span>+|<span class="number">0</span>$  <span class="comment">//匹配非正浮点数（负浮点数 + 0）  </span></span><br></pre></td></tr></table></figure><p>评注：处理大量数据时有用，具体应用时注意修正  </p><p>匹配特定字符串：  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">^[A-Za-z]+$  <span class="comment">//匹配由26个英文字母组成的字符串</span></span><br><span class="line">^[A-Z]+$  <span class="comment">//匹配由26个英文字母的大写组成的字符串</span></span><br><span class="line">^[a-z]+$  <span class="comment">//匹配由26个英文字母的小写组成的字符串</span></span><br><span class="line">^[A-Za-z0<span class="number">-9</span>]+$  <span class="comment">//匹配由数字和26个英文字母组成的字符串</span></span><br><span class="line">^/w+$  <span class="comment">//匹配由数字、26个英文字母或者下划线组成的字符串</span></span><br></pre></td></tr></table></figure><p>评注：最基本也是最常用的一些表达式  </p><p><code>^.*John.*$</code><br>匹配包括“John”的整行。</p><hr><p>原网址: <a href="https://blog.csdn.net/weixin_30415801/article/details/98301882?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-4-98301882-blog-112866618.pc_relevant_antiscanv2&spm=1001.2101.3001.4242.3&utm_relevant_index=6">访问</a> | 创建时间: 2022-06-08 08:57:17</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;待汇总&quot;&gt;&lt;a href=&quot;#待汇总&quot; class=&quot;headerlink&quot; title=&quot;待汇总&quot;&gt;&lt;/a&gt;待汇总&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;(^|(?&amp;lt;=样品)).*?(?=样品|$)&lt;/code&gt; 匹配特定字符串外的所有字符，类似于反选功能</summary>
      
    
    
    
    <category term="06-需吃透的内容" scheme="https://berlin2022.github.io/categories/06-%E9%9C%80%E5%90%83%E9%80%8F%E7%9A%84%E5%86%85%E5%AE%B9/"/>
    
    
    <category term="emeditor" scheme="https://berlin2022.github.io/tags/emeditor/"/>
    
  </entry>
  
  <entry>
    <title>生僻单词</title>
    <link href="https://berlin2022.github.io/2022-07-16-9d7115a.html"/>
    <id>https://berlin2022.github.io/2022-07-16-9d7115a.html</id>
    <published>2022-07-15T16:38:00.000Z</published>
    <updated>2022-08-01T10:43:14.486Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p><input checked="" disabled="" type="checkbox"> filter ✅ 2022-07-21<br>美: [ˈfɪltər]  英: [ˈfɪltə(r)]<br>n.滤波器；过滤器；滤光器；滤声器<br>v.过滤；渗入；（用程序）筛选；缓行<br>网络滤镜；滤光片<br>词形：filters；filtering；filtered</p></li><li><p><input checked="" disabled="" type="checkbox"> stuff ✅ 2022-07-21<br>美 [stʌf] 英 [stʌf]<br>n.东西；原料；物品；基本特征<br>v.填满；装满；塞满；灌满<br>adj.毛织品做的<br>网络材料；填塞；事情</p></li><li><p><input checked="" disabled="" type="checkbox"> literal ✅ 2022-07-21<br>美 [ˈlɪt(ə)rəl] 英 [‘lɪt(ə)rəl]<br>adj.字面意义的；完全按原文的；缺乏想象力的<br>n.【印】错排<br>网络文字的；字面的；字面量<br>复数：literals</p></li><li><p><input checked="" disabled="" type="checkbox"> Eval ✅ 2022-07-21<br>英音[‘i:vl]: 美音[‘i:vl]:<br>基本解释：[医]evaluate，乙烯醇共聚物,求值,乙烯-乙烯醇共聚物</p></li><li><p><input checked="" disabled="" type="checkbox"> numerical ✅ 2022-07-21<br>英 [nju:ˈmerɪkl] 美 [nu:ˈmerɪkl]<br>adj：数字的，用数字表示的，数值的</p></li><li><p><input checked="" disabled="" type="checkbox"> attachment ✅ 2022-07-21<br>英[əˈtætʃmənt] 美[əˈtætʃmənt]<br>释义：n. 爱慕; 信念，忠诚; 附件; 连接; 短期在…工作<br>复数: attachments;</p></li><li><p><input checked="" disabled="" type="checkbox"> EFunction 插件名 ✅ 2022-07-21<br>function<br>英 [ˈfʌŋkʃn]   美 [ˈfʌŋkʃn]<br>n.作用;功能;职能;机能;社交聚会;典礼;宴会;函数;子例行程序<br>v.起作用;正常工作;运转<br>第三人称单数： functions复数： functions现在分词： functioning过去式： functioned过去分词： functioned</p></li><li><p><input checked="" disabled="" type="checkbox"> ETStrExtractSub 函数名 ✅ 2022-07-21<br>extract<br>英 [ˈekstrækt , ɪkˈstrækt]   美 [ˈekstrækt , ɪkˈstrækt]<br>vt.摘录;提取;提炼;索取，设法得到(对方不愿提供的信息、钱财等);选取;选录;（用力）取出，拔出;获得，得到<br>n.提取物;精;摘录;选录;选曲;节录;浓缩物;汁<br>第三人称单数： extracts复数： extracts现在分词： extracting过去式： extracted过去分词： extracted</p></li><li><p><input checked="" disabled="" type="checkbox"> range ✅ 2022-07-21<br>英 [reɪndʒ]   美 [reɪndʒ]<br>n.范围;一系列;(变动或浮动的)界限;区间;类;种;射程;（车辆）加一次油可行的路程;山脉;靶场;牧场<br>v.(在一定的范围内)变化;变动;包括(从…到…)之间的各类事物;(按一定位置或顺序)排列;徘徊<br>第三人称单数： ranges复数： ranges现在分词： ranging过去式： ranged过去分词： ranged</p></li><li><p><input checked="" disabled="" type="checkbox"> repr ✅ 2022-07-21<br>英[‘rɪpr] 美[‘rɪpr]<br>释义: 【医&#x3D;represent】代表，表示<br>大小写变形:REPR</p></li><li><p><input checked="" disabled="" type="checkbox"> split ✅ 2022-07-21<br>英 [splɪt]   美 [splɪt]<br>v.(使)分裂(成不同的派别);使分开(成为几个部分);分摊;分享;（使）撕裂;划破;（和某人）断绝关系，分手;（迅速）离开，走<br>n.分裂;分离;分歧;划分;分别;份额;裂缝;裂口;香蕉船，水果船;劈叉<br>adj.劈开的；分离的<br>第三人称单数： splits复数： splits现在分词： splitting过去式： split过去分词： split</p></li><li><p><input checked="" disabled="" type="checkbox"> sequence ✅ 2022-07-21<br>英 [ˈsiːkwəns]   美 [ˈsiːkwəns]<br>n.序列;顺序;次序;一系列;一连串;(电影中表现同一主题或场面的)一组镜头<br>vt.按顺序排列;测定(整套基因或分子成分的)序列<br>第三人称单数： sequences复数： sequences现在分词： sequencing过去式： sequenced过去分词： sequenced<br>派生词： sequencing n.</p></li><li><p><input checked="" disabled="" type="checkbox"> strip ✅ 2022-07-21<br>英 [strɪp]   美 [strɪp]<br>n.带;(纸、金属、织物等)条;(陆地、海域等)狭长地带;带状水域;队服;脱衣舞;商业街<br>v.脱光衣服;脱掉大部分衣服;扒光…的衣服;进行脱衣表演;表演脱衣舞;剥去(一层);(尤指)剥光;从（某处）拿走所有东西;拆卸;剥夺<br>第三人称单数： strips复数： strips现在分词： stripping过去式： stripped过去分词： stripped</p></li><li><p><input checked="" disabled="" type="checkbox"> prompt ✅ 2022-07-21<br>英 [prɒmpt]   美 [prɑːmpt]<br>v.促使;导致;激起;鼓励，提示，提醒(某人说话);给(演员)提词<br>adj.立即;及时的;迅速的;敏捷的;准时的<br>n.提示符;(给演员的)提词，提示<br>adv.准时地<br>第三人称单数： prompts现在分词： prompting过去式： prompted过去分词： prompted<br>派生词： promptness n.</p></li><li><p><input checked="" disabled="" type="checkbox"> thread<br>英 [θred]   美 [θred]<br>n.(棉、毛、丝等的)线;线索;脉络;思绪;思路;贯穿的主线;线状物;细细的一条;系列相关信息，链式消息;螺纹;衣服<br>v.穿(针);纫(针);穿过;通过;穿行;穿成串;串在一起;给…装入;用…线缝<br>第三人称单数： threads 复数： threads 现在分词： threading 过去式： threaded</p></li><li><p><input checked="" disabled="" type="checkbox"> syntax ✅ 2022-07-22<br>英[ˈsɪntæks] 美[ˈsɪntæks]<br>n.句法; 句法规则; 语构;</p></li><li><p><input disabled="" type="checkbox"> exists<br>英 [ɪɡˈzɪsts]   美 [ɪɡˈzɪsts]<br>v.存在;实际上有;(尤指在困境或贫困中)生活，生存<br>exist的第三人称单数</p></li><li><p><input disabled="" type="checkbox"> contains<br>英 [kənˈteɪnz]   美 [kənˈteɪnz]<br>v.包含;含有;容纳;控制，克制，抑制(感情);防止…蔓延(或恶化)<br>contain的第三人称单数</p></li><li><p><input disabled="" type="checkbox"> create<br>英[kriˈeɪt]  美[kriˈeɪt]<br>vt.创造; 创作; 创建; 造成，引起，产生(感觉或印象); 授予; 册封;<br>第三人称单数：creates 现在分词：creating 过去式：created 过去分词：created</p></li><li><p><input disabled="" type="checkbox"> integer<br>英[ˈɪntɪdʒə(r)]  美[ˈɪntɪdʒər]<br>n.整数;<br>复数：integers</p></li><li><p><input disabled="" type="checkbox"> varchar<br>英 [ˈvɑːtʃɑː]  美 [ˈvɑːtʃɑː]<br>n. 变长字符型；可变长字符串</p></li><li><p><input disabled="" type="checkbox"> WYSIWYG<br>[ˈwɪziwɪɡ]<br>abbr. 所见即所得（What You See Is What You Get）</p></li><li><p><input disabled="" type="checkbox"> para<br>英 [ˈpærə]  美 [ˈpærə]<br>n. 帕拉（南斯拉夫币）；帕拉胶<br>abbr. 伞兵(&#x3D;paratrooper)；段(&#x3D;paragraph)<br>网络   帕拉；帕拉州；对位<br>复数：paras  </p></li><li><p><input disabled="" type="checkbox"> cursor<br>美: [ˈkɜrsər]  英: [ˈkɜː(r)sə(r)]<br>n.游标  网络光标；指针；指标<br>词形：cursors  cursoring  cursored</p></li><li><p><input disabled="" type="checkbox"> execute<br>美: [ˈeksəˌkjut]  英: [ˈeksɪˌkjuːt]<br>v.执行；实施；实行；处死<br>网络执行力；处决；可执行<br>词形：executes  executing  executed</p></li><li><p><input disabled="" type="checkbox"> capitalize<br>美: [ˈkæpɪt(ə)lˌaɪz]  英: [ˈkæpɪtəlaɪz]<br>v.用大写字母书写（或印刷）；把…首字母大写；变卖资产；变现<br>网络资本化；首字大写；利用</p></li><li><p><input disabled="" type="checkbox"> insert<br>美: [ɪnˈsɜrt]  英: [ɪnˈsɜː(r)t]<br>v.插入；嵌入；（在文章中）添加<br>n.插入物；（书报的）插页；添加物<br>网络插入块；插入记录；插入键<br>词形：inserts  inserting  inserted</p></li><li><p><input disabled="" type="checkbox"> reference<br>英 [ˈrefrəns]   美 [ˈrefrəns]<br>n.参考;说到(或写到)的事;提到;谈及;涉及;查询;查阅;(帮助或意见的)征求，征询;标记，标识，编号;推荐信;推荐人;参考书目<br>vt.查阅;参考;给(书等)附参考资料</p></li><li><p><input disabled="" type="checkbox"> cell<br>英 [sel]   美 [sel]<br>n.单间牢房;牢房;(修道士或修女住的)小房间;细胞;（大结构中的）小隔室（如蜂房巢室）;电池;（尤指秘密的）政治小组，基层组织;单元格<br>复数： cells</p></li><li><p><input checked="" disabled="" type="checkbox"> format ✅ 2022-07-20<br>英 [ˈfɔːmæt]   美 [ˈfɔːrmæt]<br>n.总体安排;计划;设计;(出版物的)版式，开本;格式<br>vt.格式化;安排…的版式<br>第三人称单数： formats复数： formats现在分词： formatting过去式： formatted过去分词： formatted</p></li><li><p><input checked="" disabled="" type="checkbox"> prefix ✅ 2022-07-20<br>英 [ˈpriːfɪks]   美 [ˈpriːfɪks]<br>n.前缀(缀于单词前以改变其意义的字母或字母组合);前置代号(置于前面的单词或字母、数字);(人名前的)称谓<br>vt.在…前面加(字母或数字)<br>复数： prefixes</p></li><li><p><input disabled="" type="checkbox"> directory<br>英 [dəˈrektəri]   美 [dəˈrektəri]<br>n.(计算机文件或程序的)目录;名录;电话号码簿;公司名录<br>adj.管理的<br>复数： directories</p></li><li><p><input disabled="" type="checkbox"> origin<br>英 [ˈɒrɪdʒɪn]   美 [ˈɔːrɪdʒɪn]<br>n.起源;源头;起因;身世;出身<br>复数： origins</p></li><li><p><input disabled="" type="checkbox"> recalc<br>[riːˈkælk]<br>abbr. 重新计算（recalculate）<br>recalculate<br>英 [riːˈkælkjʊleɪt]美 [ri:’kælkjuleit]<br>vt. 重新计算；重新估计<br>第三人称单数 recalculates<br>现在分词 recalculating 过去式 recalculated 过去分词 recalculated </p></li><li><p><input disabled="" type="checkbox"> value<br>英 [ˈvæljuː]   美 [ˈvæljuː]<br>n.(商品)价值;(与价格相比的)值，划算程度;用途;积极作用;是非标准;值<br>vt.重视;珍视;给…估价;给…定价<br>第三人称单数： values复数： values现在分词： valuing过去式： valued过去分词： valued</p></li><li><p><input disabled="" type="checkbox"> exact<br>英 [ɪɡˈzækt]   美 [ɪɡˈzækt]<br>adj.准确的;精确的;严谨的;严格的;一丝不苟的;精密的;严密的<br>vt.要求;索取;迫使;强迫;强求<br>第三人称单数： exacts现在分词： exacting过去式： exacted过去分词： exacted比较级： exacter more exact最高级： exactest most exact<br>派生词： exactness n. exaction n.</p></li><li><p><input disabled="" type="checkbox"> concatenate<br>v.连接;使连续（衔接）起来;连锁;串级<br>adj.连在一起的;连锁的<br>第三人称单数： concatenates现在分词： concatenating过去式： concatenated过去分词： concatenated</p></li><li><p><input disabled="" type="checkbox"> release<br>英 [rɪˈliːs]   美 [rɪˈliːs]<br>vt.释放;放出;放走;放开;松开;使自由移动(或飞翔、降落等);发泄;宣泄;免除，解除;使不紧张;公开;开放<br>n.释放;获释;公开;发行;发布;新发行的东西;(尤指)新激光唱片，新电影;排放;解脱<br>第三人称单数： releases现在分词： releasing过去式： released过去分词： released</p></li><li><p><input disabled="" type="checkbox"> error<br>英 [ˈerə(r)]   美 [ˈerər]<br>n.错误;差错;谬误<br>复数： errors</p></li><li><p><input disabled="" type="checkbox"> fact<br>英 [fækt]   美 [fækt]<br>n.事实;现实;实际情况;(可证实的)真相;真实的事物;真实情况<br>复数： facts</p></li><li><p><input disabled="" type="checkbox"> definition<br>美: [ˌdefəˈnɪʃ(ə)n]  英: [.defə’nɪʃ(ə)n]<br>n.定义；限定；(收音机的)清晰度；明确<br>网络定义条款；术语；名词定义<br>词形：definitions</p></li><li><p><input disabled="" type="checkbox"> comment<br>美: [ˈkɑˌment] 英: [ˈkɒment]<br>n.评论；评语；注解<br>v.评论<br>词形：comments  commenting  commented</p></li><li><p><input disabled="" type="checkbox"> cursor<br>英 [ˈkɜːsə(r)]   美 [ˈkɜːrsər]<br>n.(计算机荧光屏上的)光标，游标<br>复数： cursors</p></li><li><p><input disabled="" type="checkbox"> crosshair<br>英 [‘krɔ:shɛə]美 [ˈkrɔːsher]<br>n. 十字；十字丝；十字瞄准线</p></li><li><p><input disabled="" type="checkbox"> logical<br>英 [ˈlɒdʒɪkl]   美 [ˈlɑːdʒɪkl]<br>adj.必然的;合乎情理的;合乎常理的;符合逻辑的;按照逻辑的<br>派生词： logically adv.</p></li><li><p><input disabled="" type="checkbox"> columns<br>英 [ˈkɒləmz]   美 [ˈkɑləmz]<br>n.柱;(通常为)圆形石柱;纪念柱;圆柱状物;柱形物;(书、报纸印刷页上的)栏<br>column的复数</p></li><li><p><input disabled="" type="checkbox"> encoding<br>英 [ɪnˈkəʊdɪŋ]   美 [ɪnˈkoʊdɪŋ]<br>v.把…译成电码(或密码);把…编码;把…译成外语<br>encode的现在分词</p></li><li><p><input disabled="" type="checkbox"> delimiter<br>美: [dɪ’lɪmɪtə]  英: [dɪ’lɪmɪtə]<br>n.定界符<br>网络分隔符；分隔符号；分界符<br>词形：delimiters</p></li><li><p><input disabled="" type="checkbox"> pandas<br>英 [ˈpændəz]   美 [ˈpændəz]<br>n.大熊猫;大猫熊;小熊猫，小猫熊(产于亚洲，毛棕红色，尾巴粗长)<br>panda的复数</p></li><li><p><input disabled="" type="checkbox"> reset<br>英 [ˌriːˈset]   美 [ˌriːˈset]<br>vt.调整;重新设置;重新安置;将…恢复原位<br>第三人称单数： resets 现在分词： resetting 过去式： reset 过去分词： reset</p></li><li><p><input disabled="" type="checkbox"> in place<br>英 [pleɪs]   美 [pleɪs]<br>na.得其所；适当的<br>网络就地；原地；在适当位置</p></li><li><p><input disabled="" type="checkbox"> NumPy<br> [nʌmpi]<br>abbr.Python的一种开源的数值计算扩展（Numerical Python）</p></li><li><p><input disabled="" type="checkbox"> python<br>英 [ˈpaɪθən]   美 [ˈpaɪθɑːn]<br>n.蟒蛇;蟒;蚺蛇<br>复数： pythons</p></li><li><p><input disabled="" type="checkbox"> Numerical<br>英 [njuːˈmerɪkl]   美 [nuːˈmerɪkl]<br>数值;数值法;数值的;数字的</p></li><li><p><input disabled="" type="checkbox"> range<br>英 [reɪndʒ]   美 [reɪndʒ]<br>n.范围;一系列;(变动或浮动的)界限;区间;类;种;射程;（车辆）加一次油可行的路程;山脉;靶场;牧场<br>v.(在一定的范围内)变化;变动;包括(从…到…)之间的各类事物;(按一定位置或顺序)排列;徘徊<br>第三人称单数： ranges复数： ranges现在分词： ranging过去式： ranged过去分词： ranged</p></li><li><p><input disabled="" type="checkbox"> orient<br>英 [ˈɔːrient]   美 [ˈɔːrient]<br>vt.朝向;面对;确定方向;使适应;确定方位;认识方向;熟悉;适应<br>n.东方;远东;亚洲;东洋<br>v.适应;使朝向;使面对;确定方向<br>adj.东方的;东洋的;(太阳等)上升的;新生的<br>第三人称单数： orients现在分词： orienting过去式： oriented过去分词： oriented</p></li><li><p><input disabled="" type="checkbox"> score<br>英 [skɔː(r)]   美 [skɔːr]<br>n.分数;(游戏或比赛中的)得分;比分;(考试中的)成绩;总谱;（电影或戏剧的）配乐;20个;大量;刻痕;实情<br>v.(在游戏、比赛或考试中)得分;(在游戏或比赛中)记分;评分;分值是;获得胜利;编总谱;（在物体表面）划下痕迹，刻出记号<br>第三人称单数： scores复数： scores现在分词： scoring过去式： scored过去分词： scoredef</p></li><li><p><input disabled="" type="checkbox"> object<br>英 [ˈɒbdʒɪkt , əbˈdʒekt]   美 [ˈɑːbdʒekt , əbˈdʒekt]<br>n.(极欲得到、研究、注意等的)对象;物体;目标;目的;物品;东西;宗旨;宾语<br>v.反对;不同意;不赞成;提出…作为反对的理由;抗辩说<br>第三人称单数： objects复数： objects现在分词： objecting过去式： objected过去分词： objected</p></li><li><p><input disabled="" type="checkbox"> type<br>英 [taɪp]   美 [taɪp]<br>n.类型;种类;具有某种特征的人;典型;属于…类型的;具有…特征的;（印刷或打印的）文字，字体，字型<br>v.(用计算机或打字机)打字;测定…的类型;分型;定型<br>第三人称单数： types复数： types现在分词： typing过去式： typed过去分词： typed</p></li><li><p><input disabled="" type="checkbox"> series<br>英 [ˈsɪəriːz]   美 [ˈsɪriːz]<br>n.系列;连续;接连;(广播或电视上题材或角色相同的)系列节目;(两队之间的)系列比赛;串联<br>复数： series</p></li><li><p><input disabled="" type="checkbox"> reshape<br>英 [ˌriːˈʃeɪp]   美 [ˌriːˈʃeɪp]<br>vt.改变…的形状(或结构);重塑;改组<br>第三人称单数： reshapes现在分词： reshaping过去式： reshaped过去分词： reshaped</p></li><li><p><input disabled="" type="checkbox"> array<br>英 [əˈreɪ]   美 [əˈreɪ]<br>n.大堆;大群;大量;数组;阵列<br>vt.布置;排列;配置(兵力)<br>第三人称单数： arrays复数： arrays现在分词： arraying过去式： arrayed过去分词： arrayed</p></li><li><p><input disabled="" type="checkbox"> ndarray<br>[ˈnireɪː]<br>网络多维数组对象</p></li><li><p><input disabled="" type="checkbox"> xlwings<br>wings<br>英 [wɪŋz]   美 [wɪŋz]<br>n.(飞行器的)翅膀;机翼;(鸟、昆虫或蝙蝠)翼;侧翼部分;侧厅;耳房;厢房<br>v.飞;被迅速送往<br>wing的第三人称单数和复数</p></li><li><p><input disabled="" type="checkbox"> matplotlib<br>[mʌtəprɔtlib]<br>Matplotlib 是一个 Python 的 2D绘图库，它以各种硬拷贝格式和跨平台的交互式环境生成出版质量级别的图形。</p></li><li><p><input disabled="" type="checkbox"> pyplot<br>plot<br>英 [plɒt]   美 [plɑːt]<br>n.情节;阴谋;故事情节;密谋;布局;(专用的)小块土地<br>v.密谋;暗中策划;(在地图上)标出;绘制(图表);绘制（曲线）;设计情节<br>第三人称单数： plots复数： plots现在分词： plotting过去式： plotted过去分词： plotted</p></li><li><p><input disabled="" type="checkbox"> scatter<br>英 [ˈskætə(r)]   美 [ˈskætər]<br>v.分散;撒;驱散;散开;撒播;四散<br>n.散落;三三两两;零零星星<br>第三人称单数： scatters现在分词： scattering过去式： scattered过去分词： scattered</p></li><li><p><input disabled="" type="checkbox"> marker<br>英 [ˈmɑːkə(r)]   美 [ˈmɑːrkər]<br>n.(表示方位的)标记，记号;标志;标识;表示;记号笔;毡头笔;阅卷人;紧逼防守的队员<br>复数： markers</p></li><li><p><input disabled="" type="checkbox"> splitext<br> [splɪtekst]<br> 网络：拆分文本</p></li><li><p><input disabled="" type="checkbox"> separate<br>英 [ˈseprət , ˈsepəreɪt]   美 [ˈseprət , ˈsepəreɪt]<br>v.分离;(使)分开;分割;划分;(使)分散;隔开;阻隔;分居;区分<br>adj.单独的;分开的;独立的;不同的;不相关的<br>n.(杂志论文的)抽印本;单行本;可以不配套单独穿的妇女服装<br>第三人称单数： separates现在分词： separating过去式： separated过去分词： separated<br>派生词： separateness n.</p></li><li><p><input disabled="" type="checkbox"> listdir<br>[lɪstdi:aɪ’ɑr]<br>网络修改成功；根目录；【计】列目录命令</p></li><li><p><input disabled="" type="checkbox"> src<br>source<br>英 [sɔːs]   美 [sɔːrs]<br>n.来源;出处;信息来源;原始资料;起源;根源;原因;源头<br>vt.(从…)获得<br>第三人称单数： sources复数： sources现在分词： sourcing过去式： sourced过去分词： sourced</p></li><li><p><input disabled="" type="checkbox"> dst<br>destination<br>英 [ˌdestɪˈneɪʃn]   美 [ˌdestɪˈneɪʃn]<br>n.目的地;终点<br>adj.作为目的地的(旅馆、商店、饭店等)<br>复数： destinations</p></li><li><p><input disabled="" type="checkbox"> getcwd 网络取得当前工作目录；取得当前工作路径；返回当前工作路径<br>CWD 网络工作目录；慢性消耗病(chronic wasting disease)；改变工作目录(Change Working Directory)</p></li><li><p><input disabled="" type="checkbox"> math<br>英 [mæθ]   美 [mæθ]<br>n.数学;同 mathematics</p></li><li><p><input disabled="" type="checkbox"> mathematics<br>英 [ˌmæθəˈmætɪks]   美 [ˌmæθəˈmætɪks]<br>n.数学;运算;计算<br>派生词： mathematical adj. mathematically adv.</p></li><li><p><input disabled="" type="checkbox"> sqrt<br>[skjutiː]     [ˈesˈkjuˈɑːrˈti]<br>开根;求平方根函数;根号;函数;开平方函数</p></li><li><p><input disabled="" type="checkbox"> pow<br>英 [paʊ]   美 [paʊ]<br>int.(爆炸声、枪声或打人的声音)嘭，乒，砰<br>n.〈英〉脑袋<br>网络战俘(prisoner of war)；次方；计算次方值</p></li><li><p><input disabled="" type="checkbox"> factorial<br>英 [fækˈtɔːriəl]   美 [fækˈtɔːriəl]<br>n.阶乘<br>adj.【数】因数的；阶乘的；代理商的；工厂的</p></li><li><p><input disabled="" type="checkbox"> multiply<br>美: [ˈmʌltɪˌplaɪ]  英: [ˈmʌltɪplaɪ]<br>v.繁殖；增多；增殖；(成倍)增加<br>adv.复合地；多样地；多倍地；多重地<br>adj.多股的；多层的<br>网络乘；正片叠底；使相乘<br>词形：multiplying；multiplied；multiplies</p></li><li><p><input disabled="" type="checkbox"> turtle<br>英 [ˈtɜːtl]   美 [ˈtɜːrtl]<br>n.乌龟;海龟;鳖;(任何种类的)龟;陆龟;水龟<br>vi.捕海龟;捕鳖;（船等）翻没;倾覆<br>第三人称单数： turtles复数： turtles现在分词： turtling过去式： turtled过去分词： turtled<br>网络：Turtle库是Python语言中一个很流行的绘制图像的函数库</p></li><li><p><input disabled="" type="checkbox"> tuple<br>英 [tjʊpəl; ˈtʌpəl] 美 [ˈtjʊpəl; ˈtʌpəl]<br>n. 【计】 元组，重数</p></li><li><p><input disabled="" type="checkbox"> forward<br>美: [ˈfɔrwərd]  英: [ˈfɔː(r)wə(r)d]<br>adv.向前；前进；提前；进展<br>v.促进；发送；转交；有助于…的发展<br>adj.向前的；前进的；（尤指船、飞机或其他交通工具）前部的；未来的<br>n.（运动队的）前锋<br>网络转发；转寄；远期<br>词形：forwards；forwarding；forwarded</p></li><li><p><input disabled="" type="checkbox"> backward<br>美: [ˈbækwərd]  英: [ˈbækwə(r)d]<br>adv.向后；倒；回向原处<br>adj.向后的；朝后的；倒退的；反向的<br>网络后退；落后的；向后地</p></li><li><p><input disabled="" type="checkbox"> def<br>美: [def]  英: [def]<br>adj.极好的；很棒的<br>网络定义(definition)；防御(defense)；模块定义文件</p></li><li><p><input disabled="" type="checkbox"> replace<br>英 [rɪˈpleɪs]   美 [rɪˈpleɪs]<br>vt.代替;取代;更换;(用…)替换;(以…)接替;更新;把…放回原处<br>第三人称单数： replaces现在分词： replacing过去式： replaced过去分词： replaced</p></li><li><p><input disabled="" type="checkbox"> exchange<br>英 [ɪksˈtʃeɪndʒ]   美 [ɪksˈtʃeɪndʒ]<br>n.交换;互换;交流;掉换;交谈;对话;争论;兑换;汇兑;交流，互访;交易所<br>vt.交流;掉换;兑换;交易;更换;交换(尤指房屋或土地买卖的契约)<br>第三人称单数： exchanges复数： exchanges<br>现在分词： exchanging过去式： exchanged过去分词： exchanged</p></li><li><p><input disabled="" type="checkbox"> result<br>英 [rɪˈzʌlt]   美 [rɪˈzʌlt]<br>n.后果;结果(包括比分、得票、获胜者或当选者名单等);(尤指足球比赛的)胜利，胜局;得分;成功实现的事<br>vi.(因…)发生;(随…)产生<br>第三人称单数： results复数： results现在分词： resulting过去式： resulted过去分词： resulted</p></li><li><p><input disabled="" type="checkbox"> looper<br>英 [ˈluːpə]   美 [ˈlupər]<br>n.高飞球；腾空球;打环的人；打环装置;套口机，弯纱轮，缝袜头机<br>网络环形使者；弯针；回路杀手</p></li><li><p><input disabled="" type="checkbox"> operator<br>英 [ˈɒpəreɪtə(r)]   美 [ˈɑːpəreɪtər]<br>n.操作人员;接线员;技工;电话员;(某企业的)经营者，专业公司;投机取巧者;算子<br>网络操作员；运算符；运算子</p></li><li><p><input disabled="" type="checkbox"> assign<br>美: [əˈsaɪn] 英: [ə’saɪn]<br>v.指定；指派；转让；分派<br>n.【法】受让人<br>网络分配；赋值；委派</p></li><li><p><input disabled="" type="checkbox"> AssignValue<br>网络值；设定变数之值；赋值</p></li><li><p><input disabled="" type="checkbox"> SyntaxError<br>网络语法错误；句法错误；缩进错误<br>syntax<br>美: [ˈsɪnˌtæks] 英: [ˈsɪntæks]<br>n.句法；句法规则；语构<br>网络语法；句法学；语法学</p></li><li><p><input disabled="" type="checkbox"> callable<br>美: [‘kɔləbəl]  英: [‘kɔ:ləbl]<br>adj.可随时支取的<br>网络可赎回；可赎回的；可调用的</p></li><li><p><input disabled="" type="checkbox"> recent<br>美: [ˈrisənt] 英: [ˈriːs(ə)nt]<br>adj.近来的；新近的<br>网络最近的；最近打开的文档；近代的</p></li><li><p><input disabled="" type="checkbox"> trace<br>美: [treɪs] 英: [treɪs]<br>n.微量；痕迹；轨迹；追踪<br>v.追踪；追溯；查出；描摹<br>网络跟踪；踪迹；设置包跟踪</p></li><li><p><input disabled="" type="checkbox"> traceback<br>na.追溯<br>网络回溯；追踪；路径回溯</p></li><li><p><input disabled="" type="checkbox"> module<br>美: [ˈmɑdʒul] 英: [ˈmɒdjuːl]<br>n.模块；组件；单元（尤指英国大学课程的一部分）；功能块<br>网络模组；模数；模件<br>词形：modules</p></li><li><p><input disabled="" type="checkbox"> decimal<br>美: [ˈdesɪm(ə)l] 英: [‘desɪm(ə)l]<br>adj.十进位的；小数的<br>n.小数<br>网络十进制；十进制的；十进制数<br>词形：decimals</p></li><li><p><input disabled="" type="checkbox"> append<br>美: [əˈpend]  英: [ə’pend]<br>v.增补<br>网络附加；追加；添加<br>词形：appends；appending；appended</p></li><li><p><input disabled="" type="checkbox"> autogui<br>[ˈɔtoʊˈdʒiːˈjuˈaɪ]<br>auto<br>美: [ˈɔtoʊ] 英: [ˈɔːtəʊ]<br>n.汽车<br>v.坐汽车<br>网络自动(Automatic)；自动模式；全自动<br>词形：autos</p></li><li><p><input disabled="" type="checkbox"> pyperclip<br>[ˈpaɪpə(r)klɪp]<br>网络：Python的pyperclip模块</p></li><li><p><input disabled="" type="checkbox"> paper clip<br>美: [‘peɪpər.klɪp]  英: [‘peɪpə(r).klɪp]<br>n.回形针；纸夹；曲别针<br>网络回文针；回纹针；回形线路<br>词形：paper clips</p></li><li><p><input disabled="" type="checkbox"> per<br>英 [pə(r)]   美 [pər]<br>prep.每;每一</p></li><li><p><input disabled="" type="checkbox"> clip<br>美: [klɪp] 英: [klɪp]<br>v.剪辑；修剪；削减；固定<br>n.夹；夹子；速度；钳<br>网络裁剪；回形针；削波<br>词形：clips；clipped；clipping</p></li><li><p><input disabled="" type="checkbox"> interval<br>美: [ˈɪntərvəl]  英: [ˈɪntə(r)v(ə)l]<br>n.间歇；音程；休息时间；（其他事情）穿插出现的间隙<br>网络间隔；区间；时间间隔<br>词形：intervals</p></li><li><p><input disabled="" type="checkbox"> duration<br>美: [dʊˈreɪʃ(ə)n]  英: [djʊˈreɪʃ(ə)n]<br>n.持续时间；期间<br>网络存续期间；持续期间；久期<br>词形：durations</p></li><li><p><input disabled="" type="checkbox"> confidence<br>美: [ˈkɑnfɪdəns]  英: [ˈkɒnfɪd(ə)ns]<br>n.信心；信任；自信心；信赖<br>adj.骗得信任的<br>网络行骗天下；置信度；秘密<br>词形：confidences</p></li><li><p><input disabled="" type="checkbox"> locate<br>美: [ˈloʊˌkeɪt]  英: [ləʊˈkeɪt]<br>v.找出…的准确位置；确定…的准确地点；把…安置在（或建造于）<br>网络定位；位于；使坐落于<br>词形：<br>locates；locating；located</p></li><li><p><input disabled="" type="checkbox"> except<br>美: [ɪkˈsept]  英: [ɪk’sept]<br>conj.除了；只是<br>v.不包括；不计；把…除外<br>prep.（用于所言不包括的人或事物前）除…之外<br>网络除…以外；除了……之外；除非<br>词形：excepts；excepting；excepted</p></li><li><p><input disabled="" type="checkbox"> nrows<br>英 [ˈenˈrəʊz , ˈenˈraʊz]   美 [ˈenˈroʊz , ˈenˈraʊz]<br>网络行数；表中的行数</p></li><li><p><input disabled="" type="checkbox"> row<br>美: [raʊ] 英: [raʊ]<br>n.争吵；行列；划；(一)行<br>v.〈口〉争吵；划运；摆渡；责备<br>网络行数；导出数据行；导入数据行<br>词形：rows；rowing；rowed</p></li><li><p><input disabled="" type="checkbox"> vertical<br>美: [ˈvɜrtɪk(ə)l]  英: [ˈvɜː(r)tɪk(ə)l]<br>n.垂直线；垂直位置<br>adj.竖的；垂直的；直立的；纵向的<br>网络立式；垂线；垂直方向<br>词形：verticals</p></li><li><p><input disabled="" type="checkbox"> block<br>美: [blɑk]  英: [blɒk]<br>n.块；块体；区；障碍<br>v.阻塞；阻碍；堵塞；挡<br>网络区块；街区；数据块<br>词形：blocks；blocking；blocked</p></li><li><p><input disabled="" type="checkbox"> argv<br> [ˈɑrɡˈviː]<br>网络命令行参数；参数列表；命令行参数排列(Argument Values)<br>argument<br>美: [ˈɑrɡjəmənt] 英: [ˈɑː(r)ɡjʊmənt]<br>n.争论；论点；观点；争吵<br>网络辩论；参数；论证<br>词形：arguments</p></li><li><p><input disabled="" type="checkbox"> par<br>英 [pɑː(r)]   美 [pɑːr]<br>n.标准杆数;(股票的)面值，票面价值<br>vt.标准杆数得分<br>adj.平价的；常态的<br>第三人称单数： pars复数： pars<br>现在分词： parring过去式： parred过去分词： parred</p></li><li><p><input disabled="" type="checkbox"> plat<br>美: [plæt]  英: [plæt]<br>n.(作花坛等的)一块地；地图；〈外〉(菜)一盘；菜单上的菜<br>v.〈美〉制…的地图<br>网络小块地；主菜；地区图<br>词形：plats；platted；platting</p></li><li><p><input disabled="" type="checkbox"> gnu<br>美: [nu]  英: [nuː]<br>n.【动】牛羚<br>网络GNU’s not UNIX; 角马; 自由软件</p></li><li><p><input disabled="" type="checkbox"> Unix<br>美: [ˈjunɪks]  英: [ˈjuːnɪks]<br>n.Unix 操作系统（可供多人同时使用）<br>网络系统常用命令；环境高级编程；一种操作系统</p></li><li><p><input disabled="" type="checkbox"> dynload<br>[diːloʊd]<br>网络：加载<br>load<br>美: [loʊd] 英: [ləʊd]<br>n.负荷；负载；工作量；大量<br>v.承载；装载；装入；载入<br>网络加载；载荷<br>词形：loads；loading；loaded</p></li><li><p><input disabled="" type="checkbox"> verbose<br>英 [vɜːˈbəʊs]   美 [vɜːrˈboʊs]<br>adj.冗长的;啰唆的;唠叨的<br>派生词： verbosity n.</p></li><li><p><input disabled="" type="checkbox"> dist<br>英 [‘dɪst]   美 [‘dɪst]<br>n.蒸馏<br>abbr. 距离（distance）；分配（distribution）</p></li><li><p><input disabled="" type="checkbox"> distance<br>美: [ˈdɪstəns]  英: [‘dɪstəns]<br>n.距离；远处；间距；远方<br>v.拉开距离；与…疏远<br>网络间隔；路程；远离<br>词形：distances；distancing；distanced</p></li><li><p><input disabled="" type="checkbox"> distribution<br>美: [ˌdɪstrɪˈbjuʃ(ə)n]  英: [ˌdɪstrɪˈbjuːʃ(ə)n]<br>n.分布；分配；分发；分销<br>网络配送；发行；配销<br>词形：distributions</p></li><li><p><input disabled="" type="checkbox"> package<br>美: [ˈpækɪdʒ]  英: [‘pækɪdʒ]<br>n.〈美〉包；包装；外壳；组件<br>v.〈美〉把…打包[装箱]；给(商品)加漂亮包装(以吸引顾客)<br>adj.一揽子的<br>网络封装；应用程序包；套件<br>词形：packages；packaging；packaged</p></li><li><p><input disabled="" type="checkbox"> fibonacci<br>英 [ˌfɪbəˈnɑːtʃi]   美 [ˌfɪbəˈnɑːtʃi]<br>网络斐波那契；斐波纳契；斐波那契数列</p></li><li><p><input disabled="" type="checkbox"> const<br>美: [‘kɑnst]  英: [‘kɒnst]<br>n.常数；恒量<br>adj.恒定的；不变的<br>网络常量；常量定义；取值设为常数</p></li><li><p><input disabled="" type="checkbox"> Boolean<br>美: [ˈbuliən]  英: [ˈbuːliən]<br>adj.布尔逻辑体系的（分别以 1 和 0 代指是和非）<br>n.〔数〕布尔<br>网络布尔型；布尔值；布林</p></li><li><p><input disabled="" type="checkbox"> interface<br>美: [ˈɪntərˌfeɪs]  英: [ˈɪntə(r)ˌfeɪs]<br>n.接口；（人机）界面（尤指屏幕布局和选单）；接口程序；连接电路<br>v.连接<br>网络介面；分界面；接口类型<br>词形：interfaces；interfaced；interfacing</p></li><li><p><input disabled="" type="checkbox"> enum<br>英 [ɪˌnjuːm] 美 [‘enəm]<br>网络枚举；枚举类型；列举；列举型别；电话号码映射</p></li><li><p><input disabled="" type="checkbox"> annotation<br>美: [ˌænə’teɪʃ(ə)n]  英: [ˌænə’teɪʃ(ə)n]<br>n.注释；注解；附注；评注<br>网络标注；注记；批注<br>词形：annotations</p></li><li><p><input disabled="" type="checkbox"> item<br>美: [ˈaɪtəm]  英: [‘aɪtəm]<br>n.项目；(新闻的)一条；(戏剧的)节目<br>adv.同上<br>网络物品；道具；检验项目<br>词形：items</p></li><li><p><input disabled="" type="checkbox"> tiny<br>美: [ˈtaɪni]  英: [‘taɪni]<br>adj.极小的；微小的；微量的<br>n.小孩子；【医】癣；【女名】女子名<br>网络小小；山岭巨人；细小的<br>词形：tinier；tiniest</p></li><li><p><input disabled="" type="checkbox"> iterable<br>[iːtɜrˈeɪbl]<br>网络可迭代的；可迭代对象；可遍历对象</p></li><li><p><input disabled="" type="checkbox"> rebalance<br>[rɪˈbæləns]<br>网络再平衡；重新平衡；重新调整<br>balance<br>美: [ˈbæləns]  英: [‘bæləns]<br>n.平衡；均衡；余额；天平<br>v.抵消；相抵；使（在某物上）保持平衡；立稳<br>网络差额；结余；平衡性<br>词形：balances；balancing；balanced</p></li><li><p><input disabled="" type="checkbox"> repeat<br>美: [rɪˈpit]  英: [rɪˈpiːt]<br>v.重复；复述；重做；重说<br>n.重播的电视（或广播）节目；重演的事物；重复的事件；重复段<br>网络反复；循环；循环语句<br>词形：repeats；repeating；repeated</p></li><li><p><input disabled="" type="checkbox"> tilde<br>美: [ˈtɪldə]  英: [‘tɪldə]<br>n.腭化符号（~）（置于某些语言的字母和国际音标中某些元音符号之上，表示发音方法）<br>网络波浪符；波浪号；取代符号<br>词形：tildes</p></li><li><p><input disabled="" type="checkbox"> exclamation<br>美: [ˌekskləˈmeɪʃ(ə)n]  英: [.eksklə’meɪʃ(ə)n]<br>n.感叹；感叹词；感叹语<br>网络惊叹号；惊叹词；惊呼<br>词形：exclamations</p></li><li><p><input disabled="" type="checkbox"> bang<br>美: [bæŋ]  英: [bæŋ]<br>n.猛敲；突然的巨响；额前短发；刘海儿<br>v.猛敲；砸；（把…）砰地关上；猛摔<br>adv.正好；完全地<br>int.（表示枪声等巨响）砰<br>网络猛击；前刘海；突然巨响<br>词形：bangs；banging；banged</p></li><li><p><input disabled="" type="checkbox"> pound<br>美: [paʊnd]  英: [paʊnd]<br>v.捣碎；反复击打；连续砰砰地猛击；咚咚地走<br>n.英镑（英国货币单位，等于 100 便士）<br>网络磅；庞德；英磅<br>词形：pounds；pounding；pounded</p></li><li><p><input disabled="" type="checkbox"> sign<br>美: [saɪn]  英: [saɪn]<br>v.签名；签署；叹息；预示<br>n.符号；信号；表示；招牌<br>网络标记；记号；标志<br>词形：signs；signing；signed</p></li><li><p><input disabled="" type="checkbox"> sharp<br>美: [ʃɑrp]  英: [ʃɑː(r)p]<br>v.磨；诈欺；磨利；磨快<br>adj.锋利的；锐利的；尖的；（变化）急剧的<br>adv.（用于表时间的词语后，表示准时）…整；向左╱向右急转；偏高音地<br>n.“#”升号；锐利的东西（如针、注射器等）<br>网络夏普；日本夏普；声宝 ；【C#】C sharp<br>词形：sharper；sharpest；sharps</p></li><li><p><input disabled="" type="checkbox"> dollar<br>美: [ˈdɑlər]  英: [ˈdɒlə(r)]<br>n.元（美国、加拿大、澳大利亚等国的货币单位）；一元（纸币或硬币）<br>词形：dollars</p></li><li><p><input disabled="" type="checkbox"> peso<br>美: [ˈpeɪsoʊ]  英: [ˈpeɪsəʊ]<br>n.比索（多个拉美国家和菲律宾货币单位）<br>网络披索；菲律宾比索；菲律宾披索<br>词形：pesos</p></li><li><p><input disabled="" type="checkbox"> percent<br>美: [pərˈsent]  英: [pə(r)ˈsent]<br>adj.每一百中<br>n.百分之…<br>网络百分比；百分数；百分率</p></li><li><p><input disabled="" type="checkbox"> caret<br>美: [‘kærət]  英: [‘kærət]<br>n.“^”；脱字号；补注号<br>网络插入号“^”；插入符号；脱字符<br>词形：carets</p></li><li><p><input disabled="" type="checkbox"> wedge<br>美: [wedʒ]  英: [wedʒ]<br>n.楔子；三角木；楔形物；用作楔子的东西<br>v.将…挤入（或塞进、插入）；把…楔牢（或楔住）<br>网络挖起杆；楔体；楔形体<br>词形：wedges；wedging；wedged</p></li><li><p><input disabled="" type="checkbox"> arrow<br>美: [ˈæroʊ]  英: [ˈærəʊ]<br>n.箭头；箭号<br>网络箭牌；绿箭侠；阿罗<br>词形：arrows</p></li><li><p><input disabled="" type="checkbox"> circumflex<br>美: [ˈsɜrkəmˌfleks]  英: [ˈsɜː(r)kəmˌfleks]<br>n. (ˆ)扬抑符；〔语〕抑扬符<br>adj.旋绕的；有音调【长音】符的；卷曲的<br>v.附加音调【长音】符号于<br>网络长音符号；抑扬符号；音调符号<br>词形：circumflexes</p></li><li><p><input disabled="" type="checkbox"> break<br>美: [breɪk]  英: [breɪk]<br>n.中断；休息；破裂；机会<br>v.中断；破坏；碎；打断<br>网络打破；断裂；打碎</p></li><li><p><input disabled="" type="checkbox"> buffering<br>buffer<br>美: [ˈbʌfər]  英: [ˈbʌfə(r)]<br>v.缓冲；缓和；保护；使不利影响减少<br>n.家伙；【机】抛(光)盘；抛光工人；老派人物<br>网络缓存；缓冲事件；缓冲区<br>词形：buffers；buffering；buffered</p></li><li><p><input disabled="" type="checkbox"> ampersand<br>美: [ˈæmpərˌsænd]  英: [ˈæmpə(r)ˌsænd]<br>n.表示“and”之符号；和号∑读作西格马<br>网络和号；的记号名称；与符号<br>词形：ampersands</p></li><li><p><input disabled="" type="checkbox"> asterisk<br>美: [ˈæstərɪsk]  英: [ˈæst(ə)rɪsk]<br>n.星号(*)（置于词语旁以引起注意或另有注释）<br>v.给…注上星号<br>网络星标；星状物；通配符<br>词形：asterisks；asterisking；asterisked</p></li><li><p><input disabled="" type="checkbox"> capitalize<br>美: [ˈkæpɪt(ə)lˌaɪz]  英: [ˈkæpɪtəlaɪz]<br>v.用大写字母书写（或印刷）；把…首字母大写；变卖资产；变现<br>网络资本化；首字大写；利用<br>词形：capitalizes；capitalizing；capitalized</p></li><li><p><input disabled="" type="checkbox"> truncate<br>美: [ˈtrʌŋˌkeɪt]  英: [trʌŋˈkeɪt]<br>vt.删节（尤指掐头或去尾）<br>adj.截短的；被删节的<br>网络截断；清空表里的所有记录；截形<br>词形：truncates；truncating；truncated</p></li><li><p><input disabled="" type="checkbox"> seek<br>美: [sik]  英: [siːk]<br>v.寻求；寻找；谋求；争取<br>网络寻觅；追求；探索<br>词形：sought；seeks；seeking</p></li><li><p><input disabled="" type="checkbox"> offset<br>美: [ˈɔfˌset]  英: [ˌɒfˈset]<br>n.【印】胶印；背面蹭脏；【机】偏置(管)；迂回管<br>v.抵消；弥补；补偿<br>adj.胶印的<br>网络偏移；偏移量；抵销<br>词形：offsets；offsetting</p></li><li><p><input disabled="" type="checkbox"> whence<br>美: [hwens]  英: [wens]<br>pron.哪里；…的那里<br>adv.从哪里；从何处<br>n.根源；来源<br>网络来处；从那里；从哪里来</p></li><li><p><input disabled="" type="checkbox"> isatty<br>[ˌaɪ es ˈeɪˈtiːˈtiːˈwaɪ]<br>网络多工机制；检查设备类型；设备类型检查函数<br>Python3 File isatty() 方法检测文件是否连接到一个终端设备，如果是返回 True，否则返回 False。</p></li><li><p><input disabled="" type="checkbox"> descriptor<br>美: [dɪ’skrɪptə(r)]  英: [dɪ’skrɪptə(r)]<br>n.叙词<br>网络描述符；描述子；描述器<br>词形：descriptors</p></li><li><p><input disabled="" type="checkbox"> flush<br>美: [flʌʃ]  英: [flʌʃ]<br>v.冲洗；脸红；发红；冲（抽水马桶）<br>n.脸红；潮红；一阵强烈情感；（流露出的）一阵激情<br>adj.富有；完全齐平<br>adv.齐平地；直接地<br>网络同花；刷新；奔流<br>词形：flushes；flushing；flushed</p></li><li><p><input disabled="" type="checkbox"> bracket<br>美: [ˈbrækət]  英: [ˈbrækɪt]<br>n.【机】支架；(墙上装的)煤气灯嘴【电灯座】；【建】斗拱；【印】括弧<br>v.为…装托架；把…括在括号内；不予考虑；把…分类<br>网络方括号；中括号；括号沙发<br>词形：brackets；bracketing；bracketed</p></li><li><p><input disabled="" type="checkbox"> square<br>美: [skwer]  英: [skweə(r)]<br>n.平方；正方形；四方形；正方形物<br>v.贿赂；使成正方形；使成方形；使成平方<br>adj.正方形的；四方形的；成直角的；方的<br>adv.正对着地；径直地<br>网络广场；方块；史克威尔</p></li><li><p><input disabled="" type="checkbox"> curly<br>美: [ˈkɜrli]  英: [ˈkɜː(r)li]<br>adj.有鬈发（或毛）的；拳曲状的<br>网络卷曲的；卷毛的；有卷毛的<br>词形：curlier；curliest</p></li><li><p><input disabled="" type="checkbox"> definite<br>美: [ˈdefənɪt]  英: [ˈdef(ə)nət]<br>adj.肯定；肯定的；确定的；不会改变的<br>n.肯定的事（或人）<br>网络明确的；一定的；确切的</p></li><li><p><input disabled="" type="checkbox"> triangular<br>美: [traɪˈæŋɡjələr]  英: [traɪˈæŋɡjʊlə(r)]<br>adj.三角的；三角形的；涉及三人的；三组的<br>网络三者间的；三角波；三角分布</p></li><li><p><input disabled="" type="checkbox"> slash<br>美: [slæʃ]  英: [slæʃ]<br>n.“&#x2F;”斜杠；切口；斜线号；劈<br>v.劈；大幅度削减；大大降低<br>网络斩击；猛砍；大量削减<br>词形：slashes；slashing；slashed</p></li><li><p><input disabled="" type="checkbox"> minus<br>美: [ˈmaɪnəs]  英: [‘maɪnəs]<br>prep.减；减去；零下；无<br>n.减号；负号；负值；缺点<br>adj.小于零的；负的；负面的；使显得有欠缺的<br>网络负数；减去的</p></li><li><p><input disabled="" type="checkbox"> dash<br>美: [dæʃ]  英: [dæʃ]<br>n.短跑；“——”破折号；匆忙；少量<br>v.猛冲；急奔；急驰；猛掷<br>abbr.(&#x3D;drone antisubmarine helicopter)无线电遥控反潜艇攻击机<br>网络冲刺；冲撞；突进</p></li><li><p><input disabled="" type="checkbox"> option<br>美: [ˈɑpʃ(ə)n]  英: [ˈɒpʃ(ə)n]<br>n.选择；可选择的东西<br>网络选项；期权；设置</p></li><li><p><input disabled="" type="checkbox"> paste<br>美: [peɪst]  英: [peɪst]<br>v.粘贴；粘合；拼贴；贴入<br>n.面团；糨糊；肉（或鱼等）酱（作涂抹料或烹饪用）<br>adj.人造的；假的<br>网络贴上；浆糊；糊剂</p></li><li><p><input disabled="" type="checkbox"> flip<br>美: [flɪp]  英: [flɪp]<br>n.浏览；空翻；轻抛；捻掷<br>v.迅速翻动；按（开关）；按（按钮）；开（或关）（机器等）<br>adj.〈美俚〉&#x3D; flippant<br>网络翻转；轻击；弹</p></li><li><p><input disabled="" type="checkbox"> exist<br>美: [ɪɡˈzɪst]  英: [ɪɡ’zɪst]<br>v.存在；生存；实际上有<br>网络生活；发生；同本义<br>词形：exists；existing;；existed</p></li><li><p><input disabled="" type="checkbox"> exit<br>美: [ˈeksɪt]  英: [‘eksɪt]<br>n.退出；出口；出路；通道<br>v.退场；出去；离去；退出（计算机程序）<br>网络离开；太平门；退出程序<br>词形：exits；exiting；exited</p></li><li><p><input disabled="" type="checkbox"> profile<br>美: [ˈproʊˌfaɪl]  英: [ˈprəʊfaɪl]<br>n.轮廓；简介；形象；外形<br>v.扼要介绍；概述；写简介<br>网络配置文件；侧面；剖面<br>词形：profiles；profiling；profiled</p></li><li><p><input disabled="" type="checkbox"> kwargs<br>网络你可以在一个；关键字参数</p></li><li><p><input disabled="" type="checkbox"> args<br>网络参数；请求中的参数；Are Ratio Gray Scale</p></li><li><p><input disabled="" type="checkbox"> daemon<br>美: [ˈdimən]  英: [ˈdiːmən]<br>n.（古希腊神话中的）半神半人的精灵<br>网络守护进程；守护程序；虚拟光驱<br>词形：daemons；daemones</p></li><li><p><input disabled="" type="checkbox"> active<br>美: [ˈæktɪv]  英: [‘æktɪv]<br>adj.活跃的；积极的；定期进行的；起作用的<br>n.主动语态<br>网络主动的；激活；活动</p></li><li><p><input disabled="" type="checkbox"> limbo<br>美: [ˈlɪmboʊ]  英: [ˈlɪmbəʊ]<br>n.林波舞（西印度群岛舞蹈，舞者向后弯腰钻过一次比一次降低的横杆）<br>网络地狱边境；迷失域；地狱边缘<br>词形：limbos</p></li><li><p><input disabled="" type="checkbox"> exception<br>美: [ɪkˈsepʃ(ə)n]  英: [ɪk’sepʃ(ə)n]<br>n.例外；一般情况以外的人（或事物）；规则的例外；例外的事物<br>网络异常；除外；例外状况<br>词形：exceptions</p></li><li><p><input disabled="" type="checkbox"> bootstrap<br>美:  英: [‘buːtstræp]<br>adj.依靠自己力量的；自己做的<br>n.拔靴带<br>网络自举；引导；引导程序<br>词形：bootstraps；bootstrapped；bootstrapping</p></li><li><p><input disabled="" type="checkbox"> raise<br>美: [reɪz]  英: [reɪz]<br>v.提升；增加；培养；举起<br>n.加薪；工资增长<br>网络提高；饲养；筹集<br>词形：raises；raising；raised</p></li><li><p><input disabled="" type="checkbox"> callable<br>美: [‘kɔləbəl]  英: [‘kɔ:ləbl]<br>adj.可随时支取的<br>网络可赎回；可赎回的；可调用的</p></li><li><p><input disabled="" type="checkbox"> inner<br>美: [ˈɪnər]  英: [ˈɪnə(r)]<br>n.内部；射中接近靶心部分的一发<br>adj.里面的；向内的；内部的；接近中心的<br>网络内心的；内在的<br>词形：innermost；inmost</p></li><li><p><input disabled="" type="checkbox"> interger<br>网络的整数寄存器；转换为整数型；整数型态</p></li><li><p><input disabled="" type="checkbox"> ident<br>美: [ˈaɪdent]  英: [‘aɪdent]<br>n.标志短片<br>网络识别(identification)；标识符；识别信号<br>词形：idents</p></li><li><p><input disabled="" type="checkbox"> tstate<br>[ˈtiˈɛsˈteɪt]<br>网络帐户状态</p></li><li><p><input disabled="" type="checkbox"> native<br>美: [ˈneɪtɪv]  英: [‘neɪtɪv]<br>n.本地人；当地人；出生于某国（或某地）的人<br>adj.出生地的；儿时居住地的；本地的；当地的<br>网络原生；本国的；本土的<br>词形：natives</p></li><li><p><input disabled="" type="checkbox"> settrace<br>Python sys.settrace ()函数，用于实现调试器、分析器和覆盖工具<br>trace<br>美: [treɪs]  英: [treɪs]<br>n.微量；痕迹；轨迹；追踪<br>v.追踪；追溯；查出；描摹<br>网络跟踪；踪迹；设置包跟踪</p></li><li><p><input disabled="" type="checkbox"> hook<br>美: [hʊk]  英: [hʊk]<br>n.钩；挂钩；鱼钩；钓钩<br>v.挂住；箍住；钓（鱼）；打曲线球<br>网络钩子；铁钩船长；吊钩<br>词形：hooks；hooking；hooked</p></li><li><p><input disabled="" type="checkbox"> setprofile<br>Python sys.setprofile方法<br>网络信息更新接口</p></li><li><p><input disabled="" type="checkbox"> refcycle<br>英音：[ri:’saikl] 美音：[ri’saikI]<br>Recycle 是回收利用的意思,在计算机语言中,有特殊的含义.含义是回收站.<br>（vt）. 使再循环;再利用<br>词形：recycled；recycling<br>recyclev.使再循环，反复利用<br>recycle 再循环；回收<br>使再循环,再利用,再制</p></li><li><p><input disabled="" type="checkbox"> avoid<br>美: [əˈvɔɪd]  英: [ə’vɔɪd]<br>v.避免；避开；防止；回避<br>网络逃避；躲开；躲避<br>词形：avoids；avoiding；avoided</p></li><li><p><input disabled="" type="checkbox"> finally<br>美: [ˈfaɪn(ə)li]  英: [‘faɪn(ə)li]<br>adv.终于；最终；（用于列举）最后；彻底地<br>网络终於；总算；终于吃上饭喽</p></li><li><p><input disabled="" type="checkbox"> transformer<br>美: [trænsˈfɔrmər]  英: [trænsˈfɔː(r)mə(r)]<br>n.变压器<br>网络互感器；变形金钢；变换器<br>词形：transformers</p></li><li><p><input disabled="" type="checkbox"> current<br>英 [ˈkʌrənt]   美 [ˈkɜːrənt]<br>adj.现在的;当前的;现时发生的;通用的;流通的;流行的<br>n.电流;(海洋或江河的)水流;气流;思潮;潮流;趋向<br>复数： currents</p></li><li><p><input disabled="" type="checkbox"> abbreviation<br>英 [əˌbriːviˈeɪʃn]   美 [əˌbriːviˈeɪʃn]<br>n.缩写;缩写词;缩略;略语<br>复数： abbreviations</p></li><li><p><input disabled="" type="checkbox"> delay<br>美: [dɪˈleɪ]  英: [dɪ’leɪ]<br>v.延迟；推迟；延期；使迟到<br>n.延误；延期；耽搁；延迟（或耽搁、拖延）的时间<br>网络延时；耽误<br>词形：delays；delaying；delayed</p></li><li><p><input disabled="" type="checkbox"> overwrite<br>美: [ˌoʊvərˈraɪt]  英: [ˌəʊvəˈraɪt]<br>v.盖写；重写<br>网络覆盖；覆写；改写<br>词形：overwrote；overwritten；overwriting；overwrites</p></li><li><p><input disabled="" type="checkbox"> MainThread<br>un.主流中泓线<br>网络主线程；主执行绪；装载器和当湔线程</p></li><li><p><input disabled="" type="checkbox"> match<br>美: [mætʃ]  英: [mætʃ]<br>n.比赛；火柴；竞赛；婚姻<br>v.相配；满足；适应；配对<br>网络匹配；对手<br>词形：matches；matching；matched</p></li><li><p><input disabled="" type="checkbox"> attribute<br>美: [ˈætrɪˌbjuːt]  英: [ˈætrɪˌbjut]<br>n.属性；象征<br>v.把…归因于；认为…属于；认为某人(某物)具有某种特性<br>网络定语；特征；品质<br>词形：attributed；attributing；attributes</p></li><li><p><input disabled="" type="checkbox"> carriage<br>美: [ˈkerɪdʒ] 英: [ˈkærɪdʒ]<br>n.运输；运费；举止；仪态<br>网络马车；四轮马车；客车厢<br>词形：carriages</p></li><li><p><input disabled="" type="checkbox"> feed<br>美: [fid]  英: [fiːd]<br>v.饲养；喂养；供应；供给<br>n.（婴儿的）一次喂奶；（动物的）一次喂给的饲料；动物的饲料<br>网络进给；喂食；馈送<br>词形：feeds；feeding；fed</p></li><li><p><input disabled="" type="checkbox"> similarity<br>美: [ˌsɪmɪˈlerəti]  英: [ˌsɪməˈlærəti]<br>n.相似性；相似处；相仿性；类似性<br>网络相似度；相似点；类似处<br>词形：similarities</p></li><li><p><input disabled="" type="checkbox"> selenium<br>美: [səˈliniəm]  英: [səˈliːniəm]<br>n.硒（化学元素，用于制造电气设备和有色玻璃，人体缺此元素可致抑郁等病）<br>网络硒质；含硒；硒元素</p></li><li><p><input disabled="" type="checkbox"> request<br>美: [rɪˈkwest]  英: [rɪ’kwest]<br>n.请求；要求；要求物；请愿书<br>v.要求<br>网络请求表；申请；最大的请求数量</p></li><li><p><input disabled="" type="checkbox"> expected<br>美: [ɪkˈspektəd]  英: [ɪkˈspektɪd]<br>adj.预料的；预期的<br>v.“expect”的过去式和过去分词<br>网络期望的；期待的；盼望的</p></li><li><p><input disabled="" type="checkbox"> condition<br>美: [kənˈdɪʃ(ə)n]  英: [kən’dɪʃ(ə)n]<br>n.条件；情况；疾病<br>v.决定；护理(头发,皮肤)<br>网络环境；状况；条款</p></li><li><p><input disabled="" type="checkbox"> presence<br>美: [ˈprezəns]  英: [ˈprez(ə)ns]<br>n.存在；出现；在场；出席<br>网络到场；临在<br>词形：presences</p></li><li><p><input disabled="" type="checkbox"> element<br>美: [ˈelɪmənt] 英: [‘elɪmənt]<br>n.要素；原理；【数】元；【军】小队<br>网络元素；元件；成分<br>词形：elements</p></li><li><p><input disabled="" type="checkbox"> located<br>美: [loʊˈkeɪtɪd]  英: [ləʊˈkeɪtɪd]<br>adj.位于；坐落在<br>v.“locate”的过去分词和过去式<br>网络定位；坐落的；位于的</p></li><li><p><input disabled="" type="checkbox"> query<br>美: [ˈkwɪri]  英: [ˈkwɪəri]<br>n.询问；疑问；问号<br>v.询问；怀疑；表示疑虑<br>网络查询；质问；问题</p></li><li><p><input disabled="" type="checkbox"> implicitly<br>美:  英: [ɪm’plɪsɪtlɪ]<br>adv.暗中；暗含；含蓄地；蕴涵<br>网络暗中地；隐含地；隐式</p></li><li><p><input disabled="" type="checkbox"> slogan<br>美: [ˈsloʊɡən]  英: [ˈsləʊɡən]<br>n.口号；标语<br>网络广告语；广告标语；品牌口号<br>词形：slogans</p></li><li><p><input disabled="" type="checkbox"> regular<br>美: [ˈreɡjələr]  英: [ˈreɡjʊlə(r)]<br>n.常客；老主顾；主力（或正式）队员；（电视节目的）老主持人<br>adj.规则的；有规律的；间隙均匀的；定时的<br>adv.经常地；完全<br>网络定期的；经常的；常规<br>词形：regulars</p></li><li><p><input disabled="" type="checkbox"> expression<br>美: [ɪkˈspreʃ(ə)n]  英: [ɪk’spreʃ(ə)n]<br>n.表达；表情；说法；压榨<br>网络表达式；表现；运算式<br>词形：expressions</p></li><li><p><input disabled="" type="checkbox"> regex、regexp、Regexes<br>网络正则表达式；使用正则表达式；正则表达式校验器</p></li><li><p><input disabled="" type="checkbox"> level<br>美: [ˈlev(ə)l]  英: [‘lev(ə)l]<br>n.水平；级别；层次；程度<br>v.对准；使平坦；使平整；夷平（建筑物或树林）<br>adj.平的；平坦的；等高的；地位相同的<br>adv.准确；平坦地；和…成水平；势均力敌地<br>网络等级；电平；水准</p></li><li><p><input disabled="" type="checkbox"> designation<br>美: [ˌdezɪɡˈneɪʃ(ə)n]  英: [.dezɪɡ’neɪʃ(ə)n]<br>n.名称；指定；称号；选定<br>网络命名；指示；牌号<br>词形：designations</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; 
filter ✅ 2022-07-21&lt;br&gt;美: [ˈfɪltər]  英: [ˈfɪltə(r)]&lt;br&gt;n.	滤波器；过滤器；滤光器；滤声器&lt;br&gt;v.	</summary>
      
    
    
    
    <category term="02-学习中" scheme="https://berlin2022.github.io/categories/02-%E5%AD%A6%E4%B9%A0%E4%B8%AD/"/>
    
    
    <category term="plan" scheme="https://berlin2022.github.io/tags/plan/"/>
    
  </entry>
  
  <entry>
    <title>Excel 系列教程</title>
    <link href="https://berlin2022.github.io/2022-07-16-30660c24.html"/>
    <id>https://berlin2022.github.io/2022-07-16-30660c24.html</id>
    <published>2022-07-15T16:30:00.000Z</published>
    <updated>2022-08-01T10:43:14.472Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="最近搜索"><a href="#最近搜索" class="headerlink" title="最近搜索"></a>最近搜索</h2><ul><li>VLOOKUP高阶玩法MATCH和INDIRECT</li><li><input disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/59098572">VLOOKUP超高阶玩法——跨多表查询</a> </li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1eJ411D7cP/">vlookup跨工作表引用配合INDIRECT自动引用工作表三</a> </li><li><a href="https://jingyan.baidu.com/article/647f011597fbed3e2148a8d5.html">excel中如何利用函数真正的保留小数点后两位？</a> </li><li>excel 怎么做比值</li><li><a href="https://wenda.so.com/q/1377527624061728">excel 2007 的公式比值怎么弄？用什么函数公可以做到呢？请高手帮忙，谢谢。</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://zhidao.baidu.com/question/1247946948166952899.html">countif和countifs函数的区别是什么？</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://blog.csdn.net/weixin_50853979/article/details/124104217">EXCEL的COUNTIF和COUNTIFS函数的区别和联系</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://jingyan.baidu.com/article/948f59244d523e990ff5f9dc.html">Excel函数Count、Countif、Countifs使用的区别</a></li></ul><h2 id="excel常用公式-amp-快捷键"><a href="#excel常用公式-amp-快捷键" class="headerlink" title="excel常用公式&amp;快捷键"></a>excel常用公式&amp;快捷键</h2><table><thead><tr><th align="left">内容</th><th align="left">介绍</th></tr></thead><tbody><tr><td align="left">excel行数限制</td><td align="left">xls格式的，最多65536，突破不了。但是xlsx格式的，可以有1048576行</td></tr><tr><td align="left">excel单元格长度限制</td><td align="left">单元格内容度(文本)32,767 字符，单元格能显示 1,024 字符，编辑栏则显示全部 32,767 字符</td></tr><tr><td align="left">Shift+F3</td><td align="left">输入“函数+(” 按Shift+F3，调出函数参数对话框</td></tr><tr><td align="left">VLOOKUP透视</td><td align="left">VLOOKUP函数必须遵循左右顺序，左侧对应左侧，然后是序列第几个</td></tr><tr><td align="left">Ctrl+D</td><td align="left">向下填充选中单元格的公式</td></tr><tr><td align="left">ctrl+ shift + ↑ ↓</td><td align="left">向上&#x2F;下批量选中</td></tr><tr><td align="left">Ctrl + E</td><td align="left">智能提取汉字、字母、数字</td></tr><tr><td align="left">Ctr+G</td><td align="left">定位到可见单元格</td></tr><tr><td align="left">=if(exact(A2,B2),1,0)</td><td align="left">返回单元格A2与单元格B2中的文本内容相同则结果为1，否则结果为0</td></tr><tr><td align="left">=LEFT(A2,1) cell&#x3D;MID(A2,2,1)</td><td align="left">可以快速字符截断，根据字数截断，用作根据拼音筛选同义词</td></tr><tr><td align="left"><code>\=COUNTIF(A:A,&quot;*关键词*&quot;)</code></td><td align="left">用关键字来进行模糊计数，常用作辅助列公式，返回A列单元格包含关键词的数量</td></tr><tr><td align="left"><code>\=COUNTIF(A:A,关键词*)</code></td><td align="left">返回包含以关键词(不分大小写)开头内容的单元格数量</td></tr><tr><td align="left"><code>\=COUNTIF(A:A,*关键词)</code></td><td align="left">返回包含以关键词(不分大小写)结尾内容的单元格数量</td></tr><tr><td align="left">=COUNTIF(A:A,?????)</td><td align="left">返回A列单元格中5个字符的关键词数量</td></tr><tr><td align="left"><code>\=COUNTIF(A:A,*)</code></td><td align="left">返回包含文本内容的单元格数量</td></tr><tr><td align="left">=COUNTIF(A1:A5,“关键词”)</td><td align="left">返回条件单元格关键词出现的次数</td></tr><tr><td align="left">=LEFT(A2,LENB(A2)-LEN(A2))</td><td align="left">中英文规律性混合提取中文名</td></tr><tr><td align="left">=RIGHT(A1,2LEN(A1)-LENB(A1))</td><td align="left">中英文规律性混合分离英文，从右边截取A1关键词内容，截取数为2倍的字符数减去单倍的字节数，结果等于包含单元字节个数</td></tr><tr><td align="left"><code>\=VLOOKUP(*&amp;C2&amp;*,$A2:A$4,1,0)</code></td><td align="left">VLOOKUP模糊匹配，只要包含目标关键词即返回值</td></tr><tr><td align="left"><code>\=VLOOKUP(*关键词*&quot;,$A2:A$4,1,0)</code></td><td align="left">VLOOKUP模糊匹配，对包含单个关键词匹配返回值，单个<code>*是以关键词为结尾/开头匹配</code></td></tr><tr><td align="left">=VLOOKUP(D12,A$1B$1,2,FALSE)</td><td align="left">选定单元格区域精准匹配内容</td></tr><tr><td align="left">文本批量换行“^l”</td><td align="left">可通过换行符“^l”进行批量换行操作</td></tr><tr><td align="left"><code>\=FILTER(D:D,(A:Acell=G2)*(E:Ecell=H2))</code></td><td align="left">D:D是想要提取的数据列，G2、H2是条件单元格，filter函数只有高版本excel才能使用</td></tr><tr><td align="left">=SUBSTITUTE(A2,B2,”)</td><td align="left">提取两个关键词之间不同的部分，平时主要用来替换关键词</td></tr><tr><td align="left">快捷键Ctrl+\</td><td align="left">A、B两列选中后按快捷键，B列里面，内容不同的单元格将被选中，可以填充底色标注</td></tr><tr><td align="left">=IF(A2&#x3D;B2,”重复”,””)</td><td align="left">找重复值 ,IF(条件,TRUE,FALSE)</td></tr><tr><td align="left">=IF(A2&#x3D;B2,””,”不同”)</td><td align="left">找重复值 ,IF(条件,TRUE,FALSE)</td></tr><tr><td align="left">=ROUND(float,位数)</td><td align="left">函数会对数据进行四舍五入，后面的2表示保留小数点后两位</td></tr></tbody></table><h2 id="搜索历史"><a href="#搜索历史" class="headerlink" title="搜索历史"></a>搜索历史</h2><ul><li><input checked="" disabled="" type="checkbox"> excel365怎样高亮显示重复数据</li><li><input checked="" disabled="" type="checkbox"> excel判断是否重复并用颜色标识</li><li><input checked="" disabled="" type="checkbox"> Excel 怎么用不同颜色标记不同的重复数值</li><li><input checked="" disabled="" type="checkbox"> Excel如何快速隐藏错误值？iferror(vlookup)</li><li><input disabled="" type="checkbox"> <a href="https://www.liqucn.com/article/33746.shtml">excel卡住了怎么办 excel卡住了解决方法_历趣</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.sohu.com/a/322314312_649909">Excel教程：超级实用的提取函数Substitute </a> ✅ 2022-06-20</li><li><input disabled="" type="checkbox"> <a href="https://jingyan.baidu.com/article/0f5fb099ba419b2d8234ea71.html">excel如何利用SUBSTITUTE函数提取字符</a></li><li><input disabled="" type="checkbox"> <a href="https://jingyan.baidu.com/article/3065b3b64d8175becff8a4ee.html">如何用SUBSTITUTE函数提取EXCEL表格中特定字符</a></li><li><input disabled="" type="checkbox"> <a href="https://blog.csdn.net/chenxg1251190170/article/details/103136308">java导出csv文件 为解决导出excel时每个单元格的限制（32767）_IT老陈的博客</a></li><li><input disabled="" type="checkbox"> <a href="https://wenku.baidu.com/view/9cb686eb0f22590102020740be1e650e52eacf8f.html">Excel2019怎么启用多线程计算？Excel2019多线程计算设置教程 - 百度文库</a></li><li><input disabled="" type="checkbox"> <a href="https://blog.csdn.net/weixin_39922683/article/details/110936976">截取字符串最后三维_Excel常见文本截取函数_weixin_39922683的博客-CSDN博客</a></li><li><input disabled="" type="checkbox"> <a href="https://www.jianshu.com/p/9e73399b6c38?ivk_sacell=1024320u">easyexcelThemaximumlengthofcellcontents(text)is32,767characters-简书</a></li><li><input disabled="" type="checkbox"> <a href="https://blog.csdn.net/sunxmwebstudy/article/details/117108270">【Excel】使用VLOOKUP+IF实现多列条件匹配查询_爱编程的胖子的博客-CSDN博客_vlookup和if多个条件匹配</a></li><li><input disabled="" type="checkbox"> <a href="https://blog.csdn.net/weixin_44866773/article/details/88974983">eXtremeTable–Export自定义excel导出 超过32767条记录的导出_weixin_44866773的博客</a></li><li><input disabled="" type="checkbox"> <a href="https://blog.csdn.net/weixin_39865102/article/details/110651412">excel高级工具箱_5个好评率超高的免费Excel插件，工具多效率高，堪称办公神器…_weixin_39865102的博客</a></li><li><input disabled="" type="checkbox"> <a href="https://jingyan.baidu.com/article/ca2d939d767a16eb6c31ce85.html">怎么将Excel多个工作表拆分成多个单独的Excel-百度经验 (baidu.com)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://wenku.baidu.com/view/353e9d3510661ed9ad51f311.html">excel exact排重公式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/344557761">你和Excel高手之间，就只差一个——方方格子 - 知乎 (zhihu.com)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.xxbaike.cn/7031.html">excel单元格英文字母序列自动填充实用技巧-秒懂知识</a></li><li><input disabled="" type="checkbox"> <a href="https://www.jianshu.com/p/42ed4ecf0f67">excel：vlookup双向不完全匹配关键字-简书</a></li><li><input disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/412895720">Excel高级函数插件EFunction加载和卸载-知乎</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/344557761">你和Excel高手之间，就只差一个——方方格子 - 知乎</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/read/cv2663100/">EXCEL文本处理（提取数字，汉字，拼音）-哔哩哔哩</a></li><li><input disabled="" type="checkbox"> <a href="https://wenda.so.com/q/1638276096219731">excel表格中，怎么随机生成一列日期时间？_360问答</a></li><li><input disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/412895720">Excel 高级函数插件EFunction加载和卸载 - 知乎</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/433685799">Excel EFunction 高级函数教程40-ETStrSeparate函数，将长文本等分为指定长度内容</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/433665862">Excel EFunction 高级函数教程19-ETFilter函数，快速过滤函数，对标365FILTER函数</a></li><li><input disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/433669897">Excel EFunction 高级函数教程26-ETSimilarity函数，匹配近似文本</a></li><li><input disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/433200181">Excel EFunction 高级函数教程10-ETSQL万能函数数据查询，统计统统拿下</a> </li><li><input disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/433688181">Excel EFunction 高级函数教程46-ETMatch函数，比VLOOKUP函数快百倍的函数</a> </li><li><input disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/433683868">Excel EFunction 高级函数教程34-ETRegexMatch函数，执行正则表达式，实现数据匹配</a></li><li><input disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/433669547">Excel EFunction 高级函数教程25-ETSequence函数，获取等差序列</a> </li><li><input disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/433184472">Excel EFunction 高级函数课程09-ETAggregate聚合函数，轻松实现分组求和、求平均值等TOPN问题</a> </li><li><input disabled="" type="checkbox"> <a href="https://zhuanlan.zhihu.com/p/467035514">Excel接近万能函数ETSQL实现Excel主流函数所有功能</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/av677318991">EFunction让Excel没有365也能使用排序函数，ETSort轻松实现数据排序</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/av763724190">Excel EFunction超级函数ETGetUUID函数_哔哩哔哩_bilibili</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1cR4y1E7t5">Excel EFunction ETMatchSimple函数和ETMATCH一样，都是快速匹配函数</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1th411t7qB">Excel EFunction 轻松实现数据拆解_哔哩哔哩_bilibili</a></li></ul><h2 id="历史书签"><a href="#历史书签" class="headerlink" title="历史书签"></a>历史书签</h2><ul><li><a href="https://product.pconline.com.cn/itbk/software/bgrjjc/1704/9150877.html">在excel表格中如何添加数据分析的插件-太平洋IT百科</a></li><li><a href="https://baijiahao.baidu.com/s?idcell=1606969397967001145&wfrcell=spider&forcell=pc">EXCEL快速提取中英文、数字的4个方法，总有一个适合你！</a></li><li><a href="https://www.office26.com/excelhanshu/excel_function_19402.html">excel 文本长度计算函数LEN与LENB的用法与区别_Office教程网</a></li><li><a href="https://zhuanlan.zhihu.com/p/433200447">Excel EFunction 高级函数教程11-ETStrExtractSub函数，轻松提取文本之中数字、中文及英文 - 知乎</a></li><li><a href="https://www.zhihu.com/question/335603870?ivk_sacell=1024320u">Vlookup函数只能查出第一个匹配的单元格，下方有多个符合值查不到怎么办，求大佬帮忙解决？</a></li><li><a href="https://blog.csdn.net/weixin_44819178/article/details/123265430">VLOOKUP多条件匹配_鬼R见愁的博客-CSDN博客_vlookup多条件匹配</a></li><li><a href="https://zh.tinystm.org/what-is-spill-error-how-solve-spill-115336">什么是溢出错误？如何解决#SPILL！ Excel 365 中的错误 - 帮助</a></li><li><a href="https://xinzhi.wenda.so.com/m/a/1618219639203847">excel中如何生成一定范围内的随机日期和时间_360新知</a></li><li><a href="http://www.360doc.com/content/21/0506/23/23184234_975924395.shtml">Excel中如何提取特定字符？</a></li><li><a href="https://www.3d66.com/answers/question_621966.html">【4人回答】如何批量去掉Excel表格中中文汉字？-3D溜溜网</a></li><li><a href="https://club.excelhome.net/">ExcelHome技术论坛-Excel教程免费学习，Excel表格交流，下载Excel函数VBA技巧培训-</a></li><li><a href="https://zhuanlan.zhihu.com/p/433144306">ExcelEFunction高级函数教程04-ETResize根据条件进行去重函数-知乎</a></li><li><a href="https://v.qq.com/x/page/a3308vcyqcz.html">Excel EFunction 比VLOOKUP函数快百倍的ETMATCH函数使用技巧</a></li><li><a href="https://g.pconline.com.cn/x/918/9188526.html">EXCEL如何随机生成时间？EXCEL随机生成时间的方法-太平洋IT百科手机版</a></li><li><a href="http://www.downcc.com/soft/101763.html">excel高级工具箱下载-excel高级工具箱(26个高级插件集合)下载第二版-绿色资源网</a></li><li><a href="https://www.zhihu.com/question/505322323/answer/2267005871">如何快速筛选出Excel中带有英文的选项? - 知乎</a></li><li><a href="https://zhuanlan.zhihu.com/p/433144306">Excel EFunction 高级函数教程04-ETResize根据条件进行去重函数 - 知乎</a></li><li><a href="https://jingyan.baidu.com/article/f25ef254946e6a482c1b82e7.html">Vlookup实现模糊匹配的使用技巧-百度经验</a></li><li><a href="https://club.excelhome.net/thread-487349-1-1.html">筛选其中含有中文的所有行-Excel函数与公式-ExcelHome技术论坛-</a></li><li><a href="https://zhidao.baidu.com/question/1046979256561980979.html">如何突破excel单元格中只能显示1024个字符的限制？_百度知道</a></li><li><a href="http://www.360doc.com/content/22/0211/23/18781560_1017032364.shtml">Excel教程：excel汉字和数字分离的2种方法</a></li><li><a href="https://jingyan.baidu.com/article/1709ad802776404635c4f050.html">Excel中如何计算一个单元格中某个字符的个数-百度经验</a></li><li><a href="https://jingyan.baidu.com/article/ca2d939d767a16eb6c31ce85.html">怎么将Excel多个工作表拆分成多个单独的Excel-百度经验</a></li><li><a href="https://blog.csdn.net/scnugeo/article/details/110173382]">excel提取文字、字母、符号_学习啊啊啊啊啊的博客_excel混合文本提取字母</a></li><li><a href="https://jingyan.baidu.com/article/915fc4143fa53911384b207e.html">excel如何让vlookup只要包含目标内容即返回值-百度经验</a></li><li><a href="https://jingyan.baidu.com/article/3065b3b64d8175becff8a4ee.html">如何用SUBSTITUTE函数提取EXCEL表格中特定字符-百度经验</a></li><li><a href="https://zhuanlan.zhihu.com/p/433200447">ExcelEFunction高级函数教程11-ETStrExtractSub函数，轻松提取文本之中数字、中文及英文-知乎</a></li><li><a href="https://baijiahao.baidu.com/s?idcell=1726718192912776578&wfrcell=spider&forcell=pc">excel处理数据时，如何快速将公式转换为值？</a></li><li><a href="https://wenwen.sogou.com/z/q812940330.htm?frcell=wap&_tcell=407883&rcercell=">在EXCEL中为什么每个单元格可容纳32767个字符的数据?</a></li><li><a href="https://zhidao.baidu.com/question/1668722617850380627.html">cell&#x3D;VLOOKUP(&quot;<em>&quot;&amp;A1&amp;&quot;</em>&quot;,{&quot;0&quot;,&quot;235689&quot;;&quot;1&quot;,&quot;012589&quot;;&quot;2&quot;,&quot;134678&quot;;&quot;3&quot;,&quot;013478&quot;},2,0)_百度知道</a></li><li><a href="http://a4.qpic.cn/psb?/V10om2Ry4ZSd3J/k.tCIFHvXSVyfwKweUsLgrx9H7twYpuua9M5xI9pVPg!/b/dLe9t.bcCAAA&ekcell=1&kpcell=1&ptcell=0&bocell=JgYiAgAAAAAFACM!&tlcell=3&sucell=0255791489&tmcell=1645758000&scecell=0-12-12&rfcell=2-9">psb(1574×546) vlookup函数在竞价中的应用实例，qq图片</a></li><li><a href="https://baijiahao.baidu.com/s?idcell=1722612791003106576&wfrcell=spider&forcell=pc">几十万行数据，想用VLOOKUP函数查找对应值，卡死怎么办？</a></li><li><a href="https://baijiahao.baidu.com/s?idcell=1675187008092433838&wfrcell=spider&forcell=pc">VLOOKUP函数进阶用法：模糊一对多匹配之匹配带关键字的所有内容</a></li><li><a href="https://wen.baidu.com/question/689921121930575452.html">无法在未启用宏的工作簿中保存vb_问一问</a></li><li><a href="https://zhidao.baidu.com/question/2019551022837383068.html">wps怎么开启4线程_百度知道</a></li><li><a href="https://baijiahao.baidu.com/s?idcell=1712951779960463194&wfrcell=spider&forcell=pc">神奇的CTRL+E快捷键，用了的都说好！</a></li><li><a href="https://baijiahao.baidu.com/s?idcell=1722612791003106576&wfrcell=spider&forcell=pc">几十万行数据，想用VLOOKUP函数查找对应值，卡死怎么办？</a></li><li><a href="https://www.liqucn.com/article/33746.shtml">excel卡住了怎么办 excel卡住了解决方法</a></li><li><a href="https://jingyan.baidu.com/article/6b1823094b75dffb58e15993.html">excel表格卡住不能动了</a></li><li><a href="https://zhidao.baidu.com/question/1709953239435213140.html">excel卡住了怎么办</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h2 id=&quot;最近搜索&quot;&gt;&lt;a href=&quot;#最近搜索&quot; class=&quot;headerlink&quot; title=&quot;最近搜索&quot;&gt;&lt;/a&gt;最近搜索&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;VLOOKUP高阶玩法MATCH和INDIRECT&lt;/li&gt;
&lt;li&gt;&lt;input disabled=</summary>
      
    
    
    
    <category term="02-学习中" scheme="https://berlin2022.github.io/categories/02-%E5%AD%A6%E4%B9%A0%E4%B8%AD/"/>
    
    
    <category term="excel" scheme="https://berlin2022.github.io/tags/excel/"/>
    
  </entry>
  
  <entry>
    <title>EmEditor系列教程</title>
    <link href="https://berlin2022.github.io/2022-07-16-84a98aa8.html"/>
    <id>https://berlin2022.github.io/2022-07-16-84a98aa8.html</id>
    <published>2022-07-15T16:30:00.000Z</published>
    <updated>2022-08-01T10:43:14.480Z</updated>
    
    <content type="html"><![CDATA[<h2 id="近期关注"><a href="#近期关注" class="headerlink" title="近期关注"></a>近期关注</h2><ul><li><a href="http://www.emeditor.org/zh-cn/cmd_edit_delete_duplicate.html">命令: 删除重复行命令 - EmEditor</a></li></ul><h2 id="我常用的emeditor快捷键整理"><a href="#我常用的emeditor快捷键整理" class="headerlink" title="我常用的emeditor快捷键整理"></a>我常用的emeditor快捷键整理</h2><table><thead><tr><th align="left">快捷键</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">shift+enter</td><td align="left">在当前行上方插入一行</td></tr><tr><td align="left">ctrl+shift+enter</td><td align="left">在当前行下方插入一行</td></tr><tr><td align="left">ctrl+shift+a</td><td align="left">选择所有匹配结果（中文要先选内容），并加入查找框</td></tr><tr><td align="left">ctrl+shift+c</td><td align="left">复制当前行（不选择内容，直接 ctrl+c 也是复制行）</td></tr><tr><td align="left">shift+delete &#x2F; shift+backspace</td><td align="left">删除当前行</td></tr><tr><td align="left">ctrl+g</td><td align="left">跳转至行 &#x2F; 列</td></tr><tr><td align="left">ctrl+shift+v</td><td align="left">循环粘贴剪切板中的内容（粘贴后光标选中粘贴内容）</td></tr><tr><td align="left">ctrl+x &#x2F; shift+delete                  <div>ctrl+L</div></td><td align="left">剪切行</td></tr><tr><td align="left">ctrl+shift+y</td><td align="left">多重复制当前行</td></tr><tr><td align="left">ctrl + ↑ ↓</td><td align="left">选中首行&#x2F;尾行（空行会中断）</td></tr><tr><td align="left">ctrl+shift+ ↑ ↓</td><td align="left">表格模式下，向上&#x2F;向下 全选（空行会中断）                         <div>全局模式下，上移或下移当前行&#x2F;选中行</div></td></tr><tr><td align="left">shift+ ↑ ↓</td><td align="left">上移或下移一行多选</td></tr><tr><td align="left">ctrl+shift+ ← →</td><td align="left">选择左侧所有行&#x2F;右侧侧所有行</td></tr><tr><td align="left">ctrl+home&#x2F;end</td><td align="left">选择到行首&#x2F;行尾（可以先按 home&#x2F;end 去到首行）</td></tr><tr><td align="left">ctrl+shift+home</td><td align="left">扩展选取到文档顶部</td></tr><tr><td align="left">ctrl+shift+end</td><td align="left">扩展选取到文档底部</td></tr><tr><td align="left">ctrl+shift+c</td><td align="left">快速启动，查看所有快捷键及配置</td></tr><tr><td align="left">ctrl+shift+o</td><td align="left">快速启动，查看所有自定义属性、快捷键</td></tr><tr><td align="left">Ctrl+Q</td><td align="left">快速启动，查看所有自定义属性、快捷键</td></tr><tr><td align="left">alt+鼠标左键</td><td align="left">切换垂直选择模式</td></tr><tr><td align="left">alt+enter</td><td align="left">打开当前文件属性设置</td></tr><tr><td align="left">ctrl++</td><td align="left">插入列</td></tr><tr><td align="left">ctrl+-</td><td align="left">删除列</td></tr><tr><td align="left">ctrl+shift+delete</td><td align="left">删除行</td></tr><tr><td align="left">ctrl+shift+L</td><td align="left">删除选取的行或者当前行</td></tr><tr><td align="left">ctrl+tab</td><td align="left">切换到下一个文档</td></tr><tr><td align="left">ctrl+shift+tab</td><td align="left">切换到上一个文档</td></tr><tr><td align="left">ctrl+shift+left</td><td align="left">当前列或者选定列左移一列</td></tr><tr><td align="left">ctrl+shift+right</td><td align="left">当前列或者选定列右移一列</td></tr><tr><td align="left">alt+N</td><td align="left">对所选列进行编号</td></tr><tr><td align="left">Ctrl+Shift+F2</td><td align="left">清除所有书签</td></tr><tr><td align="left">Alt+F3</td><td align="left">可以暂时关掉显亮功能</td></tr><tr><td align="left">Shift+End</td><td align="left">选择光标位置到行尾</td></tr></tbody></table><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><ul><li><a href="http://www.emeditor.org/zh-cn/index.html">EmEditor 帮助文档</a> </li><li><input checked="" disabled="" type="checkbox"> 为什么要使用Emeditor作为我的首选编辑器（一） ✅ 2022-05-30</li><li><input checked="" disabled="" type="checkbox"> 为什么要使用Emeditor作为我的首选编辑器（二） ✅ 2022-05-30</li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1g7411s7HB">EmEditor系列教程-00集-EmEditor概述</a> ✅ 2022-05-30</li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1q7411p7xX">EmEditor系列教程-01集-EmEditor用户界面</a> ✅ 2022-05-[[30-Reading]]</li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1A7411H7XJ">EmEditor系列教程-02集-EmEditor文件打开与基本操作</a> 02集 ✅ 2022-05-30</li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1k7411G7aU">EmEditor系列教程-03集-大文件打开与编辑</a> ✅ 2022-07-10<ul><li>大文件正则替换（改变英文字母位置）提取&#x2F;分离英文：<code>^(\w)([a-z])(\w)(a-z)(\w)([a-z])(\w)([a-z])</code><br />替换为：<code>\2\4\6\8\t\1\3\5\7</code></li><li>大文件：正则替换（每15行插入一个空行）：查找内容：<code>(^.+$)</code> 设置附加行为 14 ，激活.匹配换行符，替换为：<code>\0\n</code></li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1dj411f7As?spm_id_from=333.999.0.0">EmEditor系列教程-04集-打开CSV文件与编辑</a><ul><li>编辑—CSV—转换为—删除不需要的引号（嵌入式换行符）</li><li>快捷键分全局模式和单独模式，比如 <code>ctrl+shift+ ↑ ↓</code>  关闭单元格显示模式 是移动行，否则是拓展行</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV12E41177rd?spm_id_from=333.999.0.0">EmEditor系列教程-05集-创建配置并定义设置</a> ✅ 2022-07-12<ul><li>工具—导入和导出，可导出全部文件的配置文件</li><li>文件属性—常规—启动虚空格，光标会垂直移动</li><li>文件属性—滚动—平滑移动，这个选择之后会非常不适应（非程序调用不建议开启）</li><li>文件属性—高亮(2)—自动完成括号&#x2F;引号标记，可自定义自动完成的括号对类型</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1WE41147xD?spm_id_from=333.999.0.0">EmEditor系列教程-06集-垂直选择与多选区编辑</a> ✅ 2022-07-15<ul><li>alt键激活垂直编辑模式，CSV中要关闭单元格显示模式</li><li>按住alt键可以对行尾进行选择</li><li>垂直编辑模式最好配合等宽字体使用</li><li>常见的等宽字体有：Consolas&#x2F;Courier New&#x2F;Mirosoft YaHei Mono</li><li>可按Ctrl+鼠标点选&#x2F;滑选，进行多选（英文点选&#x2F;中文滑选）</li><li>Ctrl+Shift+A（Ctrl+F，全部选择）或者使用正则表达式可对多选取进行选择</li><li>多选区域下按←→移动光标，按Shift+F8可交换光标的开始位置和结束位置</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV17f4y1S7bu?spm_id_from=333.999.0.0">EmEditor系列教程-07集-排序功能</a> ✅ 2022-07-17<ul><li>工具—自定义—排序—快速二进制比较，需同时勾选忽略大小写（按字母顺序排序）</li><li>工具—自定义—CSV格式，可以添加&#x2F;删除分隔符类型</li><li>编辑—排序（标尺—右键排序），可选择多种排序规则</li><li>按字母&#x2F;数字排序，需要切换到CSV模式下；需要标题行要先设置好，避免被排序</li><li>工具—自定义—排序—按出现次数对相同的字符串进行分组，针对多次重复且重复次数一样的情况，解决筛选出来的数据分散排列的问题。我在excel里也会遇到这种问题。</li><li>编辑—排序（标尺—右键排序）—高级排序—按照字数多&#x2F;少排序，英文按照字数排序实际上是按照单词的数量排序，中文最好不要选择这个功能，因为分词根本不准</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1N54y1B7tm?spm_id_from=333.999.0.0">EmEditor系列教程-08集-CSV文件的高级编辑</a> ✅ 2022-07-19<ul><li>CSV模式下—标尺—右键，如果有些功能不能用（灰色），只需设置标题栏取消只读，或设标题0即可</li><li>工具—自定义—CSV选项—自动调节分隔符位置，勾选再次打开会自动调整到合适的列宽</li><li>CSV模式下—标尺—右键—重置列宽，可恢复至默认等宽</li><li>单元格选择模式下需要双击才能编辑，取消单元格选择模式单击&#x2F;点选&#x2F;拖拽都可编辑</li><li>单元格选择模式下输入需要提取的字符串类型示例，双击单元格右下角十字标，下下拉框中选择“快速填充”可以实现智能提取，但是空白部分也会被第一个值填充，填充有时候会不准，有规律就会相对准一点。</li><li>工具—自定义菜单—上下文菜单—在下方插入—编辑—清除内容，可添加至右键菜单中</li><li>点击左上角（标尺和序列中间区域）可全选工作表，点击【列&#x2F;分隔符】按钮—使列数相同，可快速创建数据表（自动补齐缺失列数，根据列数最多的行进行补全）</li><li>点击【列&#x2F;分隔符】按钮—自动填充&#x2F;自动重复，可实现快速填充、增量填充（非智能提取）</li><li>点击【删除重复行】按钮会直接删除所有重复行， 点击【删除&#x2F;把重复行设为书签(高级)】按钮可选定指定行删除或设为书签（重复的行会标示颜色，不包括第一行），序列—右键—可对书签标记行进行其他操作</li><li>编辑（单元格）—右键—CSV—转换为（Ctrl+Q—CSV 转换器）—可对分隔符进行转换，删除引号、嵌入式换行符等操作</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1VV411r7bx?spm_id_from=333.999.0.0">EmEditor系列教程-09集-重复行的书签设置和删除</a> ✅ 2022-07-19<ul><li>编辑—高级—重复行（ctrl+shift+y），创建上一行的副本，或者叫克隆上一行</li><li>编辑—高级—剪切当前行（ctrl+L）</li><li>编辑—高级—删除重复行，图标在CSV工具栏后方</li><li>编辑—高级—删除&#x2F;把重复行设为标签（高级），图标在CSV工具栏后方，默认是检查整行，只有当垂直选择模式下，“仅检查选取的字符串”才会激活，设为书签</li><li>清除所有书签（Ctrl+Shift+F2）</li><li>高级书签功能，可设置是否忽略大小写，仅比较相邻的两行（假设以预选排序），应用于群组中的所有文档，忽略空行，仅限于选取，包括所有重复行</li><li>高级书签—包括所有重复行，如勾选所有的重复行都将被标记，不勾选（第一个重复的行不标记，其他重复行会被标记）</li><li>高级书签—仅检查指定列，需先切换到CSV模式，然后就能按照选定的列，进行重复检查</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1kz4y1D73G?spm_id_from=333.999.0.0">EmEditor系列教程-10集-CSV模式下合并行</a> ✅ 2022-07-19<ul><li>编辑—CSV—合并行（标尺—右键合并列），注意此命令是合并垂直相邻的列</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vt4y1z7ip?spm_id_from=333.999.0.0">EmEditor系列教程-11集-合并CSV文件与合并文本文件</a> ✅ 2022-07-20<ul><li>合并CSV文件：以某一列为参照，增加列数</li><li>合并文本文件：首位相连，依次相连，行数增加</li><li><code>copy *.txt all.txt</code> cmd命令使用通配符对文件进行批量合并</li><li>emeditor合并文件的次序可以自由调整（向上&#x2F;向下按钮），可以只合并文件中设为书签的行，可以设定文件合并后文件的编码以及换行符</li><li>工具—合并文件—合并文档至一个文件，需先打开待合并的文件</li><li>从除第一个文档之外的所有文档中删除第一行，可以去除多余标题行</li><li>CSV文件的合并必须在CSV模式下才可以操作，可以选择匹配的条件，可以设定合并之后的文件的列的先后次序</li><li>编辑—CSV—合并—包含所有不匹配的行，勾选会合并全部数据（包括错位的数据），取消勾选则只合并向匹配的行</li><li>模糊匹配，包含被包含……</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1oi4y1K7jx?spm_id_from=333.999.0.0">EmEditor系列教程-12集-提取CSV列与拆分文本文件</a> ✅ 2022-07-20<ul><li>Git Bash中使用split命令分割文件<ul><li>放入每个大小为500MB的文件中：<code>split mylargeFile.txt -b 500m</code></li><li>分为每个10000行的文件：<code>split mylargeFile.txt -l 10000</code></li></ul></li><li>工具—分割文件—按行&#x2F;按标签分割</li><li>编辑—CSV—提取列，可以按住shift键将选定的列合并后提取到新的文件，可以调整顺序</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19N411R7kv?spm_id_from=333.999.0.0">EmEditor系列教程-13集-筛选功能</a> ✅ 2022-07-21<ul><li>工具—所有命令—编辑—高级—筛选&#x2F;筛选除&#x2F;在列中筛选&#x2F;在列中筛选除外</li><li>在CSV模式下，可以对多列分别设定不同的筛选条件、查找方式，进行复杂的组合查找</li><li>点击筛选按钮，可以立即显示筛选后的结果</li><li>点击终止按钮，可以恢复初始的显示</li><li>配置好的高级筛选，可以导出和导入，进行备份</li><li>高级筛选中的“开始筛选”和“结束筛选”<ul><li>默认的筛选是从第一行第一个字符到最后一个字符；或者是同一列的所有内容</li><li>可以通过开始筛选和结束筛选来定义筛选的范围，比如从第50个字符开始筛选到第150个字符结束，以此来设定一个准确的范围</li></ul></li><li>“开始筛选”复选框， 用字符数指定开始筛选的位置。如果同时存在“开始筛选”的项和另一个“结束筛选”的项，则 Emeditor 仅显示与“开始筛选”匹配的的行与“结束筛选”匹配的行之间的行。</li><li>“结束筛选”复选框，用字符数指定结束筛选的位置。 “对前一个条件用逻辑或运算（OR）”复选框，对当前条件与前一个条件执行逻辑或运算（OR）。如果不勾选该复选框，会默认使用逻辑与运算（AND）。</li><li>阻止对多行同时进行修改，我测试不生效……</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1iv411a711?spm_id_from=333.999.0.0">EmEditor系列教程-14集-多重选择与反向选择</a> ✅ 2022-07-22<ul><li>在通过【ctrl+点选&#x2F;滑选】【非CSV模式下垂直选择（alt+区域）】【ctrl+F查找模式下—全部选择】【Ctrl+shift+A选择全部相同区域】</li><li>ctrl+F—提取——使用输出栏显示结果（在文件下方显示输出结果栏），默认输出到一个新的文件</li><li>通过正则表达式截选弹幕文件所需时间片段的提取→正则表达式—全部选择—编辑—高级—反向选择—删除</li><li>反向选择—删除—换行符也会删除—通过修改Ctrl+F正则表达式为<code>（\d\d:\d\d:\d\d）|\n</code> —再反向选择—删除（则会保留换行符）</li><li>行编号栏右键—删除空行</li><li>编辑—转换所选内容—删除空行&#x2F;删除前导空格&#x2F;删除尾随空格&#x2F;分割行&#x2F;连接行&#x2F;大写&#x2F;小写&#x2F;首字母大写&#x2F;半角&#x2F;全角&#x2F;将空格转换为制表符&#x2F;将制表符转换为空格</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Dy4y1E7z7?spm_id_from=333.999.0.0">EmEditor系列教程-15集-剪贴板历史与循环粘贴</a> ✅ 2022-07-22<ul><li>剪贴板（clipboard），windows剪贴板（Win+V）</li><li>工具—所有命令—编辑—粘贴—显示剪贴板记录</li><li>工具—自定义—编辑—“在启动时检索Windows剪贴板历史记录”，必须在Win10上</li><li>在Win7系统上，“监控外部应用程序中的剪贴板复制内容”</li><li>编辑—显示剪贴板记录（Ctrl+Shift+V&#x2F;insert）</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1ab4y1v7Gp?spm_id_from=333.999.0.0">EmEditor系列教程-16集-普通查找功能</a> ✅ 2022-07-23<ul><li>所选内容（查找选取字符串）；光标处文字（查找光标所在的句子）</li><li>勾选“自动保存”时，可以选择“上次使用的值”和固定值”，默认勾选，选择框下拉可见</li><li>可以激活“多行模式”，同时查找多行内容；取消则会显示换行符</li><li>从批处理(批次)列表中选择，需要有批处理内容</li><li>匹配大小写（影响常规检查和正则查找）；仅搜索选取（勾选则仅在鼠标选定的范围匹配）</li><li>渐进式搜索（根据搜索条件变化而自动匹配）、搜索群组中的文档</li><li>循环（取消勾选则会在最后一行停止匹配）、显示匹配数（勾选则下方显示匹配数量）</li><li>选择所有匹配项（选择后可批量左右移动光标进行编辑）、不连续选区编辑</li><li>设置为书签后，在“行号”上点击右键，对书签进行操作；使用筛选功能“仅书签行”；拆分文件按书签行拆分</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1pF411B7zt?spm_id_from=333.999.0.0">EmEditor系列教程-17集-转义序列查找功能</a> 第2遍<ul><li><code>\ooooooo</code>，Unicode 字符在八进制表达式中</li><li><code>\xhhhh</code> ，Unicode在十六进制表达式中</li><li><code>\v</code> ，垂直制表符；<code>\b</code> 退格；<code>\f</code> 换页；<code>\a</code> ，警告（响铃）</li><li>空字符（<code>\0</code>）可能不能使用，一定要用<code>\n</code> 而不是<code>\r</code> </li><li>用Unicode值<code>\x**</code> 的方式查找C0、C1类控制和基本拉丁字符，范围为：“<code>\x00-\xff</code>”</li><li>例如“汉”—U+6C49(<code>\x6c49</code>) ，简体中文（GB2312）:0xBA  ，7(<code>\x37</code>)，2（<code>\x32</code>）</li><li>自定义工具栏可以在下方显示该代码</li></ul></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1CS4y1f7fN?spm_id_from=333.999.0.0">EmEditor系列教程-18集-数字范围查找</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1fT4y1C7sJ?spm_id_from=333.999.0.0">EmEditor系列教程-19集-正则表达式查找</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1yF411n7JT?spm_id_from=333.999.0.0">EmEditor系列教程-20集-提取字符串</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV11T4y1z7nK?spm_id_from=333.999.0.0">EmEditor系列教程-21集-批处理查找</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV12A4y1U7SQ?spm_id_from=333.999.0.0">EmEditor系列教程-22集-批处理查找中添加链接文件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1JZ4y1h7Eq?spm_id_from=333.999.0.0">EmEditor系列教程-23集-多文件查找</a></li><li><input disabled="" type="checkbox"> <font color=#fff>……缺7集</font></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV137411a7cL?spm_id_from=333.999.0.0">EmEditor功能实战-30集-基于首列在行尾插入计数器</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1D7411E7Eb?spm_id_from=333.999.0.0">EmEditor功能实战-31集-小说标题的排序与提取</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1fE411H75B?spm_id_from=333.999.0.0">EmEditor功能实战-32集-正则表达式_将两列文本提取到一列</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1SE411V7Me?spm_id_from=333.999.0.0">EmEditor功能实战-33集-正则表达式_同一行中的中英文分类排序连接</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV16t4y1m7u7?spm_id_from=333.999.0.0">EmEditor功能实战-34集-正则表达式_多行内容的查找替换</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1yp4y1C7Cw?spm_id_from=333.999.0.0">EmEditor功能实战-35集-同一个文件中词语出现的次数</a><ul><li>排序操作（按出现次数排序），切换到CSV模式，制表符分隔，标题行设置为0</li><li>选择“多列排序”，对首列排序，选择“按次数降序”，检查可能出现的最大行数</li><li>排序操作（按字母排序）时，如果多个词组出现次数相同，则会随机排序，因此还要再按“字母排序”再排一次！</li><li>正则替换（插入空行)，查找替换前设置</li><li>点击查找对话框的“高级”，激活正则表达式“<code>.</code>”可匹配换行符，进行多行匹配。</li><li>设置正则搜索的附加行为1000（大于最大行850）:<ul><li>设置太小，搜索会遗漏</li><li>设置太大，速度会极大的降低</li></ul></li><li>正则替换(插入空行)，查找表达式，查找内容：<code>(^\w+)\n(\1\n)*</code>，第一段：<code>(^\w+)\n</code> 从行首开始查找，任意内容，以回车结束，第二段：<code>(\1\n)</code> 与前面找到的内容一致，没有或多次</li><li>正则替换(插入空行)，替换表达式（找到的结果下方插入空行），替换内容：<code>\0\n</code> ，第一段：<code>\0</code> 返回找到的内容，第二段：<code>\n</code> 插入一个空行</li><li>编号操作（垂直编辑模式），快捷键操作<ul><li>按<code>Alt+E</code> ，再按<code>E</code> （执行菜单 “编辑—垂直选择”）</li><li>按<code>End</code> 键，去到所有行尾</li><li>按<code>Alt+N</code> 执行编号操作，激活相应选项（跳过空白行，于空白行之后重新开始计数）</li></ul></li><li>筛选空行及上方的行<ul><li>筛选空行<ul><li>输入“<code>\w</code>” 作为筛选条件，表示任意字符的行</li><li>激活“取反” ，表示空行</li><li>激活“显示空行上方的1行”</li><li>复制筛选出来的内容，在新文件中粘贴</li></ul></li></ul></li><li>添加制表符并删除空行，查找“<code>\d+</code>” 替换为“<code>\t\0</code>” ，右键菜单删除空行（编辑—转换所选内容—删除空行）</li></ul></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Ft4y1m7V7?spm_id_from=333.999.0.0">EmEditor功能实战-36集-使用筛选和排序等功能高效处理文本</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Ji4y1G7Kc?spm_id_from=333.999.0.0">EmEditor功能实战-37集-软件升级与配置保留</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wv411q7fV?spm_id_from=333.999.0.0">EmEditor功能实战-38集-TXT文本中换行时直接插入4个空格</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13T4y177kf?spm_id_from=333.999.0.0">EmEditor功能实战-39集-免费版的EmEditor功能概览</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1gy4y1n7hi?spm_id_from=333.999.0.0">EmEditor功能实战-40集-提取奇&#x2F;偶数行、任意数字的倍数行</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1rU4y1W7ym?spm_id_from=333.999.0.0">EmEditor功能实战-41集-查找重复行后插入顺序数字</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1VX4y1V7AZ?spm_id_from=333.999.0.0">EmEditor功能实战-42集-自动填充功能的巧妙应用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1UA4115735?spm_id_from=333.999.0.0">EmEditor功能实战-43集-使用CSV功能依据A文件提取B文件中内容</a><ul><li>编辑—CSV—合并，包含所有不匹配的行（相当于辅助列，保留独有的内容）</li><li>匹配条件，匹配整个字符串（完全匹配）</li><li>筛选功能，以辅助列为筛选列，输入<code>.</code>号，取反，剩下的就是所需要的不同的行</li></ul></li></ul><h2 id="emeditor正则表达式实例整理"><a href="#emeditor正则表达式实例整理" class="headerlink" title="emeditor正则表达式实例整理"></a>emeditor正则表达式实例整理</h2><h5 id="单词太多，利用正则表达式给单词前面批量加个复选框"><a href="#单词太多，利用正则表达式给单词前面批量加个复选框" class="headerlink" title="单词太多，利用正则表达式给单词前面批量加个复选框"></a>单词太多，利用正则表达式给单词前面批量加个复选框</h5><p>查找<code>^\s*$\n(.*?)$</code> 替换为 <code>\n- [ ] \1</code></p><h5 id="把大写单词全部换为小写"><a href="#把大写单词全部换为小写" class="headerlink" title="把大写单词全部换为小写"></a>把大写单词全部换为小写</h5><p>查找<code>^(.*?)$</code> 替换为 <code>\L\1</code><br>查找<code>[a-z]</code> 替换为 <code>\L\0</code></p><h5 id="把所有单词首字母换为大写"><a href="#把所有单词首字母换为大写" class="headerlink" title="把所有单词首字母换为大写"></a>把所有单词首字母换为大写</h5><p>查找<code>([a-z])([a-z]+)</code> 替换为 <code>\U\1\L\2</code></p><h5 id="值保留首字母并且大写"><a href="#值保留首字母并且大写" class="headerlink" title="值保留首字母并且大写"></a>值保留首字母并且大写</h5><p>查找<code>([a-z])([a-z]+)</code> 替换为 <code>\U\1\E</code></p><ul><li>[[..&#x2F;06-需吃透的内容&#x2F;06-EmEditor-正则表达式语法（一）]]</li></ul><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><ul><li><a href="http://www.360doc.com/content/14/1209/04/20545288_431435687.shtml">Emeditor 正则表达式 提取文本 宏</a></li></ul><h2 id="书签"><a href="#书签" class="headerlink" title="书签"></a>书签</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/399559247">windows平台最强文本编辑器，没有之一-知乎</a></li></ul><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;近期关注&quot;&gt;&lt;a href=&quot;#近期关注&quot; class=&quot;headerlink&quot; title=&quot;近期关注&quot;&gt;&lt;/a&gt;近期关注&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.emeditor.org/zh-cn/cmd_edit_delete_d</summary>
      
    
    
    
    <category term="02-学习中" scheme="https://berlin2022.github.io/categories/02-%E5%AD%A6%E4%B9%A0%E4%B8%AD/"/>
    
    
    <category term="emeditor" scheme="https://berlin2022.github.io/tags/emeditor/"/>
    
    <category term="plan" scheme="https://berlin2022.github.io/tags/plan/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="https://berlin2022.github.io/2022-07-16-2f57a694.html"/>
    <id>https://berlin2022.github.io/2022-07-16-2f57a694.html</id>
    <published>2022-07-15T16:29:00.000Z</published>
    <updated>2022-08-01T10:43:14.473Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>正则表达式和通配符不同，常见的正则表达式有Boost.Regex引擎、Onigmo引擎、Perl语法等其他语法表达式，不同的程序&#x2F;编辑器略有不同，这里主要学习主要的通用语法和emeditor语法。</p><h2 id="bilibili-amp-编程胶囊配套"><a href="#bilibili-amp-编程胶囊配套" class="headerlink" title="bilibili&amp;编程胶囊配套"></a>bilibili&amp;编程胶囊配套</h2><h3 id="讲解"><a href="#讲解" class="headerlink" title="讲解"></a>讲解</h3><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19t4y1y7qP">正则表达式30分钟入门40分钟进阶（绝对能学会）</a> !important ✅ 2022-06-27 第1遍</li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19t4y1y7qP?p=2">正则表达式进阶</a> !important ✅ 2022-06-27 第2遍<h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3></li><li>编程胶囊-正则表达式入门  2022-06-27  第1遍 <ol><li>正则表达式入门<ul><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/0/0">匹配2020的数据</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/0/1">字符组</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/0/2">匹配多个单词</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/0/3">区间</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/0/4">匹配特殊字符</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/0/5">匹配字母</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/0/6">匹配目标数据</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/0/7">取反</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/0/8">不含小写字母的数据</a></li></ul></li><li>快捷方式<ul><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/1/0">快捷匹配数字和字母</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/1/1">匹配空白</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/1/2">单词边界</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/1/3">匹配数字和小写字母</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/1/4">快捷方式取反</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/1/5">开始和结束</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/1/6">任意字符</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/1/7">可选字符</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/1/8">可选任意字符</a></li></ul></li><li>匹配多个数据<ul><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/2/0">重复</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/2/1">重复区间</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/2/2">开闭区间</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/2/3">匹配所有手机号码</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/2/4">匹配网站地址</a></li></ul></li><li>总结与实践<ul><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/3/0">实践：匹配以fu结尾的数据</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/3/1">实践：匹配电话号码</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/3/2">实践：匹配所有王姓同学的信息</a> </li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter1/3/3">总结</a></li></ul></li></ol></li><li>编程胶囊-正则表达式进阶<ol><li>分组<ul><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/0/0">分组</a> <ul><li><code>&lt;\w+&gt;(.*?)&lt;/\w+&gt;</code> 一阶</li><li><code>&lt;(\w+)&gt;(.*?)&lt;/\1&gt;</code> 二阶</li><li><code>&lt;div&gt;(hi)&lt;/div&gt;</code> 现在</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/0/1">提取p标签中的数据</a> <ul><li><code>&lt;\w+&gt;(.*?)&lt;/\w+&gt;</code></li><li><code>&lt;p&gt;([a-z]+)&lt;/p&gt;</code> 现在</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/0/2">提取学号</a> <ul><li><code>(\d&#123;4&#125;)[\-\s]?(\d&#123;4&#125;)[\-\s]?(\d&#123;2&#125;)</code></li><li><code>(2019)[\-\s]?(5013)[\-\s)]?(08)</code> 现在</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/0/3">提取年月日</a> <ul><li><code>(\d+)+[\-\/](\d+)+[\-\/](\d+)</code></li><li><code>(\d+)\W(.+)\W(.+)</code> 简化</li><li><code>(2020)[-\/]([0-2]&#123;1,2&#125;)[-\/]([02]&#123;1,2&#125;)</code> 现在</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/0/4">或者条件</a> <ul><li><code>\w+(.mp4|.avi|.wmv|.rmvb)</code></li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/0/5">非捕获分组</a> <ul><li><code>(?:\w+\W)(\d+)</code></li><li><code>(?:\d&#123;1,5&#125;|tel)[\-:](75855)</code> 现在</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/0/6">分组使用技巧</a> <ul><li><code>(\d&#123;4&#125;)[\-\s\.\/]?(\d&#123;1,2&#125;)[\s\-\/\.]?(\d+)</code> </li><li><code>(2020)[\-\.\s\/]?([01]&#123;1,2&#125;)[\-\.\s\/]?([02]&#123;1,2&#125;)</code> 现在</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/0/7">提取所有电话号码</a> <ul><li><code>\W?(\d&#123;3&#125;)[\)\.\-]?(\d&#123;3&#125;)\W?(\d+)</code> 一阶</li><li><code>\W?(\d&#123;3&#125;).*?(\d&#123;3&#125;)\W?(\d+)</code>  优化</li><li><code>\(?211[\)\.\-]?867[\.\-\s]?3676</code>  现在</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/0/8">分组的回溯引用</a> <ul><li><code>.*(\w+)(\w+)\2\1.*</code></li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/0/9">回溯引用的实践</a> <ul><li><code>(\w+)(\w+)\1\2</code>  一阶 单个字母看一组</li><li><code>(\w.+)\1</code>  二阶 两个字母看一组</li></ul></li></ul></li><li>先行断言<ul><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/1/0">正向先行断言</a> <ul><li><code>(?=.*?[a-z])(?=.*?[0-9])(?=.*?[A-Z]).*[^.*?]&#123;8&#125;</code>  一阶段</li><li><code>(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[\d]).&#123;8,&#125;</code>  二阶段 简化</li><li><code>(?=.*?[a-z])(?=.*?[0-9])(?=.*?[A-Z]).*[^.*?]&#123;7&#125;</code>   三阶段  纠错</li><li><code>(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[\d])\w&#123;8,&#125;</code> 现在优化精准度</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/1/1">反向先行断言</a> <ul><li><code>\w+\W.*[^qq.com].*</code>   一阶段</li><li><code>\w+@(?!qq).+</code>  二阶段 简化</li><li><code>^(?&lt;!\_)\w+@(?!qq)[^\_]\w+(.com|.cn|.net|.com.cn|.cc|.gov|.wang|.me|.pw|...)</code>  现在优化精准度</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/1/2">匹配标签</a> <ul><li><code>&lt;(\w+)&gt;.*?(?!&lt;p&gt;)(?!&lt;/p&gt;)&lt;/(\1)&gt;</code>  没有找规律</li><li><code>^(?!&lt;p&gt;)</code>  peach版</li></ul></li></ul></li><li>后行断言<ul><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/2/0">正向后行断言</a> <ul><li><code>(?&lt;=王).&#123;1,2&#125;(?=.*)</code></li><li><code>(?&lt;=王).&#123;1,2&#125;(?=.*)&#123;1,2&#125;</code></li><li><code>(?&lt;=.*王)(?=.*).&#123;1,2&#125;</code></li><li><code>(?&lt;=.*王).&#123;1,&#125;</code></li><li>……</li><li><code>(?&lt;=王).&#123;1,&#125;</code> 优化版</li><li><code>(?&lt;=王)([\u4e00-\u9fa5]&#123;1,2&#125;)</code> 以前太年轻，现在优化的精准提取版</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/2/1">反向后行断言</a> <ul><li><code>^\$[^\$].+\$$</code> 一阶段</li><li><code>^\W[^\$].+\W$</code> 二阶段</li><li><code>^\W.(?&lt;!\$).+\W$</code> 三阶段</li><li><code>(?&lt;!.)\$(?!\$)</code> 四阶段</li><li><code>^\$(?!\$)</code> 最短化</li><li><code>(?&lt;!\$)\$$</code>  逆向</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/2/2">匹配两个美元符号中的数据</a> <ul><li><code>(?&lt;!\$|add|b\^2\s|\*2\s)\$&#123;2&#125;$</code>  逆向</li><li><code>^\$&#123;2&#125;(?!\$)</code> 最短化</li><li><code>题目没出好，(?&lt;!\$)\$&#123;2&#125;(?!\$)</code> 这个应该最准，但是不对！！！</li></ul></li></ul></li><li>总结与实践<ul><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/3/0">实践：提取所有人的生日</a> <ul><li><code>\W+\s\d&#123;4&#125;.[\.]?(\d+).[\.]?(\d+)\W?</code> 第一次写的太按照字面意思了，没有找规律</li><li><code>\W+\s\d&#123;4&#125;.(\d&#123;1,2&#125;).(\d&#123;1,2&#125;)\W?</code> 现在给自己写的优化一次</li><li><code>..\s\d&#123;4&#125;.(\d&#123;1,2&#125;).(\d&#123;1,2&#125;).?</code>  优化第二次，提高准确度</li><li><code>\W&#123;2,4&#125;\s19\d&#123;2&#125;[\.\-年](\d&#123;1,2&#125;)[\.\-月](\d&#123;1,2&#125;)日?</code> 优化第三次，提高准确度</li><li><code>[\u4e00-\u9fa5]&#123;2,4&#125;\s19\d&#123;2&#125;[\.\-年](\d&#123;1,2&#125;)[\.\-月](\d&#123;1,2&#125;)日?</code>  优化第四次</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter2/3/1">实践：匹配所有的小数</a> <ul><li><code>^\d&#123;1,&#125;\.(\d+)(?!.)</code> 我写的太按照字面意思了，没有找规律</li><li><code>^\d+\.\d+$</code>   Jill Chen版</li></ul></li></ul></li></ol></li><li>正则表达式通关挑战<ul><li><input checked="" disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter3/0/0">匹配所有XML标签</a> <ul><li><code>\&lt;(\w+)\&gt;\w+\&lt;\/\1\&gt;</code></li></ul></li><li><input disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter3/1/0">提取所有标题</a> </li><li><input disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter3/2/0">匹配变量</a> </li><li><input disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter3/3/0">匹配有规律的单词</a> </li><li><input disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter3/4/0">匹配不能以0开头的数据</a> </li><li><input disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter3/5/0">提取所有薪资</a> </li><li><input disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter3/6/0">匹配邮箱号</a> </li><li><input disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter3/7/0">匹配质数个的x</a> </li><li><input disabled="" type="checkbox"> <a href="https://codejiaonang.com/#/course/regex_chapter3/8/0">总结</a></li></ul></li></ul><h2 id="收藏书签"><a href="#收藏书签" class="headerlink" title="收藏书签"></a>收藏书签</h2><ul><li><a href="https://yelog.org/2016/10/04/regular-expression/">正则表达式详解|叶落阁</a></li><li><a href="https://www.cnblogs.com/soujer/p/soujerzz.html">技术分享-正则表达式 - Soujer - 博客园</a></li><li><a href="https://www.cnblogs.com/dyd520/p/15919567.html">正则表达式 提取文本中的所有链接 - 罕 - 博客园</a></li><li><a href="https://zhidao.baidu.com/question/2202386614064079148.html">txt文件中制表符是什么？_百度知道</a></li><li><a href="https://www.freesion.com/article/9590773644/">07 用URL正则实现文章链接跳转 - 灰信网（软件开发博客聚合）</a></li><li><a href="https://blog.csdn.net/weixin_39639686/article/details/111346187">txt替换回车键符号怎么打_高级替换中的特殊格式_weixin_39639686的博客-CSDN博客</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;正则表达式和通配符不同，常见的正则表达式有Boost.Regex引擎、Onigmo引擎、Perl语法等其他语法表达式，不同的程序&amp;#x2F;</summary>
      
    
    
    
    <category term="02-学习中" scheme="https://berlin2022.github.io/categories/02-%E5%AD%A6%E4%B9%A0%E4%B8%AD/"/>
    
    
    <category term="正则表达式" scheme="https://berlin2022.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
</feed>
